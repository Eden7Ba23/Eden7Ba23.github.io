<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>EdenJohnson瞎写小屋</title>
  
  <subtitle>一个挖了无数坑却一个没填的准初三屑的博客</subtitle>
  <link href="https://blog.edenjohnson.cyou/atom.xml" rel="self"/>
  
  <link href="https://blog.edenjohnson.cyou/"/>
  <updated>2022-02-13T11:28:08.161Z</updated>
  <id>https://blog.edenjohnson.cyou/</id>
  
  <author>
    <name>EdenJohnson</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>“[DN42配网日记]关于我是怎么用babeld和iBGP FullMesh整好内网的”</title>
    <link href="https://blog.edenjohnson.cyou/2022/01/27/babeld-iBGP-fullmesh-notes/"/>
    <id>https://blog.edenjohnson.cyou/2022/01/27/babeld-iBGP-fullmesh-notes/</id>
    <published>2022-01-27T20:00:48.000Z</published>
    <updated>2022-02-13T11:28:08.161Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>这篇文章算记录向，当然也有教学向用途，请酌情阅读。</p><p>本文中所有[]和&lt;&gt;在实际应用到配置文件的时候<strong>不需要保留！</strong></p><p>本文随时改进。现处版本：3。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">define OWNAS = [你的AS号，不带AS前缀];</span><br><span class="line">define OWNIP = [你正在操作的机器的DN42 IP];</span><br><span class="line">define OWNIPv6 = [你正在操作的机器的DN42 IPv6];</span><br><span class="line">define OWNNET = [CIDR格式，你拥有的DN42 IP段];</span><br><span class="line">define OWNNETv6 = [CIDR格式你拥有的DN42 IPv6段];</span><br></pre></td></tr></table></figure><p>众所周知，<del>咱最近几天沉迷于DN42网络无法自拔</del>，Peer数量也是稳步增加。</p><p>但是这里有个问题，我一直没有把内网搞好。</p><p>前期一边继续扩展Peer一边尝试RouteReflector</p><p>结果RR死也配置不了，还造成了我心态崩掉直接重装所有系统的悲剧：</p><p><img src="https://pic.edenjohnson.cyou/images/20220127211137.png" loading="lazy"></p><p>此条在DN42 Unofficial Telegram有记录，如果有看到的可以评论区说一下看到的感受）</p><p>于是乎就和<code>AS4242421817</code>进行了深入的<del>意见交换</del>，</p><p><img src="https://pic.edenjohnson.cyou//images/20220127211809.png" loading="lazy"></p><p>最终选定了babeld+iBGP FullMesh的组合方式</p><p>在本文开始之前，我想送给各位几句：</p><p><strong>Peer和内网建设一定要并行！一定！一定！</strong></p><p><strong>莫相信某些人说的先把自己网路建设好再来！没有别人的路由表怎么设置都是摸瞎！</strong></p><p><strong>不要学我！不要学我！不！要！学！我！</strong></p><p><strong>我也是刚进入DN42的新人，难免有考虑不周，如有错误请直接指出！</strong></p><h2 id="babeld的设置"><a href="#babeld的设置" class="headerlink" title="babeld的设置"></a>babeld的设置</h2><p><em>机器间可以不FullMesh，<a href="https://en.wikipedia.org/wiki/Interior_gateway_protocol">IGP</a>会帮你的。</em></p><p><em>在正式跳入这个环节之前，先介绍一下几种IGP</em></p><p><img src="https://pic.edenjohnson.cyou//images/20220127212918.png" loading="lazy"></p><p><em>对了如果你要喊“iBGP + eBGP Confederation YES”请<del>立刻滚到下一章节</del></em></p><p>好了，继续。</p><p>在这部分开始之前，请检查好你<strong>是否已经在各机器间搭建好了WireGuard</strong>，保证各机器间能<strong>间接联通</strong>。</p><blockquote><p>以下配置文件由刚刚喊过“iBGP + eBGP Confederation YES”的 <a href="https://blog.bugsur.xyz/dn42/">AS4242423743</a> 写成，至于这位会不会礼貌我另说（</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ipv6-subtrees true</span><br><span class="line">random-id true</span><br><span class="line">interface &lt;&gt; type tunnel faraway true max-rtt-penalty 128</span><br><span class="line">in ip &lt;OWNNET&gt; allow</span><br><span class="line">in ip &lt;OWNNETv6&gt; allow</span><br><span class="line">in deny</span><br><span class="line">redistribute ip &lt;OWNNET&gt; allow</span><br><span class="line">redistribute ip &lt;OWNNETv6&gt; allow</span><br><span class="line">redistribute deny</span><br></pre></td></tr></table></figure><p><strong>以下内容请酌情结合<a href="https://manpages.debian.org/testing/babeld/babeld.8.en.html#CONFIGURATION_FILE_FORMAT">babeld(8) — babeld — Debian testing — Debian Manpages</a>理解</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ipv6-subtrees true</span><br><span class="line">random-id true</span><br></pre></td></tr></table></figure><p>分别是随机Ronter-ID和原生IPv6转发的设置，其实并不重要。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">interface &lt;&gt; type tunnel faraway true max-rtt-penalty 128</span><br></pre></td></tr></table></figure><p>上面的<code>&lt;&gt;</code>中填入你搭建的WireGuard的端口，如果你忘了的话，赶紧的<code>ip a</code></p><p><code>type</code>选项用来指定这一条连线的类型，虽然默认自行检测，但是还是建议指定为隧道（<code>tunnel</code>）类型</p><blockquote><p>其他内容现在也并不重要，如果好奇可以继续去Manpage阅读。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">in ip &lt;OWNNET&gt; allow</span><br><span class="line">in ip &lt;OWNNETv6&gt; allow</span><br><span class="line">in deny</span><br><span class="line">redistribute ip &lt;OWNNET&gt; allow</span><br><span class="line">redistribute ip &lt;OWNNETv6&gt; allow</span><br><span class="line">redistribute deny</span><br></pre></td></tr></table></figure><p>此段落用于过滤babeld应该使用的路由表。</p><p>在本例当中，很明显，我们只需要babeld去处理我们网内的路由，</p><p>所以我们用in和redistribute指定babeld管理我们拥有段的路由。</p><blockquote><p>但实际上“管理”只是一个总称，实际上babeld做的事情很多，这个也可以到Manpage阅读。</p></blockquote><p>将这一段内容部署在每一台内网的机器的<code>/etc/babeld.conf</code>里面，然后启动babeld服务。</p><p>喝口茶，然后通过<code>ip route get [任何接入这个内网的服务器的DN42 IP]</code>，查看babeld是否生效。</p><p><img src="https://pic.edenjohnson.cyou//images/20220127224038.png" loading="lazy"></p><blockquote><p> 这是没有上线的我家里用来登录DN42服务的N4节点，只有和N1的连接，但是也得到了到N2的路由表。</p></blockquote><p>到现在，你应该可以在任何一个节点ping 这个网路上其他节点的DN42 IP&#x2F;IPv6 了。我们继续。</p><h2 id="bird2"><a href="#bird2" class="headerlink" title="bird2"></a>bird2</h2><p><del>上鸟！</del></p><p>我们以 <a href="https://dn42.dev/howto/Bird2#example-configuration">DN42给出的Bird示例文档为基础</a>改动配置文件。</p><blockquote><p>以下配置文件，介绍由 <a href="https://blog.kskb.eu.org/2021/03/dn42-peering.html">AS4242421817</a> 写成，本人进行了部分整理</p></blockquote><p>增加部分：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">protocol direct &#123;</span><br><span class="line">  ipv4;</span><br><span class="line">  ipv6;</span><br><span class="line">  interface &quot;[你用于连接内网的WireGuard统一前缀，如果没有就去掉通配符逐条添加]*&quot;;</span><br><span class="line">&#125;;</span><br><span class="line">template bgp dnnodes &#123;</span><br><span class="line">  local as OWNAS;</span><br><span class="line">  path metric on;</span><br><span class="line">  med metric on;</span><br><span class="line">  multihop;</span><br><span class="line">  enable extended messages on;</span><br><span class="line">  ipv4 &#123;</span><br><span class="line">    gateway recursive;</span><br><span class="line">    import all;</span><br><span class="line">    export filter &#123;</span><br><span class="line">            if net ~ OWNNETSET then reject;</span><br><span class="line">            accept;</span><br><span class="line">        &#125;;</span><br><span class="line">  &#125;;</span><br><span class="line">  ipv6 &#123;</span><br><span class="line">    gateway recursive;</span><br><span class="line">    import all;</span><br><span class="line">    export filter &#123;</span><br><span class="line">            if net ~ OWNNETSETv6 then reject;</span><br><span class="line">            accept;</span><br><span class="line">        &#125;;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>增删部分</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">protocol kernel &#123;</span><br><span class="line">    scan time 20;</span><br><span class="line">    learn;</span><br><span class="line">    ipv6 &#123;</span><br><span class="line">        import filter &#123;</span><br><span class="line">            if net ~ OWNNETSETv6 then accept;</span><br><span class="line">            reject;</span><br><span class="line">        &#125;;</span><br><span class="line">        export filter &#123;</span><br><span class="line">            if source = RTS_STATIC then reject;</span><br><span class="line">            if net ~ OWNNETSETv6 then reject;</span><br><span class="line">            krt_prefsrc = OWNIPv6;</span><br><span class="line">            accept;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">protocol kernel &#123;</span><br><span class="line">    scan time 20;</span><br><span class="line">    learn;</span><br><span class="line">    ipv4 &#123;</span><br><span class="line">        import filter &#123;</span><br><span class="line">            if net ~ OWNNETSET then accept;</span><br><span class="line">            reject;</span><br><span class="line">        &#125;;</span><br><span class="line">        export filter &#123;</span><br><span class="line">            if source = RTS_STATIC then reject;</span><br><span class="line">            if net ~ OWNNETSET then reject;</span><br><span class="line">            krt_prefsrc = OWNIP;</span><br><span class="line">            accept;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>简单来说，这一些增删</p><ul><li><p>定义了<code>dnnodes</code>这一IGP协议模板</p></li><li><p>将与原来和Kernel打交道的地方加上了<code>learn;</code>，以将babeld帮我们寻好的路写到master表里面以供IGP使用。</p></li></ul><div class="info"><blockquote><p>在写出路由表的时候我们滤掉了我们IP段的内容，以避免bird包含内网信息，传到对端时和babeld打架导致babeld实例崩掉。</p></blockquote></div><div class="danger"><blockquote><p>在没有正确配置的情况下随意开启对Kernel路由表的learn<strong>十分危险</strong>！</p><p>这有可能<strong>造成路由劫持</strong>！</p><p>虽然DN42内ROA已经基本覆盖但是还是<strong>小心为上</strong>！</p><p>一些具体实例可见 <a href="https://误人子弟.pub/article/modify-website/how-to-kill-the-dn42-network.lantian/">《<a href="https://误人子弟.pub/article/modify-website/how-to-kill-the-dn42-network.lantian" title="如何引爆 DN42 网络（2020-08-28 更新）">如何引爆 DN42 网络（2020-08-28 更新）</a>》</a></p></blockquote></div><p>而配置与各FullMesh时只需要：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">protocol bgp [] from dnnodes &#123;</span><br><span class="line">  neighbor [远端DN42 IP] as &lt;OWNAS&gt;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>继承模板，填上远端，用自己AS开IGP，然后就可以<code>birdc c</code>了</p><p>再喝一口茶，用<code>birdc s r for [任何一个peer的DN42 IP/IPv6] all</code></p><p><img src="https://pic.edenjohnson.cyou//images/20220127232550.png" loading="lazy"></p><p>恭喜你！你已经完成了基于babeld和iBGP FullMesh的DN42 内网搭建。</p><h2 id="一些下一步建议"><a href="#一些下一步建议" class="headerlink" title="一些下一步建议"></a>一些下一步建议</h2><blockquote><p>日下部 詩, [2022-02-03 6:12 PM]<br>接下來還有個東西要弄，內網metrics</p><p>日下部 詩, [2022-02-03 6:12 PM]<br>假如你同時香港和usa都和我peer</p><p>日下部 詩, [2022-02-03 6:12 PM]<br>廣州節點要知道香港比較近，usa比較遠</p><p>日下部 詩, [2022-02-03 6:13 PM]<br>加拿大節點則是要知道usa比較近，hk比較遠</p><p>日下部 詩, [2022-02-03 6:13 PM]<br>babeld知道距離關係，但是bird不知道</p><p>日下部 詩, [2022-02-03 6:14 PM]<br>有幾個方法，直接在bird config裡面寫上cost</p><p>日下部 詩, [2022-02-03 6:17 PM]<br>首先babeld好像要打開<br>reflect-kernel-metric true</p><p>日下部 詩, [2022-02-03 6:18 PM]<br>讓babeld把cost寫入kernel</p><p>kernel路由表有一個metric屬性</p><p>kernel import filter補上</p><p>igp_metric &#x3D; krt_metric;</p></blockquote><p>（by AS4242421817）</p><p>祝你有一个美好的DN42旅途！</p><!-- EdenJohnson 2022.1.27 23:27--><h2 id="附录：《ufw会挡babeld这件事》"><a href="#附录：《ufw会挡babeld这件事》" class="headerlink" title="附录：《ufw会挡babeld这件事》"></a>附录：《ufw会挡babeld这件事》</h2><blockquote><p>_Eden Johnson, [2022-02-09 3:02 AM]<br>woc我似乎发现问题可能出现的地方了</p><p>_Eden Johnson, [2022-02-09 3:02 AM]<br>我换掉RU依然没有反应</p><p>日下部 詩, [2022-02-09 3:02 AM]<br>[ 😮 Sticker ]</p><p>_Eden Johnson, [2022-02-09 3:02 AM]<br>然后我一看</p><p>_Eden Johnson, [2022-02-09 3:02 AM]<br>好家伙</p><p>_Eden Johnson, [2022-02-09 3:02 AM]<br>谢谢你Vultr</p><p>_Eden Johnson, [2022-02-09 3:02 AM]<br>你他妈给我开ufw我谢谢你</p><p>_Eden Johnson, [2022-02-09 3:02 AM]<br>[ 🌿 Sticker ]</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;这篇文章算记录向，当然也有教学向用途，请酌情阅读。&lt;/p&gt;
&lt;p&gt;本文中所有[]和&amp;lt;&amp;gt;在实际应用到配置文件的时候&lt;strong&gt;不需要保留！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;本文随时改进。现处版本：3。&lt;/p&gt;
&lt;/blockquote</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Eden闲的没事研究 EPx 测楼房高度的几种方法</title>
    <link href="https://blog.edenjohnson.cyou/2021/12/12/how-can-you-measure-the-building-around-you/"/>
    <id>https://blog.edenjohnson.cyou/2021/12/12/how-can-you-measure-the-building-around-you/</id>
    <published>2021-12-12T14:58:51.000Z</published>
    <updated>2022-02-13T11:28:08.165Z</updated>
    
    <content type="html"><![CDATA[<!-- 这又是一篇花了2小时写完的水文章 --><p>那是一个阳光明媚的上午，有个同学说：你看那个旗杆的影子……嗯咳咳。</p><p>自从把初中的所有数学知识学习完之后我就一直想测量旗杆的高度，奈何没有测角仪和卷尺，只得作罢。</p><p>倒是突然想总结一下测量楼房的高度的方法了。</p><h2 id="第一种：直接扔东西下去"><a href="#第一种：直接扔东西下去" class="headerlink" title="第一种：直接扔东西下去"></a>第一种：直接扔东西下去</h2><p>让我们请出 $h &#x3D;\frac{1}{2}gt^2$ ，这是自由落体公式的推导，使用它的方法很简单，只需要一块重物，然后从楼房顶端扔出去，就可以用它计算了（</p><h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><p>准备材料少（停表，一块石头（或者其它重物），一根笔，一张纸，，一台计算器或者<del>一个足够好的脑子</del>）</p><h3 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h3><p>朋友，<strong>这不是理想环境</strong>，风会作用于重物导致时间错误，甚至可以把你的石头中途吹到窗台上（</p><h2 id="第二种：相似三角形"><a href="#第二种：相似三角形" class="headerlink" title="第二种：相似三角形"></a>第二种：相似三角形</h2><p>相似三角形有一个性质——对应边成比例</p><p>而这个知识就可以作为我们测量楼房高度的方式之一，所以我们可以将一个已知高度的棍子垂直立在地上（这个棍子随意，甚至可以拿自拍杆（</p><p>然后看那根棍子的顶端使其和楼房顶端重合，然后从棍子顶端拉一根线到你的眼睛前面，然后抓住它延长到地面，然后就可以计算了。<br>这里给出一个示意图，其中BC是楼高，DE是棍子高度，CE是棍子到楼的距离，AE是刚刚你抓住的绳子延长到地面之后与杆子的距离，这里必须强调<strong>A、C、E三点必须共线</strong>！</p><p><img src="https://raw.githubusercontent.com/Eden7Ba23/new-picture-hosting/main/images/20211212144020.png" loading="lazy"></p><p>可以看到在这张图里面，有：$BC \perp AC$和$DE \perp AC$<br>易得$\angle BCA &#x3D; \angle DEA$ 再加上 $\angle BAC &#x3D; \angle BAE$<br>就可以证明$\triangle BAC \sim \triangle DAE$，得$\frac{AE}{AC} &#x3D; \frac{DE}{BC} \Rightarrow AE \cdot BC &#x3D; AC \cdot DE \Rightarrow BC&#x3D; \frac{AC \cdot DE}{AE}$<br>而明显，因为AC，DE，AE这些东西都易于测量，所以我们很容易就可以得到BC也就是楼房高。</p><h3 id="优点-1"><a href="#优点-1" class="headerlink" title="优点"></a>优点</h3><p>对于那些楼顶不是平台或者难以到达的楼极其友好</p><h3 id="缺点-1"><a href="#缺点-1" class="headerlink" title="缺点"></a>缺点</h3><p>难以确定三点共线，不是所有人都有那么长的皮尺</p><h2 id="第三种：三角函数"><a href="#第三种：三角函数" class="headerlink" title="第三种：三角函数"></a>第三种：三角函数</h2><p><del>恭喜看到现在的各位，你们已经是测量楼房高度的专家了！</del>（什么鬼</p><p>明显保持三点共线比较困难，所以这种方法就可以只需要二点共线，是不是很简单（<br>这里依然有一张图片供以理解，AE，DF依然是一根棍子，上面绑上一个测角器，BG是楼高：</p><p><img src="https://pic.edenjohnson.cyou/images/20211212144121.png" loading="lazy"></p><p>易证：四边形ADFE与四边形ACGE都是矩形，所以$AD&#x3D;EF $ $AE&#x3D;CG$<br>而明显，EF是很容易测量的，你也可以控制它使他适合你所拥有的测量工具。</p><p>同时，使用测角器，你可以轻易测得$\angle BDC$和$\angle BAC$（简易测角器的制作我们的人教课本有写到，可以作为参考，如下图：</p><p><img src="https://pic.edenjohnson.cyou//images/202112121641485.png" loading="lazy"></p><p>此时我们通过观察，发现 $\angle BAC$和$\angle BDC$分别位于$\triangle ABC$和$\triangle DBC$里面，而这两个三角形有共同的直角边BC。而我们所有的AD是$AC-DC$的结果。<br> 想到什么了吗？对就是$\tan$，我们可以用公共直角边和角的正切值的差列方程：</p><p>设$BC$边为$x $ ，则据题列方程：</p><p>$\frac{x}{\tan \angle BAC}-\frac{x}{\tan \angle BDC} &#x3D; AD$</p><p>求出$x$之后加上杆子长$CG$ 就可以求出楼高$BG$了，是不是很简单？（</p><h3 id="优点-2"><a href="#优点-2" class="headerlink" title="优点"></a>优点</h3><p>只需要确定A、D两点共线，避免了不必要的误差<br>只需要测量一条边，不需要十分长的皮尺</p><h3 id="缺点-2"><a href="#缺点-2" class="headerlink" title="缺点"></a>缺点</h3><p>测角器需要自制，而且明显角度偏差会很大（</p><h2 id="End"><a href="#End" class="headerlink" title="End"></a>End</h2><p>至少在现在我能想到的方法就是这些了，</p><p>不知道各位有没有什么其他的方法可以评论区留言，这篇文章就水完了，我们明年见（</p>]]></content>
    
    
      
      
    <summary type="html">&lt;!-- 这又是一篇花了2小时写完的水文章 --&gt;

&lt;p&gt;那是一个阳光明媚的上午，有个同学说：你看那个旗杆的影子……嗯咳咳。&lt;/p&gt;
&lt;p&gt;自从把初中的所有数学知识学习完之后我就一直想测量旗杆的高度，奈何没有测角仪和卷尺，只得作罢。&lt;/p&gt;
&lt;p&gt;倒是突然想总结一下测量楼房的高</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>《ArchLinux上操蛋的 GSM 网络嗅探配置 》</title>
    <link href="https://blog.edenjohnson.cyou/2021/11/06/install-grgsm-on-archlinux/"/>
    <id>https://blog.edenjohnson.cyou/2021/11/06/install-grgsm-on-archlinux/</id>
    <published>2021-11-06T16:32:05.000Z</published>
    <updated>2022-02-13T11:28:08.165Z</updated>
    
    <content type="html"><![CDATA[<p>在阅读本文章之前，请先去<a href="https://ibcl.us/GSM-Sniffing_20200826/">隔壁I BCL. 的文章补课</a>。</p><p>同时请注意本文章写于2021.11.6，请注意时间导致的信息改变。</p><hr><p>因为Debian和Arch两大发行版的巨大不同之处</p><p>博主今天下午花了4个小时，解决完各种错误，才接收到944.2MHz的GSM信号</p><p>在这里以本文章记述，如果能有人为此少走点弯路那也是好的（</p><hr><blockquote><p>本文的环境搭建将会以I BCL. 的上文作为基础。</p></blockquote><p>让我们回到开始，一步一步来让原来用在Debian的指令行适用于Arch：</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install -y cmake libusb-1.0-0-dev build-essential libtool \</span><br><span class="line">  automake autoconf libfftw3-dev pkg-config python-scipy python-docutils \</span><br><span class="line">  libosmocore-dev libboost-all-dev swig doxygen git \</span><br><span class="line">  gnuradio-dev gr-osmosdr libcppunit-dev liblog4cpp5-dev  </span><br></pre></td></tr></table></figure></blockquote><p>根据我在 <a href="https://archlinux.org/packages/">https://archlinux.org/packages/</a> 的<del>高强度</del>查询，以下是软件包对应表：</p><table><thead><tr><th>Debian Buster 包名</th><th>ArchLinux 包名（2021.11.6）</th><th>备注</th></tr></thead><tbody><tr><td>libusb-1.0-0-dev</td><td>libusb</td><td></td></tr><tr><td>build-essential</td><td>base-devel</td><td></td></tr><tr><td>libfftw3-dev</td><td>fftw</td><td></td></tr><tr><td>libosmocore-dev</td><td>libosmocore</td><td><a href="https://aur.archlinux.org/packages/libosmocore">AUR</a></td></tr><tr><td>libboost-all-dev</td><td>boost</td><td></td></tr><tr><td>libcppunit-dev</td><td>cppunit</td><td></td></tr><tr><td>liblog4cpp5-dev</td><td>log4cpp</td><td></td></tr></tbody></table><p>但～是～</p><p>有以下软件包需要注意：</p><p><a href="https://aur.archlinux.org/packages/libosmocore/#comment-758571">libosmocore 中出现了multiple definition问题</a>；</p><p><a href="https://github.com/ptrkrysik/gr-gsm/issues/582">GR-GSM目前仍未被Port到GnuRadio 3.9版本</a>，这里还不能先安装gnuradio 软件包。</p><p>所以最终第一步安装命令如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S cmake libusb base-devel libtool automake autoconf fftw pkg-config python-scipy python-docutils boost swig doxygen git cppunit log4cpp</span><br></pre></td></tr></table></figure><p>接下来我们处理gr-gsm和libosmocore</p><p>libosmocore： 使用 <a href="https://aur.archlinux.org/packages/libosmocore/#comment-777014">-git</a> AUR包</p><p>gnuradio： 在<a href="https://arch-archive.tuna.tsinghua.edu.cn/2021/07-19/community/os/x86_64/">Tuna于7月19日Archive的Arch Linux Rollback Machine</a>下载，你需要下载以下软件包：</p><blockquote><p><a href="https://arch-archive.tuna.tsinghua.edu.cn/2021/07-19/community/os/x86_64/gnuradio-3.8.2.0-2-x86_64.pkg.tar.zst">https://arch-archive.tuna.tsinghua.edu.cn/2021/07-19/community/os/x86_64/gnuradio-3.8.2.0-2-x86_64.pkg.tar.zst</a></p><p><a href="https://arch-archive.tuna.tsinghua.edu.cn/2021/07-19/community/os/x86_64/gnuradio-osmosdr-0.2.3-3-x86_64.pkg.tar.zst">https://arch-archive.tuna.tsinghua.edu.cn/2021/07-19/community/os/x86_64/gnuradio-osmosdr-0.2.3-3-x86_64.pkg.tar.zst</a></p><p><a href="https://arch-archive.tuna.tsinghua.edu.cn/2021/07-19/community/os/x86_64/gnuradio-iqbal-0.38.1-4-x86_64.pkg.tar.zst">https://arch-archive.tuna.tsinghua.edu.cn/2021/07-19/community/os/x86_64/gnuradio-iqbal-0.38.1-4-x86_64.pkg.tar.zst</a></p><p><a href="https://arch-archive.tuna.tsinghua.edu.cn/2021/07-19/community/os/x86_64/libvolk-2%3A2.4.1-1-x86_64.pkg.tar.zst">https://arch-archive.tuna.tsinghua.edu.cn/2021/07-19/community/os/x86_64/libvolk-2%3A2.4.1-1-x86_64.pkg.tar.zst</a></p><p><a href="https://arch-archive.tuna.tsinghua.edu.cn/2021/07-19/community/os/x86_64/libuhd-4.0.0.0-2-x86_64.pkg.tar.zst">https://arch-archive.tuna.tsinghua.edu.cn/2021/07-19/community/os/x86_64/libuhd-4.0.0.0-2-x86_64.pkg.tar.zst</a></p></blockquote><p>然后使用 <code>pacman -U</code>安装</p><p>别忘了<a href="https://wiki.gnuradio.org/index.php/ModuleNotFoundError">添加环境变数</a></p><p>这时候你就可以<del>安全</del>跟随<a href="https://ibcl.us/GSM-Sniffing_20200826/#%E6%90%AD%E5%BB%BA%E7%8E%AF%E5%A2%83">I BCL的原文章</a>的3.1-3.4编译安装别的Something（</p><p>此时 你应该可以使用<code>kal</code>找到你身边的GSM-900基站了。</p><p>如你所见，博主和I BCL同款的RTL2832U+R820T2</p><p>在38偏频下<del>（同样的垃圾）</del>能够搜索到许多且Power高的GSM900基站（相对于I BCL而言）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[eden@eden-tower ~]$ kal -s GSM900 -e 38 </span><br><span class="line">Found 1 device(s): </span><br><span class="line">  0:  Generic RTL2832U OEM </span><br><span class="line">Using device 0: Generic RTL2832U OEM </span><br><span class="line">Found Rafael Micro R820T/2 tuner </span><br><span class="line">Exact sample rate is: 270833.002142 Hz </span><br><span class="line">kal: Scanning for GSM-900 base stations. </span><br><span class="line">GSM-900: </span><br><span class="line">   chan:  15 (938.0MHz - 1.826kHz)   power: 2823053.10 </span><br><span class="line">   chan:  46 (944.2MHz + 760Hz)   power: 4187130.40 </span><br><span class="line">   chan:  48 (944.6MHz + 835Hz)   power:  953992.24 </span><br><span class="line">   chan:  50 (945.0MHz + 153Hz)   power: 1800331.28 </span><br><span class="line">   chan:  51 (945.2MHz + 258Hz)   power: 2380976.40 </span><br><span class="line">   chan:  52 (945.4MHz + 281Hz)   power: 1566731.69 </span><br><span class="line">   chan:  55 (946.0MHz + 287Hz)   power:  694859.79 </span><br><span class="line">...chan 107</span><br></pre></td></tr></table></figure><p>当然 依然少不了 <code>kal</code>的“亲切问候”：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Difference of offsets between channels is &gt;1kHz. This likely means that the correct PPM is too far away and you need to provide a rough estimate using the &#x27;</span><br><span class="line">-e&#x27; option. Try tuning against a local FM radio or other known frequency first.</span><br></pre></td></tr></table></figure><p> 正当你以为你终于可以快乐地开始监听的时候：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[eden@eden-tower ~]$ grgsm_livemon_headless -f 944.2M -p 38</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">/usr/lib/python3.9/site-packages/gnuradio/qtgui/range.py:41: SyntaxWarning: &quot;is not&quot; with a literal. Did you mean &quot;!=&quot;?</span><br><span class="line">  precision = len(temp) if temp is not &#x27;0&#x27; else 0</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;/usr/lib/python3.9/site-packages/grgsm/__init__.py&quot;, line 48, in </span><br><span class="line">    from .grgsm_swig import *</span><br><span class="line">  File &quot;/usr/lib/python3.9/site-packages/grgsm/grgsm_swig.py&quot;, line 13, in </span><br><span class="line">    from . import _grgsm_swig</span><br><span class="line">ImportError: libgrgsm.so.1.0.0git: cannot open shared object file: No such file or directory</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;/usr/local/bin/grgsm_livemon&quot;, line 37, in </span><br><span class="line">    from grgsm import arfcn</span><br><span class="line">  File &quot;/usr/lib/python3.9/site-packages/grgsm/__init__.py&quot;, line 48, in </span><br><span class="line">    from .grgsm_swig import *</span><br><span class="line">  File &quot;/usr/lib/python3.9/site-packages/grgsm/grgsm_swig.py&quot;, line 13, in </span><br><span class="line">    from . import _grgsm_swig</span><br><span class="line">ImportError: libgrgsm.so.1.0.0git: cannot open shared object file: No such file or directory</span><br></pre></td></tr></table></figure><p>是的，gr-gsm找不见刚刚自己编译的库了 :(</p><p>而实际上，这是ArchLinux的配置与其他发行版不同导致的。<a href="https://github.com/ptrkrysik/gr-gsm/issues/495#issuecomment-566684382">可以查看这个来自于2019年的Issue了解</a></p><p>当你按照上面的步骤<del>排除万难</del>，那么你就可以开始<del>快乐地</del>监听了（</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[eden@eden-tower ~]$ grgsm_livemon_headless -f 944.2M -p 38</span><br><span class="line">[INFO] [UHD] linux; GNU C++ version 11.1.0; Boost_107600; UHD_4.0.0.0-0-unknown</span><br><span class="line">gr-osmosdr 0.2.0.0 (0.2.0) gnuradio 3.8.2.0</span><br><span class="line">built-in source types: file fcd rtl rtl_tcp uhd hackrf bladerf rfspace airspy soapy redpitaya </span><br><span class="line">Using device #0 Realtek RTL2838UHIDIR SN: 00000001</span><br><span class="line">Found Rafael Micro R820T/2 tuner</span><br><span class="line">Exact sample rate is: 2000000.052982 Hz</span><br><span class="line">Allocating 15 zero-copy buffers</span><br><span class="line"> 2d 06 3f 10 0d a0 2e 79 f2 39 01 00 c9 41 0b 3a eb 2b 2b 2b 2b 2b 2b</span><br><span class="line"> 2d 06 3f 10 0e a0 2e 73 f3 89 03 00 c5 9c fa 58 ab 2b 2b 2b 2b 2b 2b</span><br><span class="line"> 03 aa 11 06 0d 00 c1 2b 2b 2b 2b 2b 2b 2b 2b 2b 2b 2b 2b 2b 2b 2b 2b</span><br><span class="line"> 55 06 19 00 00 00 00 00 00 00 03 8b 00 62 a0 00 00 00 41 b9 00 00 2b</span><br></pre></td></tr></table></figure><p>开始玩吧（</p><!-- 草怕不是又水了一篇文章 而且我也没有这类的读者啊草 -->]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在阅读本文章之前，请先去&lt;a href=&quot;https://ibcl.us/GSM-Sniffing_20200826/&quot;&gt;隔壁I BCL. 的文章补课&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;同时请注意本文章写于2021.11.6，请注意时间导致的信息改变。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;因为D</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>2021年10月近况</title>
    <link href="https://blog.edenjohnson.cyou/2021/10/24/recent202110/"/>
    <id>https://blog.edenjohnson.cyou/2021/10/24/recent202110/</id>
    <published>2021-10-24T11:40:06.000Z</published>
    <updated>2022-02-13T11:28:08.165Z</updated>
    
    <content type="html"><![CDATA[<p>2021年10月24日。</p><p>距离上篇文章又过去了三周有余。</p><p>这篇主要是想说说最近我的情况。</p><h1 id="期中考试"><a href="#期中考试" class="headerlink" title="期中考试"></a>期中考试</h1><p>是的，已经期中了。我们已经上课接近2个月了。</p><p>在我写文章这时候，只有一门成绩出来，物理。</p><p>说起来，很开心，咱这回满贯了（</p><p>卷子就不放了，咱字恶心的要了命了，还各种划（</p><h1 id="从DTMB到SDR"><a href="#从DTMB到SDR" class="headerlink" title="从DTMB到SDR"></a>从DTMB到SDR</h1><p>10月1日的文章是在回我祖母家的车上写的。</p><p>我祖母家在呼和浩特市的某个镇里，到现在这个小区因为债权纠纷依然没有通广电，</p><p>而且只有我祖父需要网路，花大价钱办宽带上IPTV也不是办法。</p><p>最开始是用的户户通，结果没看1年就授权失效，只得换上从村里拆出来的的DTH村村通 :-)</p><p>所以我准备下次去装DTMB。</p><p>然后就开始在淘宝上面了解DTMB，然后就又不小心看起了RTLSDR（</p><p>前日有个朋友找到我，说要不试试从 <a href="http://websdr.top:8011/">http://websdr.top:8011</a> 收JMH</p><p>于是乎我就答应了</p><p>去找软件的时候又按到了iBCL的网站</p><p>于是再次沉迷于iBCL的文章无法自拔，甚至都想自己搞SDR（</p><p>据<a href="https://ibcl.us/RTLSDR-Modifying_20190323/">iBCL的文章看</a>，</p><blockquote><p>博主所购买的是 CNY 42（不含运费）的那一款，其芯片是 RTL2832U+R820T2。</p></blockquote><p>现在RTL2832U+R820T2方案的的价格已经要比2019年3月或者更早的时期要贵10~15元了。</p><p><img src="https://pic.edenjohnson.cyou/images/202110241244748.png" loading="lazy"></p><blockquote><p>对了我没在iBCL的网站上面找到任何有关License的信息，（也不知道是不是我眼瞎）如果真的十三生有幸BCL<del>大佬</del>能看到这篇文章希望能评论区说一下谢谢（</p><p>“请您千万不要称呼我 dalao，我会不好意思的…”</p></blockquote><p>顺便了解了一下天线（虽然我知道电视棒自带的天线就足够我整的了）</p><p>目前觉得是MiniWhip比较合适，毕竟咱也不发，咱还没的证对吧（</p><blockquote><p>然后这个屑博主就去了解操作证去了</p></blockquote><h1 id="心理状态"><a href="#心理状态" class="headerlink" title="心理状态"></a>心理状态</h1><p>还是得提一下对吧，尽量不让别人担心（</p><p>最近状态不错，至少没得十分负面的想法出现。</p><p>估计是因为最近备考更加忙了的缘故。</p><p>当然随着中考临近，肯定是会更忙的，所以<strong>大概暂时</strong>不用担心我了。</p><hr><p>先就写这么多吧，毕竟初三了时间也少，可能就有些时候会写写文章吧。</p><p>就这样。</p><hr><blockquote><p>Eden Johnson 2021&#x2F;10&#x2F;24 8:51:59</p><p>:thinking:</p><p>Eden Johnson 2021&#x2F;10&#x2F;24 8:52:58<br>我很好奇你是不是下次回你家要等寒假了</p><p>泄老板 2021&#x2F;10&#x2F;24 8:55:00<br>有可能</p><p>Eden Johnson 2021&#x2F;10&#x2F;24 8:55:41</p><p>:thinking:</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;2021年10月24日。&lt;/p&gt;
&lt;p&gt;距离上篇文章又过去了三周有余。&lt;/p&gt;
&lt;p&gt;这篇主要是想说说最近我的情况。&lt;/p&gt;
&lt;h1 id=&quot;期中考试&quot;&gt;&lt;a href=&quot;#期中考试&quot; class=&quot;headerlink&quot; title=&quot;期中考试&quot;&gt;&lt;/a&gt;期中考试&lt;/h1</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>一篇突然想到的文章</title>
    <link href="https://blog.edenjohnson.cyou/2021/10/01/some-posts/"/>
    <id>https://blog.edenjohnson.cyou/2021/10/01/some-posts/</id>
    <published>2021-10-01T10:32:00.000Z</published>
    <updated>2022-02-13T11:28:08.165Z</updated>
    
    <content type="html"><![CDATA[<p>，</p><blockquote><p>“我觉得你在疯了的边缘试探”</p></blockquote><hr><p>欢迎回来。</p><p>上面的那段话，是我的一位朋友在听到我坐到我家的窗口边，</p><p>甚至想到12楼，13楼的窗口边试试的的时候对我说的。</p><p>可能，我的确是要疯了吧。</p><p>毕竟从小学起，我就因为各种各样的原因，已经被认为是一个“疯子”了。</p><p>当时我以为进入初中是一种解脱，是一段新生活的开始，但是我错了。</p><p>全市有多少所初中啊，总会遇见的不是吗？</p><p>而且这其中，还有一个人把我小学时候的“娘娘腔”之属都说了</p><p>可想而知，我再一次在人设重建上失败了。</p><p>你知道吗？我现在很后悔，</p><p>在当时被呼和浩特的一所虽然不算很好的民办初中录取的时候没有选择去，</p><p>而是为了让我妈补救她对我近15年的母爱缺失而选择了留在乌兰察布。</p><blockquote><p>当然，我只是后悔没有去呼和浩特，而不是后悔给了我妈补救母爱的机会。</p></blockquote><p>如果，我去了呼和浩特，也许事情就不一样了吧。</p><p>或许，也会像我父母小学时候对想要转学的我说过的一样：</p><blockquote><p>这个学校有乔XX，你转了，你也不知道会不会有日XX，你得先改变自己。</p></blockquote><hr><p>现在想想昨天坐在窗口旁边的时候，我发现当时的我竟没有一丝丝害怕。</p><p>也许，是已经做好完全的准备，将自己送到天空中，然后重重摔倒地上了吧。</p><p>其实，“Early-EOL”是一整个名词，意思就是“提早的了结自己（Early End Of Life）”。</p><p>当然你可以有自己的理解。</p><p>这个计划大约是在今年6月份的时候提出的。</p><p>具体时间当时定在12月末，流程就是发布一条十分隐晦的内容告诉各位的死去，然后…</p><p>当然，这个计划已经取消了——</p><p>或者说，我还想再活一年，等到高一上半学期快结束的时候再考虑自己留在这个世界上的必要性。</p><hr><p>还是那句话，我并不是没有理想，或者是目标。</p><p>我只是认为现在眼前的一切，已经没有改变的机会了。</p><p>我现在去写情况说明，</p><p>等这个月中交给我的一位朋友，他会在下次去北京复查的时候带给他的心理医生看。</p><p>就这么多。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;，&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“我觉得你在疯了的边缘试探”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;欢迎回来。&lt;/p&gt;
&lt;p&gt;上面的那段话，是我的一位朋友在听到我坐到我家的窗口边，&lt;/p&gt;
&lt;p&gt;甚至想到12楼，13楼的窗口边试试的的时候对我说的。</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>DEATH</title>
    <link href="https://blog.edenjohnson.cyou/2021/09/19/DEATH/"/>
    <id>https://blog.edenjohnson.cyou/2021/09/19/DEATH/</id>
    <published>2021-09-19T20:51:52.000Z</published>
    <updated>2022-02-13T11:28:08.161Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>——人就是这样，最开始是想死却不敢死，后面是敢死却不想死了。</p><p>——确实。但咱们也不知道是敢死先来，还是不想死先来。</p></blockquote><p>欢迎回来。</p><p>自从七月中的那一篇文章之后，我在博客上就再没音讯了。</p><p>我人还在。</p><p>当然我也没有什么也不管。该上LeanCloud看评论还是要看的。</p><p>在这段时间里面，留下鼓励的朋友还是很多的，在此感谢你们。</p><hr><p>好了，我们该进入正题了。</p><p>如你所见，我的标题依然是名词“死亡”。其实从7月15日，额，其实是从四月底起，我的精神状态从没有现实意义上的“改变”</p><p>除了在7月底有一段时间在折腾SAS2008的CrossFlash没有想到这些事情之外，我一直是沉浸在负面情绪之中。</p><p>很多我身边的人都对我表示过担心，尤其lijia。</p><p>也是因为这个原因，在XFox发出来那篇迟来的关于华为的反驳文章之后，我没有继续去反驳，而是<a href="https://xfox.fun/archives/451/#comment-205">“删帖抑郁”</a> 。其实他说的也不错，在他看来我的行为就是这样的。后面我在我的Telegram频道上面发了<a href="https://t.me/EdenBroadcast/451">一部分本来准备去反驳的文字</a>，然后就没有然后了。</p><p>对了再强调一下，我真的活着。不能说活得很好，但至少还活在这个世界上。把我的左手放在右小臂，我用马克笔涂橙的地方，我的心还是在跳动的，我可以肯定。</p><blockquote><p>那一块橙色的地方我之前在那里用红笔写着“都说人是社会动物 但我却在逃离社会 我应该不是人了”</p></blockquote><p>但咱们也不知道什么时候咱就会成功把自己弄死。</p><p>从最开始的从<a href="https://something-thinking.edenjohnson.cyou/beginning/index.php/archives/4/">学校实验楼跳下去</a>，到后面的<a href="https://t.me/EdenBroadcast/479">被车撞死</a>，以及最近的跳进消防水池…</p><p>我假期里没有写Something-thinking的习惯，所以很多曾经想到的死法都没记上。</p><p>你不会因为我没记上就觉得我是在这里瞎编吧？你可以去看看我的<a href="https://t.me/EdenBroadcast">Telegram频道</a>和<a href="https://twitter.com/EdenJohnson2006">Twitter</a>，也可以<a href="https://blog.lijiakaijun.cyou/about">问问Lijia</a>。（如果你没有国际互联网访问方式。）</p><p>其实有怀疑也是没有关系的，社会上很多用各种假悲惨来博同情的多的是。</p><hr><p>说点别的。</p><p>实际上，我在班里是不受欢迎的，我早就意识到了。</p><p>所以我选择尽量将自己边缘化，避免出现更大的问题。</p><p>这样肯定不利于我，但在我看来，因为以前对我的印象让我避免不了在交往中出问题，所以就选择逃避而不是改变交往方式。</p><p>但是总有些人要找我，比如说某些女生依然看见我要叫我名字。</p><p>我也不能和她们直说什么。</p><p>所以现在我依然冲动易怒，让班里面人心惶惶。（在我看来）</p><p>这也直接导致了我们班里面的人对我的看法的直接恶化。</p><p>现在我是不能再在课上说什么了，否则就会被全班人骂“少楞””少菜“。</p><p>这对我现在的情况没有任何好处，甚至加剧了我的”精神问题“</p><blockquote><p>”‘少楞，少菜’</p><p>行，我啥都不说了，你们也别来找我了</p><p>再不济，我转班，转学，或者直接离开这个世界</p><p>免得你们在哪里唧唧歪歪，扰我心绪，废你们口舌</p><hr><p>对了，我看转班，转学不用试了，直接跳到最后一个吧。“</p></blockquote><blockquote><p>上面那一段内容本来是要发到我的Telegram频道的，但是我爸一直叫我睡觉就没发出去。</p></blockquote><hr><p>怎么说呢，其实我也并不想这么下去。</p><p>我其实很早就有想通过班主任或者是其他人的方式争取到看医生的机会，但是尝试过几次都没能成功。</p><p>大概真的没办法去尝试把自己从这里面脱身了吧。</p><p>反正就这么多。</p><p>我去更新一下博客的系统，应该是要上Waline了，这下子E5的邮箱服务没问题了，可以用@edenjohnson.cyou 发邮件通知了。</p><hr><p>对了，他们可不认为他们不聪明，反而认为我是有问题的一方。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;——人就是这样，最开始是想死却不敢死，后面是敢死却不想死了。&lt;/p&gt;
&lt;p&gt;——确实。但咱们也不知道是敢死先来，还是不想死先来。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;欢迎回来。&lt;/p&gt;
&lt;p&gt;自从七月中的那一篇文章之后，我在博客上就再没音讯了</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>反正这世界也没啥意思了。</title>
    <link href="https://blog.edenjohnson.cyou/2021/07/17/No-Hope/"/>
    <id>https://blog.edenjohnson.cyou/2021/07/17/No-Hope/</id>
    <published>2021-07-17T20:57:58.000Z</published>
    <updated>2022-02-13T11:28:08.161Z</updated>
    
    <content type="html"><![CDATA[<p>很抱歉继续执笔就写出这么黑暗的东西。</p><p>由于本人精神状态问题，这篇文章会十分凌乱，并且不会一蹴而就，请注意后续更新。</p><p>本文章rev.1成文于2021.7.17。</p><p>rev.2 修订于2021.7.18。</p><hr><p>我的状态每况愈下。</p><p>自从4月23日开始，即我的朋友尝试跳河自杀开始，我的状态就越来越不好了。</p><p>后面的做梦做到自杀，或者是和同学们的每日一吵架，都让我越来越怀疑我在这个世界上生存的必要性，换句话说——我还有必要活在这个世界上吗？</p><p>我给出的答案是——我是一个试验品，试验人的极限抗压的试验品。我已经失败了，失败了，彻底失败了。所以我也没有在这个世界上的必要了。</p><p>我不是没有希望，不是没有目标。我从何同学的5G视频起就做好了BUPT的远大目标，并且时时回想起。我为什么想放弃，是因为眼前的失望已经盖过了希望。</p><p>真的，我现在很想处好和同学、老师、或是父母的关系，但是我感觉我做的都是徒劳——我已经从心底做出了Reject所有内容的Firewall规则——我会认为所有人，他们的每一句话，都有可能是在变相嘲笑我…</p><p>这件事情，还要追溯回小学时候，今就暂且不谈。</p><hr><p>这里结合一下我的两个Something_Thinking做一下分析——</p><p>我很想脱离小学的那种窒息的环境（<a href="https://github.com/EdenJohnson2006/Something_Thinking/blob/master/Diary/Personal/Diary-%E3%80%87.md">Diary-〇</a>），但是我失败了。</p><p>因此，我不得不再次调用起我小学的记忆，开始排斥，开始…（<a href="https://github.com/EdenJohnson2006/Something_Thinking/blob/master/Diary/Personal/Diary-Untrusted.md">Diary-Untrusted</a>）</p><p>后面，2020年11月份的一件事情，让我更加觉得我是被排斥的。（这件事情我具体不想谈了。如果想知道请上Telegram找我。）</p><p>后面我就回到了，那副“人模鬼样”……</p><hr><p>我现在很惭愧，毕竟我曾经标榜能够理解他人，但是当他们真正做出来的时候我却无法理解…</p><p>我同样有一种无力的感觉，希望能够挽救点什么，但是最终 却于事无补……</p><hr><p>虽然我不知道这是不是一种自残，但是我现在上课的时候却总是会用圆规去扎，或者划过去。虽然没真正扎到肉里，但是我看也快了。</p><hr><p>真的，我把我右手桡动脉画出来的唯一原因，就是提醒我——我还活在世界上。要不然，身边的一切都无不在将我驱赶出这个世界。</p><hr><p>我想寻求帮助啊。我绝对想。</p><p>但是我父母一直认为——我没病。</p><p>…没用了。没用了，我没希望了…</p><hr><p>至少有人愿意关心我，这是好的。</p><p>但我不知道，我能不能走下去。</p><hr><p>我现在已经无法控制我自己了。</p><p>现在我会莫名奇妙在任何时候呻吟，甚至连圆规都抓不稳了…</p><p>希望不是什么病吧。</p><hr><p>这个暑假，我能调整好，那就相安无事</p><p>调整不好，那只能走向另一条路，另一条路…</p><hr><p>这让我想起来我的那条酷安动态——“来到互联网的原因是那么相似，又那么不类似”</p><p>为什么沉迷网络？为什么？</p><p>因为他们在现实中已经没有什么地位了，他们只能去网络寻找他们本应该拥有的地位。</p><hr><p>关于我想成为mtf这件事情，我不想多说。毕竟从小学起我的外表就经常会被认成是女孩子的说。</p><hr><p>这么零碎写了这么多，应该没人会看完吧。先这样吧。</p><hr><blockquote><p>2021.7.18更新。</p><p>致XFox：</p><p>很抱歉给你带来不好的体验，这是我的问题。<br>实际上我的这种状态已经很久了，你可以联系lijiakai（在 <a href="https://blog.lijiakaijun.cyou/about/">https://blog.lijiakaijun.cyou/about/</a> 有他的信息）了解更多。<br>我也不知道为什么我会成这样，如果我知道我也不至于是现在的样子了。<br>就补充这么多吧。</p><p>对给你造成不好的体验感到抱歉。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;很抱歉继续执笔就写出这么黑暗的东西。&lt;/p&gt;
&lt;p&gt;由于本人精神状态问题，这篇文章会十分凌乱，并且不会一蹴而就，请注意后续更新。&lt;/p&gt;
&lt;p&gt;本文章rev.1成文于2021.7.17。&lt;/p&gt;
&lt;p&gt;rev.2 修订于2021.7.18。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;我的状态</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>AXFox，你赢了。</title>
    <link href="https://blog.edenjohnson.cyou/2021/07/17/YOU-WIN/"/>
    <id>https://blog.edenjohnson.cyou/2021/07/17/YOU-WIN/</id>
    <published>2021-07-17T19:35:55.000Z</published>
    <updated>2022-02-13T11:28:08.161Z</updated>
    
    <content type="html"><![CDATA[<p>我在此宣布你赢下了这次华为舌战的成功</p><p>我已经不想再为了一个一年前的文章再浪费口舌了。</p><p>祝你开心，再见。</p><p>以下摘抄一下我本人的Telegram Broadcast。</p><blockquote><p>Eden迷惑行为大赏.wmv, [17.07.21 19:26]<br>我是已经不想再因为华为的事情再杠了。</p><p>Eden迷惑行为大赏.wmv, [17.07.21 19:27]<br>你们谁转告一下 <a href="https://xfox.fun/">https://xfox.fun</a> 的博主，他赢了，他赢下这场“比赛”了</p><p>Eden迷惑行为大赏.wmv, [17.07.21 19:27]<br>他想撤我友链链就撤吧。</p><p>Eden迷惑行为大赏.wmv, [17.07.21 19:30]<br>你们可以随便用我的名称“EdenJohnson”和我的Gravatar邮箱“<a href="mailto:&#101;&#x64;&#101;&#x6e;&#46;&#106;&#48;&#x68;&#110;&#x73;&#111;&#x6e;&#x40;&#x79;&#x61;&#110;&#100;&#x65;&#120;&#x2e;&#x63;&#111;&#x6d;">&#101;&#x64;&#101;&#x6e;&#46;&#106;&#48;&#x68;&#110;&#x73;&#111;&#x6e;&#x40;&#x79;&#x61;&#110;&#100;&#x65;&#120;&#x2e;&#x63;&#111;&#x6d;</a>”去转告他，只要加上“从Eden的Telegram频道转发”我就不会管的。</p><p>Eden迷惑行为大赏.wmv, [17.07.21 19:31]<br>累了。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;我在此宣布你赢下了这次华为舌战的成功&lt;/p&gt;
&lt;p&gt;我已经不想再为了一个一年前的文章再浪费口舌了。&lt;/p&gt;
&lt;p&gt;祝你开心，再见。&lt;/p&gt;
&lt;p&gt;以下摘抄一下我本人的Telegram Broadcast。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Eden迷惑行为大赏.wmv</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>已经弃坑/正在填坑文章列表</title>
    <link href="https://blog.edenjohnson.cyou/2021/06/06/the-article-with-no-more-updates-or-waiting-to-update/"/>
    <id>https://blog.edenjohnson.cyou/2021/06/06/the-article-with-no-more-updates-or-waiting-to-update/</id>
    <published>2021-06-06T08:30:12.000Z</published>
    <updated>2022-02-13T11:28:08.165Z</updated>
    
    <content type="html"><![CDATA[<p>由于我这个博主总是挖坑不填，所以主页全都是写了一半的文章，实属惭愧（</p><p>这篇文章是用来集合所有弃坑文章的链接的，因为这次我隐藏它们了（</p><p>对了，正在写的文章也会列在这里面。</p><h1 id="以下内容基于时间排序，从新到旧"><a href="#以下内容基于时间排序，从新到旧" class="headerlink" title="以下内容基于时间排序，从新到旧"></a>以下内容基于时间排序，从新到旧</h1><h2 id="Websocket传输Minecraft-JE封包"><a href="#Websocket传输Minecraft-JE封包" class="headerlink" title="Websocket传输Minecraft JE封包"></a>Websocket传输Minecraft JE封包</h2><p>已更新内容链接： <a href="https://blog.edenjohnson.cyou/2021/05/27/websocket-mcje-ep1/">https://blog.edenjohnson.cyou/2021/05/27/websocket-mcje-ep1/</a></p><p>正在编写<del>（进度：新建文件夹）</del></p><h2 id="lijiakai常用的多重加密的判断方式"><a href="#lijiakai常用的多重加密的判断方式" class="headerlink" title="lijiakai常用的多重加密的判断方式"></a>lijiakai常用的多重加密的判断方式</h2><p>链接：<a href="https://blog.edenjohnson.cyou/2021/02/24/judgment-method-of-multiple-encryption/">https://blog.edenjohnson.cyou/2021/02/24/judgment-method-of-multiple-encryption/</a></p><p>原因：不知道怎么讲了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">noka0403  上午 11:23:47</span><br><span class="line">不知道怎么讲了还行</span><br><span class="line"></span><br><span class="line">noka0403  上午 11:24:07</span><br><span class="line">还不如说屑lijia不用加密了</span><br></pre></td></tr></table></figure><p>那我就满足你</p><h2 id="在任意有TWRP-有SD卡的手机上安装Debian（在Android设备上原生运行Debian实操）"><a href="#在任意有TWRP-有SD卡的手机上安装Debian（在Android设备上原生运行Debian实操）" class="headerlink" title="在任意有TWRP 有SD卡的手机上安装Debian（在Android设备上原生运行Debian实操）"></a>在任意有TWRP 有SD卡的手机上安装Debian（在Android设备上原生运行Debian实操）</h2><p>链接：<a href="https://blog.edenjohnson.cyou/2021/01/15/running-debian-on-android-device-natively-realdoing/">https://blog.edenjohnson.cyou/2021/01/15/running-debian-on-android-device-natively-realdoing/</a></p><p>原因：设备不支持shell启动，没有开源内核导致无法硬编码</p><h2 id="研（luan）究（fan）一下hexo-blog-encrypt的源代码吧（）"><a href="#研（luan）究（fan）一下hexo-blog-encrypt的源代码吧（）" class="headerlink" title="研（luan）究（fan）一下hexo-blog-encrypt的源代码吧（）"></a>研（luan）究（fan）一下hexo-blog-encrypt的源代码吧（）</h2><p>链接： <a href="https://blog.edenjohnson.cyou/2021/01/12/hexo-blog-encrypt/">https://blog.edenjohnson.cyou/2021/01/12/hexo-blog-encrypt/</a></p><p>原因：看不下去了，我连Python都没学懂（悲）</p><h2 id="Eden的Arch入教史"><a href="#Eden的Arch入教史" class="headerlink" title="Eden的Arch入教史"></a>Eden的Arch入教史</h2><p>链接： <a href="https://blog.edenjohnson.cyou/2020/12/20/why-do-i-use-archlinux/">https://blog.edenjohnson.cyou/2020/12/20/why-do-i-use-archlinux/</a></p><p>原因：时间跨度过久，中间我还用了macOS一段时间…</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;由于我这个博主总是挖坑不填，所以主页全都是写了一半的文章，实属惭愧（&lt;/p&gt;
&lt;p&gt;这篇文章是用来集合所有弃坑文章的链接的，因为这次我隐藏它们了（&lt;/p&gt;
&lt;p&gt;对了，正在写的文章也会列在这里面。&lt;/p&gt;
&lt;h1 id=&quot;以下内容基于时间排序，从新到旧&quot;&gt;&lt;a href=&quot;</summary>
      
    
    
    
    <category term="科技" scheme="https://blog.edenjohnson.cyou/categories/%E7%A7%91%E6%8A%80/"/>
    
    
    <category term="站点" scheme="https://blog.edenjohnson.cyou/tags/%E7%AB%99%E7%82%B9/"/>
    
  </entry>
  
  <entry>
    <title>Websocket传输Minecraft JE封包——EP1，理论依据以及计划实现</title>
    <link href="https://blog.edenjohnson.cyou/2021/05/27/websocket-mcje-ep1/"/>
    <id>https://blog.edenjohnson.cyou/2021/05/27/websocket-mcje-ep1/</id>
    <published>2021-05-27T22:11:27.000Z</published>
    <updated>2022-02-13T11:28:08.165Z</updated>
    
    <content type="html"><![CDATA[<p>依稀记得我和[数据删除]还是好友的时候，他尝试用Cloudflare代理Minecraft JE的场景。</p><p>大哥，你稍微清醒点，Cloudflare Free是只能代理HTTP&#x2F;HTTPS&#x2F;WebSocket的啊！</p><p>等等？WebSocket？</p><h1 id="0x00-理论依据"><a href="#0x00-理论依据" class="headerlink" title="0x00 理论依据"></a>0x00 理论依据</h1><blockquote><p><strong>WebSockets</strong> 是一种先进的技术。它可以在用户的浏览器和服务器之间打开交互式通信会话。使用此API，您可以向服务器发送消息并接收事件驱动的响应，而无需通过轮询服务器的方式以获得响应。</p></blockquote><p>——<a href="https://developer.mozilla.org/zh-CN/docs/MDN/About$history">Mozilla贡献者</a>基于<a href="https://creativecommons.org/licenses/by-sa/2.5/">CC-BY-SA 2.5协议</a>发布的<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/WebSockets_API">“WebAPI接口参考&#x2F;WebSockets</a>” </p><p>所以WebSockets可以在一个TCP连接上实现全双工。</p><blockquote><p>Minecraft不也行吗？</p></blockquote><p>但我们现在要代理啊！</p><p>CloudflareFree可以代理ws，但是不能代理TCP连接</p><blockquote><p>那你闲的没事用Cloudflare代理MC干啥啊？</p></blockquote><p>呃…<del>就是玩！</del>（大嘘</p><p>没啥鲜明的理由，只是觉得理论可以，想试试实际效果。</p><p>先说这么多。</p><h1 id="0x01-计划实现"><a href="#0x01-计划实现" class="headerlink" title="0x01 计划实现"></a>0x01 计划实现</h1><p>客户端与服务器建立WebSocket连接后，当Minecraft JE发出数据封包，客户端截取并包装成Websocket封包发送到服务端，服务端代替Minecraft JE发送这个数据封包，收到回复后包装成Websocket封包发回客户端，客户端传回Minecraft JE，完成一次双工。</p><p>内部的Websocket封包实现还没有定数，此处已挖坑，等待进一步补充。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;依稀记得我和[数据删除]还是好友的时候，他尝试用Cloudflare代理Minecraft JE的场景。&lt;/p&gt;
&lt;p&gt;大哥，你稍微清醒点，Cloudflare Free是只能代理HTTP&amp;#x2F;HTTPS&amp;#x2F;WebSocket的啊！&lt;/p&gt;
&lt;p&gt;等等？Web</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>一些个人频道的新设计...</title>
    <link href="https://blog.edenjohnson.cyou/2021/03/06/something-new-about-video-channel/"/>
    <id>https://blog.edenjohnson.cyou/2021/03/06/something-new-about-video-channel/</id>
    <published>2021-03-06T08:47:41.000Z</published>
    <updated>2022-02-13T11:28:08.165Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>[eden] AndyMills 2006，AndyMills 2006，AndyMills 2006…诶？AndyMills的缩写是AM诶！</p></blockquote><p>嗯，咳咳。</p><p>为了<del>防止我忘记我的GPG密码</del>，我准备写个文章，来写一写我新的频道的包装设计。</p><p>说实话我觉得我是个<strong>彻底的设计盲</strong>，所以有任何意见和善提出，Thanks.</p><p>废话少说，先上头像：</p><p><img src="https://pic.edenjohnson.cyou/images/no-time/AndyMills%E5%A4%B4%E5%83%8F.png" loading="lazy"></p><p>这两行文字都使用了OPPO Sans，所以大家<del>不用担心我成张三</del></p><p>后面两个三角形都是用Keynote里面的，透明度70%，上面的阴影60%。</p><p>看起来还算不错，但是我国的两会期间吗…算了，等之后吧。:-)</p><hr><p>等等我电脑头图去哪里了？<del>等我先找到再继续跟你们讲啊。</del></p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;[eden] AndyMills 2006，AndyMills 2006，AndyMills 2006…诶？AndyMills的缩写是AM诶！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;嗯，咳咳。&lt;/p&gt;
&lt;p&gt;为了&lt;del&gt;防止我忘记我的GPG密</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>lijiakai常用的多重加密的判断方式</title>
    <link href="https://blog.edenjohnson.cyou/2021/02/24/judgment-method-of-multiple-encryption/"/>
    <id>https://blog.edenjohnson.cyou/2021/02/24/judgment-method-of-multiple-encryption/</id>
    <published>2021-02-24T20:11:39.000Z</published>
    <updated>2022-02-13T11:28:08.165Z</updated>
    
    <content type="html"><![CDATA[<blockquote><h2 id="混（套）合（娃）加密"><a href="#混（套）合（娃）加密" class="headerlink" title="混（套）合（娃）加密"></a>混（套）合（娃）加密</h2><p>你也可以拿目前已知的加密来进行多重加密</p><p>例如我先用base64加密，再用AES加密，然后又转成Unicode……</p><p>只要你不注明使用了什么加密，解密的难度也会有点难</p><p><del>除非您是解密高手能看出用了什么加密类型</del></p></blockquote><p>好吧，我不瞒着各位了，我的确能解出lijiakai的混合加密。</p><p><strong>注意！本文章因引用了 <a href="https://lijiakaijun.me/posts/21034.html">https://lijiakaijun.me/posts/21034.html</a> 将使用CC BY-SA 4.0 协议许可。</strong></p><p>好了，让我们开始吧。</p><h1 id="常用对称加密方式判断"><a href="#常用对称加密方式判断" class="headerlink" title="常用对称加密方式判断"></a>常用对称加密方式判断</h1><p>首先我们应该了解一些常用的对称加密方式：</p><p><a href="http://tool.chinaz.com/tools/textencrypt.aspx">http://tool.chinaz.com/tools/textencrypt.aspx</a></p><p>AES,DES,RC4,Rabbit,TripleDes</p><p>让我们用不同的方式加密这段字符串：（密码均为AngelBeats）</p><blockquote><p> “活着真累啊.” “草你这” “没事” “呐”</p></blockquote><p>AES：U2FsdGVkX19Pwwjj3OHuCCJWwte0eZcsiQTgc3C7WOE1cMB6KgxkQld&#x2F;9jJAx5l1<br>toZj0ZHv8ojjZqWTpGxQyw&#x3D;&#x3D;</p><p>DES：U2FsdGVkX1&#x2F;dG+Kf+PMErZ1jwPw2iUha899ZW9gyzn8WQIier&#x2F;RwPajhPevsHsjn<br>sgbNvRw7u9eXhBihTN6+aw&#x3D;&#x3D;</p><p>RC4：U2FsdGVkX1&#x2F;J9fCc1vD6Szxq+jCAZprG&#x2F;D07+wH66+H+f&#x2F;OeshfCu79nG7v6n663<br>UHOzIgT9qooxOIwQKw&#x3D;&#x3D;</p><p>Rabbit：U2FsdGVkX1&#x2F;8cBmt6tqWXwfQl8TliZZma5ZX4TYW9HkdcH0LVfOwJCrtKe4ZQont<br>bNb1TB&#x2F;REU3X&#x2F;ZT5og&#x3D;&#x3D;</p><p>TripleDES：U2FsdGVkX1&#x2F;OLBqhPBzeN28PfQchjw3yQrYScHpfJBUrlDnwMu5h8MkU6cHdJWI5<br>DS&#x2F;IKuqc7M6sy0APBoJ8LA&#x3D;&#x3D;</p><p>是不是一点区别都看不出？<del>看不出就对了！（</del></p><p>嗯咳咳，其中还是有些区别的：</p><ul><li>Rabbit和RC4的&#x2F;断行更多，但Rabbit分布更密集</li><li>Rabbit的+字符很少</li><li><del>草编不出来了</del></li></ul><p>我也不知道该怎么说了。</p><h1 id="Base16-x2F-32-x2F-64的区分"><a href="#Base16-x2F-32-x2F-64的区分" class="headerlink" title="Base16&#x2F;32&#x2F;64的区分"></a>Base16&#x2F;32&#x2F;64的区分</h1><p>Base16和16进制使用的字符一致，为10+6（0～9，A～F）</p><p>Base32为26+6（A～Z，2～7）</p><p>Base64为26*2+10+2（A～Z，a～z，0～9，&#x2F;，+）</p><p>所以想要简单判断：</p><blockquote><p>大小写，是64</p><p>缺0 9，是32</p><p>A～F，是16</p></blockquote><p>好了就<del>水到这里</del></p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;h2 id=&quot;混（套）合（娃）加密&quot;&gt;&lt;a href=&quot;#混（套）合（娃）加密&quot; class=&quot;headerlink&quot; title=&quot;混（套）合（娃）加密&quot;&gt;&lt;/a&gt;混（套）合（娃）加密&lt;/h2&gt;&lt;p&gt;你也可以拿目前已知的加密来进行多重加密&lt;/p&gt;
&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>GitHub Action实现博客自动部署</title>
    <link href="https://blog.edenjohnson.cyou/2021/02/03/deploy-blog-with-github-action/"/>
    <id>https://blog.edenjohnson.cyou/2021/02/03/deploy-blog-with-github-action/</id>
    <published>2021-02-03T07:57:30.000Z</published>
    <updated>2022-02-13T11:28:08.165Z</updated>
    
    <content type="html"><![CDATA[<p>经过一天的折腾，我总算折腾好了Github Action部署的博客．</p><p>现在我只需要在这个缩减的Working Directory进行我的写作．</p><p>（实际只是少了Themes文件夹，对于空间的减少只能说聊胜于无．）</p><p><a href="https://github.com/EdenJohnson2006/BlogBackup">我写的<del>糟糕的</del>Workflow已经开源GitHub</a>，如果有什么问题直接PR即可．</p><h1 id="写Workflow中间的坑"><a href="#写Workflow中间的坑" class="headerlink" title="写Workflow中间的坑"></a>写Workflow中间的坑</h1><blockquote><p>npm WARN checkPermissions Missing write access to &#x2F;usr&#x2F;local&#x2F;lib&#x2F;node_modules</p></blockquote><p>在安装前指定<a href="https://github.com/EdenJohnson2006/BlogBackup/blob/master/.github/workflows/deploy.yml#L32">写modules的位置到runner的家目录即可</a>，参考：<a href="https://blog.csdn.net/zhangxuekang/article/details/89075039">此文章</a></p><hr><blockquote><p>&#x2F;home&#x2F;runner&#x2F;work&#x2F;_temp&#x2F;*.sh: line *: *: command not found</p></blockquote><p>不知道为什么Path没有起效，如果出现这种情况，往上面看：</p><blockquote><p>&#x2F;home&#x2F;runner&#x2F;.npm-global&#x2F;bin&#x2F;cnpm -&gt; &#x2F;home&#x2F;runner&#x2F;.npm-global&#x2F;lib&#x2F;node_modules&#x2F;cnpm&#x2F;bin&#x2F;cnpm</p></blockquote><p>使用<code>/home/runner/.npm-global/bin/cnpm</code>代替即可．</p><hr><blockquote><p>fatal: empty ident name (for <a href="mailto:&#x72;&#117;&#x6e;&#x6e;&#101;&#x72;&#64;&#102;&#118;&#45;&#97;&#122;&#x31;&#54;&#x2d;&#x39;&#x30;&#56;&#x2e;&#x61;&#x67;&#x69;&#x68;&#x63;&#109;&#106;&#x79;&#x79;&#48;&#x70;&#101;&#x70;&#103;&#x61;&#x6e;&#121;&#x69;&#104;&#x64;&#x78;&#120;&#119;&#x69;&#x65;&#100;&#46;&#x62;&#x78;&#46;&#105;&#110;&#116;&#x65;&#114;&#x6e;&#x61;&#108;&#46;&#x63;&#108;&#x6f;&#117;&#100;&#97;&#x70;&#x70;&#x2e;&#x6e;&#101;&#x74;">&#x72;&#117;&#x6e;&#x6e;&#101;&#x72;&#64;&#102;&#118;&#45;&#97;&#122;&#x31;&#54;&#x2d;&#x39;&#x30;&#56;&#x2e;&#x61;&#x67;&#x69;&#x68;&#x63;&#109;&#106;&#x79;&#x79;&#48;&#x70;&#101;&#x70;&#103;&#x61;&#x6e;&#121;&#x69;&#104;&#x64;&#x78;&#120;&#119;&#x69;&#x65;&#100;&#46;&#x62;&#x78;&#46;&#105;&#110;&#116;&#x65;&#114;&#x6e;&#x61;&#108;&#46;&#x63;&#108;&#x6f;&#117;&#100;&#97;&#x70;&#x70;&#x2e;&#x6e;&#101;&#x74;</a>) not allowed</p></blockquote><p>低级的错误，<del>我是个傻逼</del></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.email <span class="string">&quot;you@example.com&quot;</span></span><br><span class="line">git config --global user.name <span class="string">&quot;Your Name&quot;</span></span><br></pre></td></tr></table></figure><hr><blockquote><p>fatal: unable to access ‘<a href="https://github.com/EdenJohnson2006/EdenJohnson2006.github.io.git/&#39;">https://github.com/EdenJohnson2006/EdenJohnson2006.github.io.git/&#39;</a>: The requested URL returned error: 403</p></blockquote><p><a href="https://github.com/JamesIves/github-pages-deploy-action/issues/243#issuecomment-611202870">一个玄学问题．</a></p><hr><blockquote><p>fatal: could not read Username for ‘<a href="https://github.com&/#39;">https://github.com&#39;</a>: No such device or address</p></blockquote><p><a href="https://github.com/settings/tokens">你可以试试用Token．</a></p><p><a href="https://imgchr.com/i/yKVlgf"><img src="https://s3.ax1x.com/2021/02/03/yKVlgf.jpg" alt="yKVlgf.jpg" loading="lazy"></a></p><p>好了就这么多．</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;经过一天的折腾，我总算折腾好了Github Action部署的博客．&lt;/p&gt;
&lt;p&gt;现在我只需要在这个缩减的Working Directory进行我的写作．&lt;/p&gt;
&lt;p&gt;（实际只是少了Themes文件夹，对于空间的减少只能说聊胜于无．）&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;h</summary>
      
    
    
    
    <category term="科技" scheme="https://blog.edenjohnson.cyou/categories/%E7%A7%91%E6%8A%80/"/>
    
    
    <category term="站点" scheme="https://blog.edenjohnson.cyou/tags/%E7%AB%99%E7%82%B9/"/>
    
  </entry>
  
  <entry>
    <title>换域名了</title>
    <link href="https://blog.edenjohnson.cyou/2021/01/30/domain-changed/"/>
    <id>https://blog.edenjohnson.cyou/2021/01/30/domain-changed/</id>
    <published>2021-01-30T12:08:07.000Z</published>
    <updated>2022-02-13T11:28:08.165Z</updated>
    
    <content type="html"><![CDATA[<p>换域名了</p><p>白嫖的 edenjohnson.me 没法续期只能换了:(</p><!-- @域名会留给分流页面,有很大可能会搞个IDC --><!-- https://blog.edenjohnson.cyou/Rabbit-20210130.txt -->]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;换域名了&lt;/p&gt;
&lt;p&gt;白嫖的 edenjohnson.me 没法续期只能换了:(&lt;/p&gt;
&lt;!-- @域名会留给分流页面,有很大可能会搞个IDC --&gt;

&lt;!-- https://blog.edenjohnson.cyou/Rabbit-20210130.txt --&gt;</summary>
      
    
    
    
    <category term="科技" scheme="https://blog.edenjohnson.cyou/categories/%E7%A7%91%E6%8A%80/"/>
    
    
    <category term="站点" scheme="https://blog.edenjohnson.cyou/tags/%E7%AB%99%E7%82%B9/"/>
    
  </entry>
  
  <entry>
    <title>在任意有TWRP 有SD卡的手机上安装Debian（在Android设备上原生运行Debian实操）</title>
    <link href="https://blog.edenjohnson.cyou/2021/01/15/running-debian-on-android-device-natively-realdoing/"/>
    <id>https://blog.edenjohnson.cyou/2021/01/15/running-debian-on-android-device-natively-realdoing/</id>
    <published>2021-01-15T07:07:12.000Z</published>
    <updated>2022-02-13T11:28:08.165Z</updated>
    
    <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p>最近在404上搜索到了这篇文章: <a href="https://medium.com/@quantvc/running-debian-on-android-device-natively-73545c9b0757">在Android设备上原生运行Debian</a> （需要科学上网，当然你也可以看翻译）</p><p>然后我就准备对这部OPPO R9开刀（）</p><h2 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h2><p>电脑：</p><p>​    系统：ArchLinux</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">den@eden-arch  ~  neofetch </span><br><span class="line">                   -`                    eden@eden-arch </span><br><span class="line">                  .o+`                   -------------- </span><br><span class="line">                 `ooo/                   OS: Arch Linux x86_64 </span><br><span class="line">                `+oooo:                  Host: TM1704 XMAKB3M0P130D </span><br><span class="line">               `+oooooo:                 Kernel: 5.4.87-1-lts </span><br><span class="line">               -+oooooo+:                Uptime: 8 hours, 13 mins </span><br><span class="line">             `/:-:++oooo+:               Packages: 1406 (pacman) </span><br><span class="line">            `/++++/+++++++:              Shell: zsh 5.8 </span><br><span class="line">           `/++++++++++++++:             Resolution: 1920x1080 </span><br><span class="line">          `/+++ooooooooooooo/`           DE: Plasma 5.20.5 </span><br><span class="line">         ./ooosssso++osssssso+`          WM: KWin </span><br><span class="line">        .oossssso-````/ossssss+`         WM Theme: Aritim-Dark </span><br><span class="line">       -osssssso.      :ssssssso.        Theme: Aritim-Dark [Plasma], Breeze [GTK2/3] </span><br><span class="line">      :osssssss/        osssso+++.       Icons: breeze [Plasma], breeze [GTK2/3] </span><br><span class="line">     /ossssssss/        +ssssooo/-       Terminal: konsole </span><br><span class="line">   `/ossssso+/:-        -:/+osssso+-     CPU: Intel i3-8130U (4) @ 3.400GHz </span><br><span class="line">  `+sso+:-`                 `.-/+oso:    GPU: Intel UHD Graphics 620 </span><br><span class="line"> `++:.                           `-/+/   Memory: 3181MiB / 7873MiB </span><br><span class="line"> .`                                 `/</span><br></pre></td></tr></table></figure><p>手机：</p><p>​    设备：OPPO R9tm</p><p>​    状况：已root</p><p>​    SoC：联发科曦力P10（MT6755）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line">shell@R9:/ $ uname -a                                                      </span><br><span class="line">Linux localhost 3.18.22+ #1 SMP PREEMPT Sat Oct 21 16:28:31 CST 2017 aarch64</span><br><span class="line">shell@R9:/ $ cat /proc/cpuinfo                                                 </span><br><span class="line">Processor       : AArch64 Processor rev 2 (aarch64)</span><br><span class="line">processor       : 0</span><br><span class="line">model name      : AArch64 Processor rev 2 (aarch64)</span><br><span class="line">BogoMIPS        : 26.00</span><br><span class="line">Features        : fp asimd evtstrm aes pmull sha1 sha2 crc32</span><br><span class="line">CPU implementer : 0x41</span><br><span class="line">CPU architecture: 8</span><br><span class="line">CPU variant     : 0x0</span><br><span class="line">CPU part        : 0xd03</span><br><span class="line">CPU revision    : 2</span><br><span class="line"></span><br><span class="line">processor       : 1</span><br><span class="line">model name      : AArch64 Processor rev 2 (aarch64)</span><br><span class="line">BogoMIPS        : 26.00</span><br><span class="line">Features        : fp asimd evtstrm aes pmull sha1 sha2 crc32</span><br><span class="line">CPU implementer : 0x41</span><br><span class="line">CPU architecture: 8</span><br><span class="line">CPU variant     : 0x0</span><br><span class="line">CPU part        : 0xd03</span><br><span class="line">CPU revision    : 2</span><br><span class="line"></span><br><span class="line">processor       : 2</span><br><span class="line">model name      : AArch64 Processor rev 2 (aarch64)</span><br><span class="line">BogoMIPS        : 26.00</span><br><span class="line">Features        : fp asimd evtstrm aes pmull sha1 sha2 crc32</span><br><span class="line">CPU implementer : 0x41</span><br><span class="line">CPU architecture: 8</span><br><span class="line">CPU variant     : 0x0</span><br><span class="line">CPU part        : 0xd03</span><br><span class="line">CPU revision    : 2</span><br><span class="line"></span><br><span class="line">processor       : 3</span><br><span class="line">model name      : AArch64 Processor rev 2 (aarch64)</span><br><span class="line">BogoMIPS        : 26.00</span><br><span class="line">Features        : fp asimd evtstrm aes pmull sha1 sha2 crc32</span><br><span class="line">CPU implementer : 0x41</span><br><span class="line">CPU architecture: 8</span><br><span class="line">CPU variant     : 0x0</span><br><span class="line">CPU part        : 0xd03</span><br><span class="line">CPU revision    : 2</span><br><span class="line"></span><br><span class="line">processor       : 4</span><br><span class="line">model name      : AArch64 Processor rev 2 (aarch64)</span><br><span class="line">BogoMIPS        : 26.00</span><br><span class="line">Features        : fp asimd evtstrm aes pmull sha1 sha2 crc32</span><br><span class="line">CPU implementer : 0x41</span><br><span class="line">CPU architecture: 8</span><br><span class="line">CPU variant     : 0x0</span><br><span class="line">CPU part        : 0xd03</span><br><span class="line">CPU revision    : 2</span><br><span class="line"></span><br><span class="line">processor       : 5</span><br><span class="line">model name      : AArch64 Processor rev 2 (aarch64)</span><br><span class="line">BogoMIPS        : 26.00</span><br><span class="line">Features        : fp asimd evtstrm aes pmull sha1 sha2 crc32</span><br><span class="line">CPU implementer : 0x41</span><br><span class="line">CPU architecture: 8</span><br><span class="line">CPU variant     : 0x0</span><br><span class="line">CPU part        : 0xd03</span><br><span class="line">CPU revision    : 2</span><br><span class="line"></span><br><span class="line">processor       : 6</span><br><span class="line">model name      : AArch64 Processor rev 2 (aarch64)</span><br><span class="line">BogoMIPS        : 26.00</span><br><span class="line">Features        : fp asimd evtstrm aes pmull sha1 sha2 crc32</span><br><span class="line">CPU implementer : 0x41</span><br><span class="line">CPU architecture: 8</span><br><span class="line">CPU variant     : 0x0</span><br><span class="line">CPU part        : 0xd03</span><br><span class="line">CPU revision    : 2</span><br><span class="line"></span><br><span class="line">processor       : 7</span><br><span class="line">model name      : AArch64 Processor rev 2 (aarch64)</span><br><span class="line">BogoMIPS        : 26.00</span><br><span class="line">Features        : fp asimd evtstrm aes pmull sha1 sha2 crc32</span><br><span class="line">CPU implementer : 0x41</span><br><span class="line">CPU architecture: 8</span><br><span class="line">CPU variant     : 0x0</span><br><span class="line">CPU part        : 0xd03</span><br><span class="line">CPU revision    : 2</span><br><span class="line"></span><br><span class="line">Hardware        : MT6755V/C</span><br></pre></td></tr></table></figure><h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><h2 id="分区SD卡"><a href="#分区SD卡" class="headerlink" title="分区SD卡"></a>分区SD卡</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"> eden@eden-arch  ~  sudo fdisk -l</span><br><span class="line">Identified face as eden</span><br><span class="line">Disk /dev/sda: 119.24 GiB, 128035676160 bytes, 250069680 sectors</span><br><span class="line">Disk model: SAMSUNG MZNLN128</span><br><span class="line">Units: sectors of 1 * 512 = 512 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line">Disklabel type: gpt</span><br><span class="line">Disk identifier: CD1AC5E7-52DD-6548-BAD4-5B55ABDB9549</span><br><span class="line"></span><br><span class="line">所用裝置     Start      結束      磁區  Size 類型</span><br><span class="line">/dev/sda1     2048    526335    524288  256M EFI System</span><br><span class="line">/dev/sda2   526336   6817791   6291456    3G Linux swap</span><br><span class="line">/dev/sda3  6817792 250069646 243251855  116G Linux filesystem</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Disk /dev/loop0: 310.8 MiB, 325902336 bytes, 636528 sectors</span><br><span class="line">Units: sectors of 1 * 512 = 512 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Disk /dev/sdb: 14.84 GiB, 15931539456 bytes, 31116288 sectors</span><br><span class="line">Disk model: STORAGE DEVICE  </span><br><span class="line">Units: sectors of 1 * 512 = 512 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line">Disklabel type: dos</span><br><span class="line">Disk identifier: 0x00000000</span><br><span class="line"></span><br><span class="line">所用裝置   可開機 Start     結束     磁區  Size Id 類型</span><br><span class="line">/dev/sdb1          2048 31116254 31114207 14.8G  c W95 FAT32 (LBA)</span><br><span class="line">eden@eden-arch  ~  sudo fdisk /dev/sdb</span><br><span class="line"></span><br><span class="line">Welcome to fdisk (util-linux 2.36.1).                                                                              </span><br><span class="line">Changes will remain in memory only, until you decide to write them.</span><br><span class="line">Be careful before using the write command.</span><br><span class="line">命令 (m 以獲得說明)：o</span><br><span class="line">Created a new DOS disklabel with disk identifier 0x7cb3cc48.</span><br><span class="line"></span><br><span class="line">命令 (m 以獲得說明)：n</span><br><span class="line">Partition type</span><br><span class="line">   p   primary (0 primary, 0 extended, 4 free)</span><br><span class="line">   e   extended (container for logical partitions)</span><br><span class="line">Select (default p): p</span><br><span class="line">分割區編號 (1-4, default 1): </span><br><span class="line">First sector (2048-31116287, default 2048): </span><br><span class="line">Last sector, +/-sectors or +/-size&#123;K,M,G,T,P&#125; (2048-31116287, default 31116287): +512MiB</span><br><span class="line"></span><br><span class="line">Created a new partition 1 of type &#x27;Linux&#x27; and of size 512 MiB.</span><br><span class="line">Partition #1 contains a vfat signature.</span><br><span class="line"></span><br><span class="line">Do you want to remove the signature? [Y]es/[N]o: y</span><br><span class="line"></span><br><span class="line">The signature will be removed by a write command.</span><br><span class="line"></span><br><span class="line">命令 (m 以獲得說明)：n</span><br><span class="line">Partition type</span><br><span class="line">   p   primary (1 primary, 0 extended, 3 free)</span><br><span class="line">   e   extended (container for logical partitions)</span><br><span class="line">Select (default p): p</span><br><span class="line">分割區編號 (2-4, default 2): </span><br><span class="line">First sector (1050624-31116287, default 1050624): </span><br><span class="line">Last sector, +/-sectors or +/-size&#123;K,M,G,T,P&#125; (1050624-31116287, default 31116287): </span><br><span class="line"></span><br><span class="line">Created a new partition 2 of type &#x27;Linux&#x27; and of size 14.3 GiB.</span><br><span class="line">Partition #2 contains a xfs signature.</span><br><span class="line"></span><br><span class="line">Do you want to remove the signature? [Y]es/[N]o: y</span><br><span class="line"></span><br><span class="line">The signature will be removed by a write command.</span><br><span class="line"></span><br><span class="line">命令 (m 以獲得說明)：w</span><br><span class="line">The partition table has been altered.</span><br><span class="line">Calling ioctl() to re-read partition table.</span><br><span class="line">Syncing disks.</span><br><span class="line">eden@eden-arch  ~  sudo mkfs.vfat /dev/sdb1</span><br><span class="line">mkfs.fat 4.1 (2017-01-24)</span><br><span class="line"> eden@eden-arch  ~  sudo mkfs.ext4 /dev/sdb2</span><br><span class="line">mke2fs 1.45.6 (20-Mar-2020)</span><br><span class="line">Creating filesystem with 3758208 4k blocks and 940240 inodes</span><br><span class="line">Filesystem UUID: d6d4d8f4-bbb4-49d4-8e87-8dab26da7712</span><br><span class="line">Superblock backups stored on blocks: </span><br><span class="line">        32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208</span><br><span class="line"></span><br><span class="line">Allocating group tables: done                            </span><br><span class="line">Writing inode tables: done                            </span><br><span class="line">Creating journal (16384 blocks): done</span><br><span class="line">Writing superblocks and filesystem accounting information: done   </span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="创建一个新的boot-img"><a href="#创建一个新的boot-img" class="headerlink" title="创建一个新的boot.img"></a>创建一个新的boot.img</h2><p>先把SD卡插到手机里看信息：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">root@R9:/ # ls -la /dev/block                                                  </span><br><span class="line">...</span><br><span class="line">brw------- root     root     179,  96 2021-01-13 17:19 mmcblk0rpmb</span><br><span class="line">brw------- root     root     179, 128 2021-01-15 08:00 mmcblk1</span><br><span class="line">brw------- root     root     179, 129 2021-01-15 08:00 mmcblk1p1</span><br><span class="line">brw------- root     root     179, 130 2021-01-15 08:00 mmcblk1p2</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>ext4分区是179,130，名称是mmcblk1p2</p><p>解包boot</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">eden-arch% chmod +x unmkbootimg </span><br><span class="line">eden-arch% ./unmkbootimg boot.img </span><br><span class="line">unmkbootimg version 1.2 - Mikael Q Kuisma &lt;kuisma@ping.se&gt;</span><br><span class="line">Kernel size 7840560</span><br><span class="line">Kernel address 0x40080000</span><br><span class="line">Ramdisk size 2210866</span><br><span class="line">Ramdisk address 0x45000000</span><br><span class="line">Secondary size 0</span><br><span class="line">Secondary address 0x40f00000</span><br><span class="line">Kernel tags address 0x44000000</span><br><span class="line">Flash page size 2048</span><br><span class="line">Board name is &quot;1508577311&quot;</span><br><span class="line">Command line &quot;bootopt=64S3,32N2,64N2&quot;</span><br><span class="line"></span><br><span class="line">*** WARNING ****</span><br><span class="line">This image is built using NON-standard mkbootimg!</span><br><span class="line">OFF_KERNEL_ADDR is 0xFC080100</span><br><span class="line">OFF_RAMDISK_ADDR is 0x01000100</span><br><span class="line">OFF_SECOND_ADDR is 0xFCF00100</span><br><span class="line">Please modify mkbootimg.c using the above values to build your image.</span><br><span class="line">****************</span><br><span class="line"></span><br><span class="line">Extracting kernel to file zImage ...</span><br><span class="line">Extracting root filesystem to file initramfs.cpio.gz ...</span><br><span class="line">All done.</span><br><span class="line">---------------</span><br><span class="line">To recompile this image, use:</span><br><span class="line">  mkbootimg --kernel zImage --ramdisk initramfs.cpio.gz --base 0x43ffff00 --cmdline &#x27;bootopt=64S3,32N2,64N2&#x27; --board &#x27;1508577311&#x27; -o new_boot.img</span><br><span class="line">---------------</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>额…？</p><p>非 标 准 m k b o o t i m g</p><p>好吧我得编译一份mkbootimg出来了</p><p>草我同步的CM12.1源码呢草</p><p>…</p><p>在神奇的 <a href="https://github.com/osm0sis/mkbootimg">GitHub</a> 上我找到了从CM14.1中fork出来的代码，让我们开始编译吧：</p><p><strong>注意！注意！注意！！！因为我这里的基址有问题所以需要重新编译，如果提示是：<code>This image is built using standard mkbootimg</code>请忽略这个步骤！你可以下载prebuilt的mkbootimg！</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;p&gt;最近在404上搜索到了这篇文章: &lt;a href=&quot;https://medium.com/@quantvc/running-debian-o</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>在Android设备上原生运行Debian（翻译）</title>
    <link href="https://blog.edenjohnson.cyou/2021/01/14/running-debian-on-android-device-natively-translated/"/>
    <id>https://blog.edenjohnson.cyou/2021/01/14/running-debian-on-android-device-natively-translated/</id>
    <published>2021-01-14T16:37:58.000Z</published>
    <updated>2022-02-13T11:28:08.165Z</updated>
    
    <content type="html"><![CDATA[<p>原文链接（需要科学Networking） <a href="https://medium.com/@quantvc/running-debian-on-android-device-natively-73545c9b0757">https://medium.com/@quantvc/running-debian-on-android-device-natively-73545c9b0757</a></p><p><strong>注意:本博客下翻译内容遵照WTFPL协议许可,原文可访问: <a href="http://www.wtfpl.net/about/">http://www.wtfpl.net/about/</a></strong></p><p>如果你看不懂,我拿白话跟你解释一下:</p><blockquote><p><strong>你他妈的想干嘛就干嘛我不会管你的</strong></p></blockquote><hr><p>去年，在佛罗里达州时，我买了一个不错的中端且相对“开放”的LG Optimus手机。 我root了这部机器，安装了具有最新安全补丁的第三方ROM，以各种可行的方式对其进行了强化，并尽可能将其保留为FLOSS。 它非常适合我的需求，并且陪伴了我很长时间。 几周前，我得到了一个新的OnePlus One，于是我决定将LG手机变成开发设备&#x2F;橡皮泥（意义未知）。</p><p>“为什么不把这款手机变成一台成熟的Linux服务器，并像Raspberry Pi那样在其上运行Web服务？（RPi2：md我是64Bit！）” 这个念头不断涌入我的脑海。 因此，我在9月第一周的大部分时间里都在研究可能性。</p><p>关于如何在Android设备上的chroot环境中运行Linux操作系统的教程很多，并且有无数的应用程序（例如Servers Ultimate，PAW Server）可让您在Android上直接运行网络服务器（例如VNC，VPN，SIP， FTP，代理）。 但是，我想要一台真正成熟的Linux服务器（例如Debian）在我的Android手机上无缝运行（chroot模式会限制部分功能比如systemd），这样我可以不受限制地从Debian访问Android操作系统，同时不对Android系统本身进行任何修改（反 向 C h a n g e R o o t）。</p><p>我当时在想，也许我可以编写一个新的init程序，在启动时安装一个新的&#x2F;（指Debian的root），然后在chroot环境中将控制权转移到Android init。 这种方法相对于其他方法的优点： </p><ul><li>完整的Debian系统，包括很多轻松可获取的软件包</li><li>从Debian完全控制Android</li><li>同时使用Debian和Android</li><li>可以通过SSH&#x2F;SFTP从电脑访问Android文件系统</li><li>通过SSH&#x2F;SFTP直接访问SD卡，无需卸载</li><li>更加容易备份整个系统</li><li>不对Android文件系统造成影响，Android本身对修改一无所知（SafetyNet：我觉得我不行了）</li><li>Android文件系统不再回滚更改，重启后对文件系统的改变不会被回滚（@SELinux）</li><li>Debian的关键文件系统保存在SD卡上，以便在发生重大事故时仍可以轻松访问（比如哪天你闲的没事搞了个rm -rf &#x2F;）</li><li>原生的X11UI支持</li><li>无性能损耗</li><li>可以针对性的更改Android系统，无需刷机</li><li>像管理其他Linux一样管理Android</li></ul><p>以下是我在这个项目上的笔记：</p><h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p>设备：LG Optimus L90 D415 w7 （TM定制（确信））</p><p>状况：已解锁BL，已root</p><p>SoC：高通骁龙400（MSM8226 S4Series）</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">~ <span class="comment"># uname -a</span></span><br><span class="line">Linux localhost 3.4.1-AeroKernel+ <span class="comment">#1 SMP PREEMPT Tue Oct 21 20:19:09 EDT 2014 armv7l GNU/Linux</span></span><br><span class="line">~ <span class="comment"># cat /proc/cpuinfo</span></span><br><span class="line">Processor : ARMv7 Processor rev 3 (v7l)</span><br><span class="line">processor : 0</span><br><span class="line">BogoMIPS : 38.40</span><br><span class="line">processor : 1</span><br><span class="line">BogoMIPS : 38.40</span><br><span class="line">processor : 2</span><br><span class="line">BogoMIPS : 38.40</span><br><span class="line">processor : 3</span><br><span class="line">BogoMIPS : 38.40</span><br><span class="line">Features : swp half thumb fastmult vfp edsp neon vfpv3 tls vfpv4 idiva idivt</span><br><span class="line">CPU implementer : 0x41</span><br><span class="line">CPU architecture: 7</span><br><span class="line">CPU variant : 0x0</span><br><span class="line">CPU part : 0xc07</span><br><span class="line">CPU revision : 3</span><br><span class="line">Hardware : Qualcomm MSM 8226 (Flattened Device Tree)</span><br><span class="line">Revision : 0006</span><br><span class="line">Serial : 0000000000000000</span><br></pre></td></tr></table></figure><h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><h2 id="给SD卡分区"><a href="#给SD卡分区" class="headerlink" title="给SD卡分区"></a>给SD卡分区</h2><p>在Linux电脑上，我将SD卡（至少8GB）分区为两个： </p><p>一个<del>胖文件系统</del>FAT分区</p><p>以及 一个用于Linux的ext3 &#x2F; ext4分区。 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">＃fdisk -cu /dev/sdc</span><br><span class="line">＃mkfs -t vfat /dev/sdc1</span><br><span class="line">＃mkfs -t ext4 /dev/sdc2 </span><br></pre></td></tr></table></figure><p>​    </p><h2 id="创建一个新的initramfs和boot-img"><a href="#创建一个新的initramfs和boot-img" class="headerlink" title="创建一个新的initramfs和boot.img"></a>创建一个新的initramfs和boot.img</h2><p>修改后，将Android的Boot.img中的initramfs替换。 </p><p>这个替换会使用init从SD卡的Linux分区挂载新的根文件系统，并将控制权转移到该分区。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ adb shell </span><br><span class="line">shell@w7:/ $ mount </span><br><span class="line">...</span><br><span class="line">/dev/block/vold/public:179_65 on /mnt/media_rw/F409-DD80 <span class="built_in">type</span> vfat (rw,dirsync,nosuid,nodev,noexec,relatime,uid=1023,gid=1023,fmask=0007,dmask=0007,allow_utime=0020,codepage=cp437,iocharset=iso8859-1,shortname=mixed,utf8,errors=remount-ro)</span><br><span class="line">...</span><br><span class="line">/dev/block/vold/public:179_66 on /mnt/media_rw/e0c17d6f-efcd-47eb-9f4e-bc5530f76269 <span class="built_in">type</span> ext4 (rw,dirsync,context=u:object_r:sdcard_posix:s0,nosuid,nodev,noatime,data=ordered)</span><br><span class="line">...</span><br><span class="line">shell@w7:/ $ <span class="built_in">ls</span> -la /dev/block</span><br><span class="line"> ...</span><br><span class="line">brw------- 1 root root 179, 64 1970-02-14 03:33 mmcblk1 </span><br><span class="line">brw------- 1 root root 179, 65 1970-02-14 03:33 mmcblk1p1 </span><br><span class="line">brw------- 1 root root 179, 66 1970-02-14 03:33 mmcblk1p2</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>在LG L90上，FAT分区&#x2F;mnt&#x2F;media_rw&#x2F;F409-DD80是设备179_65，因此下一个分区应该是为179_66，并且他的名字是mmcblk1p2。 这是我的新initramfs中&#x2F;init的示例。 它必须命名为&#x2F; init，因为它被硬编码到Android内核中才能在启动时执行。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/sbin/busybox sh</span></span><br><span class="line"><span class="comment"># initramfs pre-boot init script</span></span><br><span class="line"><span class="comment"># Mount the /proc and /sys filesystems</span></span><br><span class="line">/sbin/busybox mount -t proc none /proc</span><br><span class="line">/sbin/busybox mount -t sysfs none /sys</span><br><span class="line">/sbin/busybox mount -t tmpfs none /dev</span><br><span class="line"><span class="comment"># Something (what?) needs a few cycles here</span></span><br><span class="line">/sbin/busybox <span class="built_in">sleep</span> 1</span><br><span class="line"><span class="comment"># Populate /dev</span></span><br><span class="line">/sbin/busybox mdev -s</span><br><span class="line"><span class="comment"># Mount the root filesystem, second partition on micro SDcard</span></span><br><span class="line">/sbin/busybox mount -t ext4 -o noatime,nodiratime,errors=panic /dev/mmcblk1p2 /mnt/root</span><br><span class="line"><span class="comment"># Clean up</span></span><br><span class="line">/sbin/busybox umount /proc</span><br><span class="line">/sbin/busybox umount /sys</span><br><span class="line">/sbin/busybox umount /dev</span><br><span class="line"><span class="comment"># Transfer root to SDcard</span></span><br><span class="line"><span class="built_in">exec</span> /sbin/busybox switch_root /mnt/root /etc/init</span><br></pre></td></tr></table></figure><p>这个initramfs非常简单，仅包含&#x2F;sbin&#x2F;busybox和&#x2F;proc，&#x2F;sys，&#x2F;dev和&#x2F;mnt&#x2F;root。为了安全起见，您可以使用原始的initramfs（从内核中提取的），只需添加&#x2F;sbin&#x2F;busybox和一个挂载点&#x2F;mnt&#x2F;root，然后将init替换为上面的脚本即可。 您可以在 (此处)[<a href="https://busybox.net/downloads/binaries/latest/]">https://busybox.net/downloads/binaries/latest/]</a> 或Internet上的其他位置下载预编译的busybox。 </p><p>我们需要系统的基本地址（下文简称基址），即RAM的起始地址。 要从原始内核zImage中获取它，请在运行的内核中检查&#x2F;proc&#x2F;config.gz或使用内核二进制文件上的extract-ikconfig脚本。 如果都不存在&#x2F;不适用，请尝试在Android设备上的&#x2F;proc&#x2F;iomem中寻找“系统RAM”以获取基址的线索。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">root@w7:/ # cat /proc/iomem </span><br><span class="line">00000000-083fffff : System RAM </span><br><span class="line">    00008000-0108c71b : Kernel code </span><br><span class="line">    0120c000-014fd9eb : Kernel data </span><br><span class="line">0c400000-0d1fffff : System RAM </span><br><span class="line">0f500000-0f9fffff : System RAM </span><br><span class="line">0ff00000-3f7fffff : System RAM</span><br></pre></td></tr></table></figure><p>在这里，基址是00000000。</p><blockquote><p>非原文内容：这是一个非00000000开始的示例：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">root@R9:/ # cat /proc/iomem </span><br><span class="line">40000000-445fffff : System RAM </span><br><span class="line"> 40080000-41036193 : Kernel code </span><br><span class="line"> 410c2000-4146dfff : Kernel data </span><br><span class="line">44640000-bcdaffff : System RAM </span><br><span class="line">bcdbe000-bcdbffff : System RAM </span><br><span class="line">c0000000-ebffffff : System RAM </span><br><span class="line">f4c00000-f5ffffff : System RAM </span><br><span class="line">f6150000-fe41ffff : System RAM </span><br><span class="line">100000000-13fdfffff : System RAM </span><br><span class="line">13ff00000-13fffffff : System RAM</span><br></pre></td></tr></table></figure></blockquote><p>现在，创建新的启动映像。 我将获得此手机的原始启动映像并进行修改。 首先，获取L90w7的CM13 ROM并解压。（注意：选择对应系统刷机包解压！）然后使用unmkbootimg工具，该工具可帮助您解包boot.img。(当然如果你有其他的方式可以自由选择）</p><p>在Linux上，运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ wget http://whiteboard.ping.se/uploads/Android/unmkbootimg.gz </span><br><span class="line">$ gunzip unmkbootimg.gz</span><br></pre></td></tr></table></figure><p>然后，将unmkbootimg移动到与CM13同样的目录下，要解包boot，请执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">./unmkbootimg boot.img</span><br><span class="line">unmkbootimg version 1.2 - Mikael Q Kuisma &lt;kuisma@ping.se&gt;</span><br><span class="line">Kernel size 8019648</span><br><span class="line">Kernel address 0x8000</span><br><span class="line">Ramdisk size 872992</span><br><span class="line">Ramdisk address 0x1000000</span><br><span class="line">Secondary size 0</span><br><span class="line">Secondary address 0xf00000</span><br><span class="line">Kernel tags address 0x100</span><br><span class="line">Flash page size 2048</span><br><span class="line">Board name is <span class="string">&quot;&quot;</span></span><br><span class="line">Command line <span class="string">&quot;console=ttyHSL0,115200,n8 androidboot.console=ttyHSL0 user_debug=31 msm_rtb.filter=0x37 androidboot.hardware=qcom androidboot.selinux=enforcing&quot;</span></span><br><span class="line">This image is built using standard mkbootimg</span><br><span class="line">Extracting kernel to file zImage ...</span><br><span class="line">Extracting root filesystem to file initramfs.cpio.gz ...</span><br><span class="line">All <span class="keyword">done</span>.</span><br><span class="line">To recompile this image, use:mkbootimg --kernel zImage --ramdisk initramfs.cpio.gz --base 0x0 --cmdline <span class="string">&#x27;console=ttyHSL0,115200,n8 androidboot.console=ttyHSL0 user_debug=31 msm_rtb.filter=0x37 androidboot.hardware=qcom androidboot.selinux=enforcing&#x27;</span> -o new_boot.img</span><br></pre></td></tr></table></figure><p>新建一个新的initramfs目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">mkdir</span> initramfs &amp;&amp; <span class="built_in">cd</span> initramfs</span><br></pre></td></tr></table></figure><p>将ramdisk解压（先解压gzip然后解压cpio），将完成的文件放入新的initramfs目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ gzip -<span class="built_in">cd</span> ../initramfs.cpio.gz | cpio -i</span><br></pre></td></tr></table></figure><p>这会将来自ramdisk的所有文件放置在当前工作目录中。 现在，您可以如上所述更改init。 </p><p>当修改完成，开始重新创建虚拟磁盘。 重新cpio，然后重新gzip这些文件。 请记住，cpio将打包在当前目录的所有文件，因此您大概率会删除该目录中可能存在的任何其他废项。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ find . | cpio --quiet -H newc -o | gzip &gt; ../initramfs.cpio.gz</span><br><span class="line">$ <span class="built_in">cd</span> ..</span><br></pre></td></tr></table></figure><p>清理initramfs&#x2F;目录，只保留initramfs.cpio.gz和zImage。 虽然没有用于分割图像的官方工具，并且它非常琐碎（意义未知），但可以使用许多脚本来执行此操作。 该映像基本上只是内核zImage和initramfs.cpio.gz的串联。 使用可在各个站点进行预编译的Android OS构建工具包mkbootimg，将内核和新的ramdisk合并为完整映像。 另外，您可以按如下所示从源代码进行编译：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">$ cd /path/to/android-src</span><br><span class="line">$ cd system/core/libmincrypt/</span><br><span class="line">$ gcc -c *.c -I../include</span><br><span class="line">$ ar rcs libmincrypt.a *.o</span><br><span class="line">$ cd ../mkbootimg</span><br><span class="line">$ ls -la</span><br><span class="line">total 36</span><br><span class="line">drwxrwxr-x 2 abc abc 4096 Sep 7 16:51 .</span><br><span class="line">drwxrwxr-x 45 abc abc 4096 Sep 7 16:51 ..</span><br><span class="line">-rw-rw-r-- 1 abc abc 1186 Sep 7 16:51 Android.mk</span><br><span class="line">-rw-rw-r-- 1 abc abc 3266 Sep 7 16:51 bootimg.h</span><br><span class="line">-rw-rw-r-- 1 abc abc 9507 Sep 7 16:51 mkbootimg.c</span><br><span class="line">-rw-rw-r-- 1 abc abc 6379 Sep 7 16:51 unpackbootimg.c</span><br><span class="line">$ gcc mkbootimg.c -o mkbootimg -I../include ../libmincrypt/libmincrypt.a</span><br><span class="line">$ cd ../cpio</span><br><span class="line">$ $ ls -la</span><br><span class="line">total 24</span><br><span class="line">drwxrwxr-x 2 abc abc 4096 Sep 7 16:51 .</span><br><span class="line">drwxrwxr-x 45 abc abc 4096 Sep 7 16:51 ..</span><br><span class="line">-rw-rw-r-- 1 abc abc 313 Sep 7 16:51 Android.mk</span><br><span class="line">-rw-rw-r-- 1 abc abc 8946 Sep 7 16:51 mkbootfs.c</span><br><span class="line">$ gcc mkbootfs.c -o mkbootfs -I../include</span><br></pre></td></tr></table></figure><p>现在将system &#x2F; core &#x2F; mkbootimg &#x2F; mkbootimg和system &#x2F; core &#x2F; cpio &#x2F; mkbootfs复制到路径中的目录（例如〜&#x2F; bin）。现在，你可以编译你的新boot了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mkbootimg --kernel zImage --ramdisk initramfs.cpio.gz --base 0x0 --cmdline <span class="string">&#x27;console=ttyHSL0,115200,n8 androidboot.console=ttyHSL0 user_debug=31 msm_rtb.filter=0x37 androidboot.hardware=qcom androidboot.selinux=enforcing&#x27;</span> -o my-boot.img</span><br></pre></td></tr></table></figure><p><strong>注意！！！此处所执行指令应与前文To recompile this image, use后相同，切勿照搬以免发生事故！！！！！</strong></p><p> 编译之后，您应该在当前工作目录中仅看到3个文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ ls -la</span><br><span class="line">total 17876</span><br><span class="line">drwxrwxr-x 2 abc abc 4096 Sep 7 17:41 .</span><br><span class="line">drwxr-xr-x 5 abc abc 4096 Sep 7 17:40 ..</span><br><span class="line">-rw-rw-r-- 1 abc abc 1125169 Sep 7 17:39 initramfs.cpio.gz</span><br><span class="line">-rw-r--r-- 1 abc abc 9148416 Sep 7 17:41 my-boot.img</span><br><span class="line">-rw-rw-r-- 1 abc abc 8019648 Sep 7 13:42 zImage</span><br></pre></td></tr></table></figure><p>内核zImage是您的原始内核。 现在，我们将基于my-boot.img，完成其余的工作。 不要现在就刷入这个Boot！（除非你觉得你很闲想救砖）</p><h2 id="在SD卡上建立Debian的-x2F"><a href="#在SD卡上建立Debian的-x2F" class="headerlink" title="在SD卡上建立Debian的&#x2F;"></a>在SD卡上建立Debian的&#x2F;</h2><p>在你的Linux电脑上，将SD卡挂载到&#x2F;mnt&#x2F;debian</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount -t ext4 /dev/sdc2 /mnt/debian</span><br></pre></td></tr></table></figure><p>然后安装debootstrap，这个看各位的发行版了，Debian直接安装，Ubuntu不清楚，ArchLinux有AUR，其他发行版本自行解决（）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">debootstrap --verbose --arch aarch64 --foreign buster /mnt/debian https://mirrors.bfsu.edu.cn/debian/</span><br></pre></td></tr></table></figure><p>当我们为与运行debootstrap的x86（或者x86_64）系统创建不同体系结构的Debian系统时，–arch armel参数用于指示debootstrap创建用于ARM体系结构的Debian基本系统。(如果是armv8请改成AArch64) –foreign指示它仅进行初始拆包，稍后将在实际硬件上进行第二阶段安装。 jessie指示它将软件包下载到运行debootstrap的当前目录中名为“ jessie”的目录中。 最后是存储库URL，可从中获取软件包。 您可以在此处使用本地存储库，但请确保它具有用于体系结构框架的软件包。 如果需要更多信息，请参见debootstrap手册页。</p><p>完成此操作后，请卸载SD卡，然后将其重新插入Android手机。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># umount /mnt/debian</span></span><br></pre></td></tr></table></figure><p>重启手机到Recovery Mode并打开adb shell：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">root@w7:/ <span class="comment"># mount /dev/block/mmcblk1p2 /root</span></span><br><span class="line">root@w7:/ <span class="comment"># export PATH=/usr/local/sbin:/usr/local/bin:/sbin:/usr/sbin:/bin:/usr/bin:/system/bin:$PATH</span></span><br><span class="line">root@w7:/ <span class="comment"># echo &#x27;deb https://mirrors.bfsu.edu.cn/debian/ buster main contrib non-free&#x27; &gt; /root/etc/apt/sources.list</span></span><br><span class="line">root@w7:/ <span class="comment"># for f in dev dev/pts proc sys ; do mount -o bind /$f /root/$f ; done</span></span><br><span class="line">root@w7:/ <span class="comment"># export TMPDIR=/tmp</span></span><br><span class="line">root@w7:/ <span class="comment"># export HOME=/root</span></span><br><span class="line">root@w7:/ <span class="comment"># busybox chroot /root /bin/bash -l</span></span><br><span class="line">bash-4.3<span class="comment"># debootstrap/debootstrap --second-stage</span></span><br><span class="line">...</span><br><span class="line">I: Base system installed successfully.</span><br></pre></td></tr></table></figure><p>现在刷新repo数据，并安装OpenSSH-Server</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">bash-4.3# apt-get update</span><br><span class="line">bash-4.3# apt-get install openssh-server</span><br><span class="line">...</span><br><span class="line">Setting up openssh-server (1:6.7p1-5+deb8u2) </span><br><span class="line">...</span><br><span class="line">[ ok ] Starting OpenBSD Secure Shell server: sshd.</span><br><span class="line">bash-4.3# passwd root</span><br><span class="line">bash-4.3# exit</span><br><span class="line">bash-4.3# sync</span><br></pre></td></tr></table></figure><p>在这里，您实际上已经在Android设备上运行了Debian！ 但是它是chroot于Android之下，我们希望得到相反的结果。 但是，现在我们有了一个带有SSH服务器及所有组件的完整Debian系统。 我们仍然需要进行一些修补。 （如果apt-get更新不起作用，请检查您的&#x2F;etc&#x2F;named.conf。）</p><h2 id="建立新的Android的-x2F"><a href="#建立新的Android的-x2F" class="headerlink" title="建立新的Android的&#x2F;"></a>建立新的Android的&#x2F;</h2><p>将SD卡再次装回到电脑。将原始boot.img的initramfs解压到SD卡上 ext3&#x2F;4分区下的Android上。这将成为Debian系统目录结构中的新Android的&#x2F;。新建名为&#x2F;android&#x2F;log的文件夹。注意：由于&#x2F;并非以挂载点而是以子目录存在，Android将无法挂在它为只读。如果你觉得这会引起问题，可以在SD卡上单独分出Android的&#x2F;并作为&#x2F;mnt&#x2F;root&#x2F;android挂在到initramfs的init中，但是，这会让&#x2F;android&#x2F;log只读，&#x2F;etc&#x2F;init可能不会在此目录写入log。您可以通过挂载ramfs解决问题，或从&#x2F;etc&#x2F;init中关闭日志。</p><p>由于vold的限制，Android通常仅在SD卡上接受4个分区。 如果您不想将其中一个浪费在小型根文件系统上，则可以将挂载（使用–bind选项）从&#x2F; android循环到&#x2F; mnt &#x2F; android进行挂载。 然后，您可以使用重新安装将此安装点设置为只读。 请注意，您必须重新安装，因为绑定安装最初不能更改原始文件系统的标志。 在这种情况下，您必须使用&#x2F; bin &#x2F; mount在init.stage2中显式地重新安装。 现在，只要让根文件可写，直到一切就绪并运行即可。 可以稍后再做-或根本不做。</p><h2 id="收尾工作"><a href="#收尾工作" class="headerlink" title="收尾工作"></a>收尾工作</h2><p>新的initramfs将控制权转给iSD卡上ext4分区的&#x2F;etc&#x2F;init中。</p><p>以下是一个Debian引导初始化脚本的示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#!/sbin/busybox sh</span><br><span class="line">#</span><br><span class="line"># Debian environment boot init script</span><br><span class="line">#</span><br><span class="line"># Leave all the initialization process to the Android init to handle</span><br><span class="line">#</span><br><span class="line"># Launch delayed init script</span><br><span class="line">/etc/init.stage2 &gt; /android/log/boot.log 2&gt;&amp;1 &amp;</span><br><span class="line"># Transfer control to Android init - never returns</span><br><span class="line">exec /sbin/busybox chroot /android /init</span><br></pre></td></tr></table></figure><p>确保将busybox复制到&#x2F;sbin。 请注意，来自init.stage2的日志存储在Android文件树中，因此，您可以从Android访问Debian，比如，由于&#x2F;etc&#x2F;rc.local中的某些错误而导致Debian级SSH服务器无法启动时，您可以从Android访问它。</p><p>然后创建第二个脚本init.stage2 －在Android初始化完成后，Debian环境将执行第二个延迟脚本的派生。 然后，它将控制权转移到Android的原始init（当然仍以pid 1运行）。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">#!/sbin/busybox sh</span><br><span class="line">#</span><br><span class="line"># Delayed Debian environment boot init script</span><br><span class="line"># Not really init (not pid 1) but a fork of it.</span><br><span class="line"># The real init is right now executing in Android chroot</span><br><span class="line">#</span><br><span class="line">/sbin/busybox echo &quot;`/sbin/busybox date` Debian init stage2 started&quot;</span><br><span class="line"># Wait for Android init to set up everything</span><br><span class="line"># wait for dev to be mounted by Android init</span><br><span class="line">/sbin/busybox echo &quot;`/sbin/busybox date` Waiting on Android to mount /dev&quot;</span><br><span class="line">while [ ! -e /android/dev/.coldboot_done ]; do</span><br><span class="line">/sbin/busybox sleep 1</span><br><span class="line">done</span><br><span class="line"># wait for Android init to signal all done</span><br><span class="line">/sbin/busybox echo &quot;`/sbin/busybox date` Waiting on Android init to finish&quot;</span><br><span class="line">while [ -e /android/dev/.booting ]; do</span><br><span class="line">/sbin/busybox sleep 1</span><br><span class="line">done</span><br><span class="line"># Mount the /proc, /sys etc filesystems</span><br><span class="line">/sbin/busybox echo &quot;`/sbin/busybox date` Mounting /proc /sys and /dev&quot;</span><br><span class="line">/sbin/busybox mount -t proc none /proc</span><br><span class="line">/sbin/busybox mount -t sysfs none /sys</span><br><span class="line"># Mount /dev from the Android world</span><br><span class="line">/sbin/busybox mount -o bind /android/dev /dev</span><br><span class="line">/sbin/busybox mount -o bind /android/dev/pts /dev/pts</span><br><span class="line">/sbin/busybox mount -o bind /android/dev/socket /dev/socket</span><br><span class="line"># All done, now we can start running stuff</span><br><span class="line">export PATH=/sbin:/usr/sbin:/bin:/usr/bin</span><br><span class="line">/sbin/busybox echo &quot;`/sbin/busybox date` Running /etc/rc.local&quot;</span><br><span class="line"># Start selected servers</span><br><span class="line">/etc/init.d/rc.local start</span><br><span class="line">/sbin/busybox echo &quot;`/sbin/busybox date` All done&quot;</span><br><span class="line">exit 0</span><br></pre></td></tr></table></figure><p>基本上，这只会等待Android初始化，然后设置Debian所需的所有内容，例如dev，proc和sys mount，并执行&#x2F;etc&#x2F;rc.local。 由于我们是从Android根目录挂载&#x2F;dev循环安装的，因此必须删除&#x2F;dev中由debootstrap填充的所有设备，否则该挂载将失败。 我的&#x2F;etc&#x2F;rc.local看起来像这样：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh -e</span><br><span class="line">#</span><br><span class="line"># rc.local</span><br><span class="line">#</span><br><span class="line"># Executed at the end of each multiuser runlevel.</span><br><span class="line"># Make sure the script will &quot;exit 0&quot; on success or print</span><br><span class="line"># any other value on error.</span><br><span class="line">#</span><br><span class="line"># To enable or disable this script, just change the execution# bits.</span><br><span class="line">#</span><br><span class="line"># By default this script does nothing.</span><br><span class="line">/etc/init.d/hostname.sh start</span><br><span class="line">/etc/init.d/ssh start</span><br><span class="line">exit 0</span><br></pre></td></tr></table></figure><p>请注意，init确保将此处的所有内容都记录到&#x2F;android&#x2F;log&#x2F;boot.log。 这样的话在ssh服务器无法启动的情况下，您可能会在adb shell到Android的文件&#x2F;log&#x2F;boot.log中看到原因。</p><h2 id="刷写新的Boot文件"><a href="#刷写新的Boot文件" class="headerlink" title="刷写新的Boot文件"></a>刷写新的Boot文件</h2><p>如果一切顺利，该安装自定义的启动映像了。 LG L90手机在这里具有解锁的引导程序，支持fastboot。 使用组合键在手机上进入快速启动模式（在手机关闭时按住VolumeUp并通过USB线将其连接到桌面）。在你的Linux电脑上运行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># fastboot devices</span><br><span class="line"># fastboot flash boot my-boot.img</span><br><span class="line"># fastboot reboot</span><br></pre></td></tr></table></figure><p>全做完了！ 您现在正在运行以Matrix Way与Android集成的Debian。 以root用户身份使用您指定的密码连接到ssh。</p><hr><p>以下内容属于扩展内容，待补。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;原文链接（需要科学Networking） &lt;a href=&quot;https://medium.com/@quantvc/running-debian-on-android-device-natively-73545c9b0757&quot;&gt;https://medium.com/@qua</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>研（luan）究（fan）一下hexo-blog-encrypt的源代码吧（）</title>
    <link href="https://blog.edenjohnson.cyou/2021/01/12/hexo-blog-encrypt/"/>
    <id>https://blog.edenjohnson.cyou/2021/01/12/hexo-blog-encrypt/</id>
    <published>2021-01-12T07:29:28.000Z</published>
    <updated>2022-02-13T11:28:08.165Z</updated>
    
    <content type="html"><![CDATA[<p>最好不要知道为何我要研究一个加密插件。</p><p>最近突然对 <a href="https://github.com/D0n9X1n/hexo-blog-encrypt/blob/master/index.js#L126">hexo-blog-encrypt</a> 这款插件有一些兴趣，就花了一点时间去阅览主要的代码index.js。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> crypto = <span class="built_in">require</span>(<span class="string">&#x27;crypto&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;hexo-fs&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> log = <span class="built_in">require</span>(<span class="string">&#x27;hexo-log&#x27;</span>)(&#123; <span class="string">&#x27;debug&#x27;</span>: <span class="literal">false</span>, <span class="string">&#x27;slient&#x27;</span>: <span class="literal">false</span> &#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> defaultConfig = &#123;</span><br><span class="line">  <span class="string">&#x27;abstract&#x27;</span>: <span class="string">&#x27;Here\&#x27;s something encrypted, password is required to continue reading.&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;message&#x27;</span>: <span class="string">&#x27;Hey, password is required here.&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;theme&#x27;</span>: <span class="string">&#x27;default&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;wrong_pass_message&#x27;</span>: <span class="string">&#x27;Oh, this is an invalid password. Check and try again, please.&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;wrong_hash_message&#x27;</span>: <span class="string">&#x27;OOPS, these decrypted content may changed, but you can still have a look.&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;silent&#x27;</span>: <span class="literal">false</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里看起来设置了一些…变量？（C与Python玩家瑟瑟发抖）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> keySalt = <span class="title function_">textToArray</span>(<span class="string">&#x27;hexo-blog-encrypt的作者们都是大帅比!&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> ivSalt = <span class="title function_">textToArray</span>(<span class="string">&#x27;hexo-blog-encrypt是地表最强Hexo加密插件!&#x27;</span>);</span><br></pre></td></tr></table></figure><p><strong>禁止夹带私货（）</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// As we can&#x27;t detect the wrong password with AES-CBC,</span></span><br><span class="line"><span class="comment">// so adding an empty tag and check it when decrption.</span></span><br><span class="line"><span class="keyword">const</span> knownPrefix = <span class="string">&quot;&lt;hbe-prefix&gt;&lt;/hbe-prefix&gt;&quot;</span>;</span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;由于我们无法使用AES-CBC检测到错误的密码， &#x2F;&#x2F;因此，请添加一个空标签，并在进行减斜处理时进行检查？</p><p>我是没看懂注释，倒是hbe-prefix我见过：</p><p><img src="https://cdn.jsdelivr.net/gh/EdenJohnson2006/PicGoBed/images/20210112080351.png" loading="lazy"></p><p>（这个图片是从哪里截取的就不说了）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;最好不要知道为何我要研究一个加密插件。&lt;/p&gt;
&lt;p&gt;最近突然对 &lt;a href=&quot;https://github.com/D0n9X1n/hexo-blog-encrypt/blob/master/index.js#L126&quot;&gt;hexo-blog-encrypt&lt;/a&gt; 这</summary>
      
    
    
    
    <category term="科技" scheme="https://blog.edenjohnson.cyou/categories/%E7%A7%91%E6%8A%80/"/>
    
    
    <category term="Linux" scheme="https://blog.edenjohnson.cyou/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>我已经放弃了任何尝试解释我在做什么的权利。</title>
    <link href="https://blog.edenjohnson.cyou/2020/12/31/dont-want-say-agian/"/>
    <id>https://blog.edenjohnson.cyou/2020/12/31/dont-want-say-agian/</id>
    <published>2020-12-31T16:59:06.000Z</published>
    <updated>2022-02-13T11:28:08.165Z</updated>
    
    <content type="html"><![CDATA[<p>今天上完体育课。</p><p>那个燕岗又来了。</p><p>他问我你的敌人是谁？</p><p>我说“是某个在班里各种传播我谣言的人。”</p><p>结果他来了句：“哦你和全班为敌啊。”</p><p>…</p><p>我已经放弃了任何尝试解释我在做什么的权利。</p><p>你们认为我在干啥，我 就在干啥。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;今天上完体育课。&lt;/p&gt;
&lt;p&gt;那个燕岗又来了。&lt;/p&gt;
&lt;p&gt;他问我你的敌人是谁？&lt;/p&gt;
&lt;p&gt;我说“是某个在班里各种传播我谣言的人。”&lt;/p&gt;
&lt;p&gt;结果他来了句：“哦你和全班为敌啊。”&lt;/p&gt;
&lt;p&gt;…&lt;/p&gt;
&lt;p&gt;我已经放弃了任何尝试解释我在做什么的权利。&lt;/p</summary>
      
    
    
    
    <category term="生活" scheme="https://blog.edenjohnson.cyou/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>Eden的Arch入教史</title>
    <link href="https://blog.edenjohnson.cyou/2020/12/20/why-do-i-use-archlinux/"/>
    <id>https://blog.edenjohnson.cyou/2020/12/20/why-do-i-use-archlinux/</id>
    <published>2020-12-20T17:02:51.000Z</published>
    <updated>2022-02-13T11:28:08.165Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p> [eden] 草我都3个月没更新了…</p></blockquote><p>如这个图所示 这就是我现在用的ArchLinux配备Plasma的样子：</p><p><a href="https://imgchr.com/i/raNmyn"><img src="https://s3.ax1x.com/2020/12/20/raNmyn.png" alt="raNmyn.png" loading="lazy"></a></p><p>（PicGo暂时爆炸了所以先上路过）</p><blockquote><p>[eden] 诶我是什么时候用上Arch来着？</p></blockquote><p>貌似是暑假吧…</p><p>Windows用腻了就上了Linux和黑苹果。</p><p>因为黑苹果的网卡实在不敢恭维就换到了Linux。</p><p>最早是Deepin 20 社区版，后面就第一次入了Arch神教</p><p>（第一次的图片已经没有了 唯一印记就是和ChiTang的空间对话）</p><p>第一次用ArchLinux是配的GNOME</p><p>后面因为各种原因又开始在各种系统见反复横跳</p><p>直到10月份才稳定下来 使用ArchLinux。</p><p>后面又尝试了Plasma，经历了一定的调整</p><p>总算有了这个样子。</p><p>当然也遇到了喜闻乐见的滚挂（更新完KDE的主题爆炸）</p><blockquote><p>[eden] 是不是该介绍一下现在的样子？</p></blockquote><p>现在的样子…</p><p>等我先翻一下Global Theme…</p><p>哦，好了，知道了。</p><p>现在是Aritim-Dark主题+DeepinV20-Dark光标+Latte Dock栏</p><p>和上面的图的差距可能只是一个光标。</p><p>当然最近也把Typora统一成了暗色调。</p><blockquote><p>[eden] 那你告诉我 <a href="https://aur.archlinux.org/packages/com.qq.tim.spark/">com.qq.tim.spark</a> 怎么黑色化吗！</p></blockquote><p>再等等…又有点想不起来了草…</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt; [eden] 草我都3个月没更新了…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如这个图所示 这就是我现在用的ArchLinux配备Plasma的样子：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://imgchr.com/i/raNmyn&quot;&gt;&lt;</summary>
      
    
    
    
    <category term="科技" scheme="https://blog.edenjohnson.cyou/categories/%E7%A7%91%E6%8A%80/"/>
    
    
    <category term="Linux" scheme="https://blog.edenjohnson.cyou/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>没更新的一个月里 我都干了些啥（）</title>
    <link href="https://blog.edenjohnson.cyou/2020/09/04/what-do-i-do-in-last-month/"/>
    <id>https://blog.edenjohnson.cyou/2020/09/04/what-do-i-do-in-last-month/</id>
    <published>2020-09-04T22:38:50.000Z</published>
    <updated>2022-02-13T11:28:08.165Z</updated>
    
    <content type="html"><![CDATA[<p>今天是2020年9月4日。</p><p>距离上次更新博客，已经过去了34天…</p><p>在这么长的时间里，我都干了些什么？</p><h1 id="1、电脑惨遭迫害（不是"><a href="#1、电脑惨遭迫害（不是" class="headerlink" title="1、电脑惨遭迫害（不是"></a><strong>1、电脑惨遭迫害（不是</strong></h1><p>这三十多天里，这台电脑经历了4个系统</p><p>macOS，Arch Linux，Deepin 20 社区和Windows10。</p><p>（当然还有一个Windows8.1）</p><p>我至今都不知道为什么是同样的fPrintD为啥ArchLinux就能用指纹识别而Deepin 20 社区不行…</p><p>Windows 8.1因为指纹识别和驱动问题所以就用了一个下午就升级Windows 10了~</p><h1 id="2、手机换了又换"><a href="#2、手机换了又换" class="headerlink" title="2、手机换了又换"></a>2、手机换了又换</h1><p>25天前，我的vivo X7宣告抢救无效</p><p>AmOLED屏幕导致的背光去世</p><p>我***</p><p>于是我又换回了OPPO R9</p><p>结果没用几天我就因为装不上Magisk Manager换到了荣耀V9 Play</p><p>还没完</p><p>这荣耀V9 Play还被我刷成了砖头一次</p><p>（当然这件事情可能明天更新（（）</p><h1 id="3、Android求你饶了我吧（大雾"><a href="#3、Android求你饶了我吧（大雾" class="headerlink" title="3、Android求你饶了我吧（大雾"></a>3、Android求你饶了我吧（大雾</h1><p>这件事情也和荣耀V9 Play有关</p><p>我尝试编译安卓7.1给它</p><p>结果找不到java.lang</p><p>最终以失败告终</p><p>Ubuntu 20.04 ：别找我，不关我的事情.tar.gz</p><h1 id="4、开办了一个MC服务器…和Lizzie一起？"><a href="#4、开办了一个MC服务器…和Lizzie一起？" class="headerlink" title="4、开办了一个MC服务器…和Lizzie一起？"></a>4、开办了一个MC服务器…和Lizzie一起？</h1><p>（此处 Lizzie 指代 Lizzie糖心 ）</p><p>（酷安ID <a href="http://www.coolapk.com/u/3373449">http://www.coolapk.com/u/3373449</a> ）</p><p>这个情况不能透露太多…</p><hr><p>好了貌似就这么多？</p><!--还真就这么多。-->]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;今天是2020年9月4日。&lt;/p&gt;
&lt;p&gt;距离上次更新博客，已经过去了34天…&lt;/p&gt;
&lt;p&gt;在这么长的时间里，我都干了些什么？&lt;/p&gt;
&lt;h1 id=&quot;1、电脑惨遭迫害（不是&quot;&gt;&lt;a href=&quot;#1、电脑惨遭迫害（不是&quot; class=&quot;headerlink&quot; title</summary>
      
    
    
    
    <category term="生活" scheme="https://blog.edenjohnson.cyou/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="琐记" scheme="https://blog.edenjohnson.cyou/tags/%E7%90%90%E8%AE%B0/"/>
    
  </entry>
  
</feed>
