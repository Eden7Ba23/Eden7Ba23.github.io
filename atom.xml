<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>EdenJohnson瞎写小屋</title>
  
  <subtitle>一个挖了无数坑却一个没填的初二屑的博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.edenjohnson.cyou/"/>
  <updated>2021-05-28T09:58:29.258Z</updated>
  <id>https://blog.edenjohnson.cyou/</id>
  
  <author>
    <name>EdenJohnson</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Untitled</title>
    <link href="https://blog.edenjohnson.cyou/2021/05/28/Untitled/"/>
    <id>https://blog.edenjohnson.cyou/2021/05/28/Untitled/</id>
    <published>2021-05-28T09:58:29.258Z</published>
    <updated>2021-05-28T09:58:29.258Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Websocket传输Minecraft JE封包——EP1，理论依据以及计划实现</title>
    <link href="https://blog.edenjohnson.cyou/2021/05/27/websocket-mcje-ep1/"/>
    <id>https://blog.edenjohnson.cyou/2021/05/27/websocket-mcje-ep1/</id>
    <published>2021-05-27T22:11:27.000Z</published>
    <updated>2021-05-28T09:58:29.262Z</updated>
    
    <content type="html"><![CDATA[<p>依稀记得我和[数据删除]还是好友的时候，他尝试用Cloudflare代理Minecraft JE的场景。</p><p>大哥，你稍微清醒点，Cloudflare Free是只能代理HTTP/HTTPS/WebSocket的啊！</p><p>等等？WebSocket？</p><h1 id="0x00-理论依据"><a href="#0x00-理论依据" class="headerlink" title="0x00 理论依据"></a>0x00 理论依据</h1><blockquote><p><strong>WebSockets</strong> 是一种先进的技术。它可以在用户的浏览器和服务器之间打开交互式通信会话。使用此API，您可以向服务器发送消息并接收事件驱动的响应，而无需通过轮询服务器的方式以获得响应。</p></blockquote><p>——<a href="https://developer.mozilla.org/zh-CN/docs/MDN/About$history" target="_blank" rel="noopener">Mozilla贡献者</a>基于<a href="https://creativecommons.org/licenses/by-sa/2.5/" target="_blank" rel="noopener">CC-BY-SA 2.5协议</a>发布的<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/WebSockets_API" target="_blank" rel="noopener">“WebAPI接口参考/WebSockets</a>” </p><p>所以WebSockets可以在一个TCP连接上实现全双工。</p><blockquote><p>Minecraft不也行吗？</p></blockquote><p>但我们现在要代理啊！</p><p>CloudflareFree可以代理ws，但是不能代理TCP连接</p><blockquote><p>那你闲的没事用Cloudflare代理MC干啥啊？</p></blockquote><p>呃…<del>就是玩！</del>（大嘘</p><p>没啥鲜明的理由，只是觉得理论可以，想试试实际效果。</p><p>先说这么多。</p><h1 id="0x01-计划实现"><a href="#0x01-计划实现" class="headerlink" title="0x01 计划实现"></a>0x01 计划实现</h1><p>客户端与服务器建立WebSocket连接后，当Minecraft JE发出数据封包，客户端截取并包装成Websocket封包发送到服务端，服务端代替Minecraft JE发送这个数据封包，收到回复后包装成Websocket封包发回客户端，客户端传回Minecraft JE，完成一次双工。</p><p>内部的Websocket封包实现还没有定数，此处已挖坑，等待进一步补充。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;依稀记得我和[数据删除]还是好友的时候，他尝试用Cloudflare代理Minecraft JE的场景。&lt;/p&gt;
&lt;p&gt;大哥，你稍微清醒点，Cloudflare Free是只能代理HTTP/HTTPS/WebSocket的啊！&lt;/p&gt;
&lt;p&gt;等等？WebSocket？&lt;/p
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>一些个人频道的新设计...</title>
    <link href="https://blog.edenjohnson.cyou/2021/03/06/something-new-about-video-channel/"/>
    <id>https://blog.edenjohnson.cyou/2021/03/06/something-new-about-video-channel/</id>
    <published>2021-03-06T08:47:41.000Z</published>
    <updated>2021-05-28T09:58:29.258Z</updated>
    
    <content type="html"><![CDATA[<p>[eden] AndyMills 2006，AndyMills 2006，AndyMills 2006…</p><p>​          诶？AndyMills的缩写是AM诶！</p><hr><p>嗯，咳咳。</p><p>为了<del>防止我忘记我的GPG密码</del>，我准备写个文章，来写一写我新的频道的包装设计。</p><p>说实话我觉得我是个<strong>彻底的设计盲</strong>，所以有任何意见和善提出，Thanks.</p><p>废话少说，先上头像：</p><p><img src="https://pic.edenjohnson.cyou/images/no-time/AndyMills%E5%A4%B4%E5%83%8F.png" alt="" loading="lazy"></p><p>这两行文字都使用了OPPO Sans，所以大家<del>不用担心我成张三</del></p><p>后面两个三角形都是用Keynote里面的，透明度70%，上面的阴影60%。</p><p>看起来还算不错，但是我国的两会期间吗…算了，等之后吧。:-)</p><hr><p>等等我电脑头图去哪里了？<del>等我先找到再继续跟你们讲啊。</del></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;[eden] AndyMills 2006，AndyMills 2006，AndyMills 2006…&lt;/p&gt;
&lt;p&gt;​          诶？AndyMills的缩写是AM诶！&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;嗯，咳咳。&lt;/p&gt;
&lt;p&gt;为了&lt;del&gt;防止我忘记我的GPG密码&lt;/
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>lijiakai常用的多重加密的判断方式</title>
    <link href="https://blog.edenjohnson.cyou/2021/02/24/judgment-method-of-multiple-encryption/"/>
    <id>https://blog.edenjohnson.cyou/2021/02/24/judgment-method-of-multiple-encryption/</id>
    <published>2021-02-24T20:11:39.000Z</published>
    <updated>2021-05-28T09:58:29.258Z</updated>
    
    <content type="html"><![CDATA[<blockquote><h2 id="混（套）合（娃）加密"><a href="#混（套）合（娃）加密" class="headerlink" title="混（套）合（娃）加密"></a>混（套）合（娃）加密</h2><p>你也可以拿目前已知的加密来进行多重加密</p><p>例如我先用base64加密，再用AES加密，然后又转成Unicode……</p><p>只要你不注明使用了什么加密，解密的难度也会有点难</p><p><del>除非您是解密高手能看出用了什么加密类型</del></p></blockquote><p>好吧，我不瞒着各位了，我的确能解出lijiakai的混合加密。</p><p><strong>注意！本文章因引用了 <a href="https://lijiakaijun.me/posts/21034.html" target="_blank" rel="noopener">https://lijiakaijun.me/posts/21034.html</a> 将使用CC BY-SA 4.0 协议许可。</strong></p><p>好了，让我们开始吧。</p><h1 id="常用对称加密方式判断"><a href="#常用对称加密方式判断" class="headerlink" title="常用对称加密方式判断"></a>常用对称加密方式判断</h1><p>首先我们应该了解一些常用的对称加密方式：</p><p><a href="http://tool.chinaz.com/tools/textencrypt.aspx" target="_blank" rel="noopener">http://tool.chinaz.com/tools/textencrypt.aspx</a></p><p>AES,DES,RC4,Rabbit,TripleDes</p><p>让我们用不同的方式加密这段字符串：（密码均为AngelBeats）</p><blockquote><p> “活着真累啊.” “草你这” “没事” “呐”</p></blockquote><p>AES：U2FsdGVkX19Pwwjj3OHuCCJWwte0eZcsiQTgc3C7WOE1cMB6KgxkQld/9jJAx5l1<br>toZj0ZHv8ojjZqWTpGxQyw==</p><p>DES：U2FsdGVkX1/dG+Kf+PMErZ1jwPw2iUha899ZW9gyzn8WQIier/RwPajhPevsHsjn<br>sgbNvRw7u9eXhBihTN6+aw==</p><p>RC4：U2FsdGVkX1/J9fCc1vD6Szxq+jCAZprG/D07+wH66+H+f/OeshfCu79nG7v6n663<br>UHOzIgT9qooxOIwQKw==</p><p>Rabbit：U2FsdGVkX1/8cBmt6tqWXwfQl8TliZZma5ZX4TYW9HkdcH0LVfOwJCrtKe4ZQont<br>bNb1TB/REU3X/ZT5og==</p><p>TripleDES：U2FsdGVkX1/OLBqhPBzeN28PfQchjw3yQrYScHpfJBUrlDnwMu5h8MkU6cHdJWI5<br>DS/IKuqc7M6sy0APBoJ8LA==</p><p>是不是一点区别都看不出？<del>看不出就对了！（</del></p><p>嗯咳咳，其中还是有些区别的：</p><ul><li>Rabbit和RC4的/断行更多，但Rabbit分布更密集</li><li>Rabbit的+字符很少</li><li><del>草编不出来了</del></li></ul><p>我也不知道该怎么说了。</p><h1 id="Base16-32-64的区分"><a href="#Base16-32-64的区分" class="headerlink" title="Base16/32/64的区分"></a>Base16/32/64的区分</h1><p>Base16和16进制使用的字符一致，为10+6（0～9，A～F）</p><p>Base32为26+6（A～Z，2～7）</p><p>Base64为26*2+10+2（A～Z，a～z，0～9，/，+）</p><p>所以想要简单判断：</p><blockquote><p>大小写，是64</p><p>缺0 9，是32</p><p>A～F，是16</p></blockquote><p>好了就<del>水到这里</del></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;h2 id=&quot;混（套）合（娃）加密&quot;&gt;&lt;a href=&quot;#混（套）合（娃）加密&quot; class=&quot;headerlink&quot; title=&quot;混（套）合（娃）加密&quot;&gt;&lt;/a&gt;混（套）合（娃）加密&lt;/h2&gt;&lt;p&gt;你也可以拿目前已知的加密来进行多重加密&lt;/p&gt;
&lt;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>GitHub Action实现博客自动部署</title>
    <link href="https://blog.edenjohnson.cyou/2021/02/03/deploy-blog-with-github-action/"/>
    <id>https://blog.edenjohnson.cyou/2021/02/03/deploy-blog-with-github-action/</id>
    <published>2021-02-03T07:57:30.000Z</published>
    <updated>2021-05-28T09:58:29.258Z</updated>
    
    <content type="html"><![CDATA[<p>经过一天的折腾，我总算折腾好了Github Action部署的博客．</p><p>现在我只需要在这个缩减的Working Directory进行我的写作．</p><p>（实际只是少了Themes文件夹，对于空间的减少只能说聊胜于无．）</p><p><a href="https://github.com/EdenJohnson2006/BlogBackup" target="_blank" rel="noopener">我写的<del>糟糕的</del>Workflow已经开源GitHub</a>，如果有什么问题直接PR即可．</p><h1 id="写Workflow中间的坑"><a href="#写Workflow中间的坑" class="headerlink" title="写Workflow中间的坑"></a>写Workflow中间的坑</h1><blockquote><p>npm WARN checkPermissions Missing write access to /usr/local/lib/node_modules</p></blockquote><p>在安装前指定<a href="https://github.com/EdenJohnson2006/BlogBackup/blob/master/.github/workflows/deploy.yml#L32" target="_blank" rel="noopener">写modules的位置到runner的家目录即可</a>，参考：<a href="https://blog.csdn.net/zhangxuekang/article/details/89075039" target="_blank" rel="noopener">此文章</a></p><hr><blockquote><p>/home/runner/work/_temp/*.sh: line *: *: command not found</p></blockquote><p>不知道为什么Path没有起效，如果出现这种情况，往上面看：</p><blockquote><p>/home/runner/.npm-global/bin/cnpm -&gt; /home/runner/.npm-global/lib/node_modules/cnpm/bin/cnpm</p></blockquote><p>使用<code>/home/runner/.npm-global/bin/cnpm</code>代替即可．</p><hr><blockquote><p>fatal: empty ident name (for <a href="mailto:&#x72;&#117;&#110;&#110;&#x65;&#x72;&#64;&#x66;&#x76;&#x2d;&#x61;&#122;&#49;&#54;&#x2d;&#x39;&#x30;&#56;&#46;&#x61;&#x67;&#x69;&#104;&#x63;&#x6d;&#106;&#x79;&#x79;&#48;&#x70;&#x65;&#112;&#103;&#x61;&#x6e;&#x79;&#x69;&#x68;&#x64;&#120;&#120;&#x77;&#105;&#x65;&#100;&#x2e;&#x62;&#x78;&#46;&#x69;&#x6e;&#116;&#x65;&#114;&#110;&#x61;&#108;&#x2e;&#x63;&#x6c;&#111;&#x75;&#100;&#x61;&#x70;&#x70;&#x2e;&#110;&#101;&#x74;">&#x72;&#117;&#110;&#110;&#x65;&#x72;&#64;&#x66;&#x76;&#x2d;&#x61;&#122;&#49;&#54;&#x2d;&#x39;&#x30;&#56;&#46;&#x61;&#x67;&#x69;&#104;&#x63;&#x6d;&#106;&#x79;&#x79;&#48;&#x70;&#x65;&#112;&#103;&#x61;&#x6e;&#x79;&#x69;&#x68;&#x64;&#120;&#120;&#x77;&#105;&#x65;&#100;&#x2e;&#x62;&#x78;&#46;&#x69;&#x6e;&#116;&#x65;&#114;&#110;&#x61;&#108;&#x2e;&#x63;&#x6c;&#111;&#x75;&#100;&#x61;&#x70;&#x70;&#x2e;&#110;&#101;&#x74;</a>) not allowed</p></blockquote><p>低级的错误，<del>我是个傻逼</del></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.email <span class="string">"you@example.com"</span></span><br><span class="line">git config --global user.name <span class="string">"Your Name"</span></span><br></pre></td></tr></table></figure><hr><blockquote><p>fatal: unable to access ‘<a href="https://github.com/EdenJohnson2006/EdenJohnson2006.github.io.git/&#39;" target="_blank" rel="noopener">https://github.com/EdenJohnson2006/EdenJohnson2006.github.io.git/&#39;</a>: The requested URL returned error: 403</p></blockquote><p><a href="https://github.com/JamesIves/github-pages-deploy-action/issues/243#issuecomment-611202870" target="_blank" rel="noopener">一个玄学问题．</a></p><hr><blockquote><p>fatal: could not read Username for ‘<a href="https://github.com&#39;" target="_blank" rel="noopener">https://github.com&#39;</a>: No such device or address</p></blockquote><p><a href="https://github.com/settings/tokens" target="_blank" rel="noopener">你可以试试用Token．</a></p><p><a href="https://imgchr.com/i/yKVlgf" target="_blank" rel="noopener"><img src="https://s3.ax1x.com/2021/02/03/yKVlgf.jpg" alt="yKVlgf.jpg" loading="lazy"></a></p><p>好了就这么多．</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;经过一天的折腾，我总算折腾好了Github Action部署的博客．&lt;/p&gt;
&lt;p&gt;现在我只需要在这个缩减的Working Directory进行我的写作．&lt;/p&gt;
&lt;p&gt;（实际只是少了Themes文件夹，对于空间的减少只能说聊胜于无．）&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;h
      
    
    </summary>
    
    
      <category term="科技" scheme="https://blog.edenjohnson.cyou/categories/%E7%A7%91%E6%8A%80/"/>
    
    
      <category term="站点" scheme="https://blog.edenjohnson.cyou/tags/%E7%AB%99%E7%82%B9/"/>
    
  </entry>
  
  <entry>
    <title>换域名了</title>
    <link href="https://blog.edenjohnson.cyou/2021/01/30/domain-changed/"/>
    <id>https://blog.edenjohnson.cyou/2021/01/30/domain-changed/</id>
    <published>2021-01-30T12:08:07.000Z</published>
    <updated>2021-05-28T09:58:29.258Z</updated>
    
    <content type="html"><![CDATA[<p>换域名了</p><p>白嫖的 edenjohnson.me 没法续期只能换了:(</p><!-- @域名会留给分流页面,有很大可能会搞个IDC --><!-- https://blog.edenjohnson.cyou/Rabbit-20210130.txt -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;换域名了&lt;/p&gt;
&lt;p&gt;白嫖的 edenjohnson.me 没法续期只能换了:(&lt;/p&gt;
&lt;!-- @域名会留给分流页面,有很大可能会搞个IDC --&gt;

&lt;!-- https://blog.edenjohnson.cyou/Rabbit-20210130.txt --&gt;
      
    
    </summary>
    
    
      <category term="科技" scheme="https://blog.edenjohnson.cyou/categories/%E7%A7%91%E6%8A%80/"/>
    
    
      <category term="站点" scheme="https://blog.edenjohnson.cyou/tags/%E7%AB%99%E7%82%B9/"/>
    
  </entry>
  
  <entry>
    <title>在任意有TWRP 有SD卡的手机上安装Debian（在Android设备上原生运行Debian实操）</title>
    <link href="https://blog.edenjohnson.cyou/2021/01/15/running-debian-on-android-device-natively-realdoing/"/>
    <id>https://blog.edenjohnson.cyou/2021/01/15/running-debian-on-android-device-natively-realdoing/</id>
    <published>2021-01-15T07:07:12.000Z</published>
    <updated>2021-05-28T09:58:29.258Z</updated>
    
    <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p>最近在404上搜索到了这篇文章: <a href="https://medium.com/@quantvc/running-debian-on-android-device-natively-73545c9b0757" target="_blank" rel="noopener">在Android设备上原生运行Debian</a> （需要科学上网，当然你也可以看翻译）</p><p>然后我就准备对这部OPPO R9开刀（）</p><h2 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h2><p>电脑：</p><p>​    系统：ArchLinux</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">den@eden-arch  ~  neofetch </span><br><span class="line">                   -&#96;                    eden@eden-arch </span><br><span class="line">                  .o+&#96;                   -------------- </span><br><span class="line">                 &#96;ooo&#x2F;                   OS: Arch Linux x86_64 </span><br><span class="line">                &#96;+oooo:                  Host: TM1704 XMAKB3M0P130D </span><br><span class="line">               &#96;+oooooo:                 Kernel: 5.4.87-1-lts </span><br><span class="line">               -+oooooo+:                Uptime: 8 hours, 13 mins </span><br><span class="line">             &#96;&#x2F;:-:++oooo+:               Packages: 1406 (pacman) </span><br><span class="line">            &#96;&#x2F;++++&#x2F;+++++++:              Shell: zsh 5.8 </span><br><span class="line">           &#96;&#x2F;++++++++++++++:             Resolution: 1920x1080 </span><br><span class="line">          &#96;&#x2F;+++ooooooooooooo&#x2F;&#96;           DE: Plasma 5.20.5 </span><br><span class="line">         .&#x2F;ooosssso++osssssso+&#96;          WM: KWin </span><br><span class="line">        .oossssso-&#96;&#96;&#96;&#96;&#x2F;ossssss+&#96;         WM Theme: Aritim-Dark </span><br><span class="line">       -osssssso.      :ssssssso.        Theme: Aritim-Dark [Plasma], Breeze [GTK2&#x2F;3] </span><br><span class="line">      :osssssss&#x2F;        osssso+++.       Icons: breeze [Plasma], breeze [GTK2&#x2F;3] </span><br><span class="line">     &#x2F;ossssssss&#x2F;        +ssssooo&#x2F;-       Terminal: konsole </span><br><span class="line">   &#96;&#x2F;ossssso+&#x2F;:-        -:&#x2F;+osssso+-     CPU: Intel i3-8130U (4) @ 3.400GHz </span><br><span class="line">  &#96;+sso+:-&#96;                 &#96;.-&#x2F;+oso:    GPU: Intel UHD Graphics 620 </span><br><span class="line"> &#96;++:.                           &#96;-&#x2F;+&#x2F;   Memory: 3181MiB &#x2F; 7873MiB </span><br><span class="line"> .&#96;                                 &#96;&#x2F;</span><br></pre></td></tr></table></figure><p>手机：</p><p>​    设备：OPPO R9tm</p><p>​    状况：已root</p><p>​    SoC：联发科曦力P10（MT6755）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line">shell@R9:&#x2F; $ uname -a                                                      </span><br><span class="line">Linux localhost 3.18.22+ #1 SMP PREEMPT Sat Oct 21 16:28:31 CST 2017 aarch64</span><br><span class="line">shell@R9:&#x2F; $ cat &#x2F;proc&#x2F;cpuinfo                                                 </span><br><span class="line">Processor       : AArch64 Processor rev 2 (aarch64)</span><br><span class="line">processor       : 0</span><br><span class="line">model name      : AArch64 Processor rev 2 (aarch64)</span><br><span class="line">BogoMIPS        : 26.00</span><br><span class="line">Features        : fp asimd evtstrm aes pmull sha1 sha2 crc32</span><br><span class="line">CPU implementer : 0x41</span><br><span class="line">CPU architecture: 8</span><br><span class="line">CPU variant     : 0x0</span><br><span class="line">CPU part        : 0xd03</span><br><span class="line">CPU revision    : 2</span><br><span class="line"></span><br><span class="line">processor       : 1</span><br><span class="line">model name      : AArch64 Processor rev 2 (aarch64)</span><br><span class="line">BogoMIPS        : 26.00</span><br><span class="line">Features        : fp asimd evtstrm aes pmull sha1 sha2 crc32</span><br><span class="line">CPU implementer : 0x41</span><br><span class="line">CPU architecture: 8</span><br><span class="line">CPU variant     : 0x0</span><br><span class="line">CPU part        : 0xd03</span><br><span class="line">CPU revision    : 2</span><br><span class="line"></span><br><span class="line">processor       : 2</span><br><span class="line">model name      : AArch64 Processor rev 2 (aarch64)</span><br><span class="line">BogoMIPS        : 26.00</span><br><span class="line">Features        : fp asimd evtstrm aes pmull sha1 sha2 crc32</span><br><span class="line">CPU implementer : 0x41</span><br><span class="line">CPU architecture: 8</span><br><span class="line">CPU variant     : 0x0</span><br><span class="line">CPU part        : 0xd03</span><br><span class="line">CPU revision    : 2</span><br><span class="line"></span><br><span class="line">processor       : 3</span><br><span class="line">model name      : AArch64 Processor rev 2 (aarch64)</span><br><span class="line">BogoMIPS        : 26.00</span><br><span class="line">Features        : fp asimd evtstrm aes pmull sha1 sha2 crc32</span><br><span class="line">CPU implementer : 0x41</span><br><span class="line">CPU architecture: 8</span><br><span class="line">CPU variant     : 0x0</span><br><span class="line">CPU part        : 0xd03</span><br><span class="line">CPU revision    : 2</span><br><span class="line"></span><br><span class="line">processor       : 4</span><br><span class="line">model name      : AArch64 Processor rev 2 (aarch64)</span><br><span class="line">BogoMIPS        : 26.00</span><br><span class="line">Features        : fp asimd evtstrm aes pmull sha1 sha2 crc32</span><br><span class="line">CPU implementer : 0x41</span><br><span class="line">CPU architecture: 8</span><br><span class="line">CPU variant     : 0x0</span><br><span class="line">CPU part        : 0xd03</span><br><span class="line">CPU revision    : 2</span><br><span class="line"></span><br><span class="line">processor       : 5</span><br><span class="line">model name      : AArch64 Processor rev 2 (aarch64)</span><br><span class="line">BogoMIPS        : 26.00</span><br><span class="line">Features        : fp asimd evtstrm aes pmull sha1 sha2 crc32</span><br><span class="line">CPU implementer : 0x41</span><br><span class="line">CPU architecture: 8</span><br><span class="line">CPU variant     : 0x0</span><br><span class="line">CPU part        : 0xd03</span><br><span class="line">CPU revision    : 2</span><br><span class="line"></span><br><span class="line">processor       : 6</span><br><span class="line">model name      : AArch64 Processor rev 2 (aarch64)</span><br><span class="line">BogoMIPS        : 26.00</span><br><span class="line">Features        : fp asimd evtstrm aes pmull sha1 sha2 crc32</span><br><span class="line">CPU implementer : 0x41</span><br><span class="line">CPU architecture: 8</span><br><span class="line">CPU variant     : 0x0</span><br><span class="line">CPU part        : 0xd03</span><br><span class="line">CPU revision    : 2</span><br><span class="line"></span><br><span class="line">processor       : 7</span><br><span class="line">model name      : AArch64 Processor rev 2 (aarch64)</span><br><span class="line">BogoMIPS        : 26.00</span><br><span class="line">Features        : fp asimd evtstrm aes pmull sha1 sha2 crc32</span><br><span class="line">CPU implementer : 0x41</span><br><span class="line">CPU architecture: 8</span><br><span class="line">CPU variant     : 0x0</span><br><span class="line">CPU part        : 0xd03</span><br><span class="line">CPU revision    : 2</span><br><span class="line"></span><br><span class="line">Hardware        : MT6755V&#x2F;C</span><br></pre></td></tr></table></figure><h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><h2 id="分区SD卡"><a href="#分区SD卡" class="headerlink" title="分区SD卡"></a>分区SD卡</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"> eden@eden-arch  ~  sudo fdisk -l</span><br><span class="line">Identified face as eden</span><br><span class="line">Disk &#x2F;dev&#x2F;sda: 119.24 GiB, 128035676160 bytes, 250069680 sectors</span><br><span class="line">Disk model: SAMSUNG MZNLN128</span><br><span class="line">Units: sectors of 1 * 512 &#x3D; 512 bytes</span><br><span class="line">Sector size (logical&#x2F;physical): 512 bytes &#x2F; 512 bytes</span><br><span class="line">I&#x2F;O size (minimum&#x2F;optimal): 512 bytes &#x2F; 512 bytes</span><br><span class="line">Disklabel type: gpt</span><br><span class="line">Disk identifier: CD1AC5E7-52DD-6548-BAD4-5B55ABDB9549</span><br><span class="line"></span><br><span class="line">所用裝置     Start      結束      磁區  Size 類型</span><br><span class="line">&#x2F;dev&#x2F;sda1     2048    526335    524288  256M EFI System</span><br><span class="line">&#x2F;dev&#x2F;sda2   526336   6817791   6291456    3G Linux swap</span><br><span class="line">&#x2F;dev&#x2F;sda3  6817792 250069646 243251855  116G Linux filesystem</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Disk &#x2F;dev&#x2F;loop0: 310.8 MiB, 325902336 bytes, 636528 sectors</span><br><span class="line">Units: sectors of 1 * 512 &#x3D; 512 bytes</span><br><span class="line">Sector size (logical&#x2F;physical): 512 bytes &#x2F; 512 bytes</span><br><span class="line">I&#x2F;O size (minimum&#x2F;optimal): 512 bytes &#x2F; 512 bytes</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Disk &#x2F;dev&#x2F;sdb: 14.84 GiB, 15931539456 bytes, 31116288 sectors</span><br><span class="line">Disk model: STORAGE DEVICE  </span><br><span class="line">Units: sectors of 1 * 512 &#x3D; 512 bytes</span><br><span class="line">Sector size (logical&#x2F;physical): 512 bytes &#x2F; 512 bytes</span><br><span class="line">I&#x2F;O size (minimum&#x2F;optimal): 512 bytes &#x2F; 512 bytes</span><br><span class="line">Disklabel type: dos</span><br><span class="line">Disk identifier: 0x00000000</span><br><span class="line"></span><br><span class="line">所用裝置   可開機 Start     結束     磁區  Size Id 類型</span><br><span class="line">&#x2F;dev&#x2F;sdb1          2048 31116254 31114207 14.8G  c W95 FAT32 (LBA)</span><br><span class="line">eden@eden-arch  ~  sudo fdisk &#x2F;dev&#x2F;sdb</span><br><span class="line"></span><br><span class="line">Welcome to fdisk (util-linux 2.36.1).                                                                              </span><br><span class="line">Changes will remain in memory only, until you decide to write them.</span><br><span class="line">Be careful before using the write command.</span><br><span class="line">命令 (m 以獲得說明)：o</span><br><span class="line">Created a new DOS disklabel with disk identifier 0x7cb3cc48.</span><br><span class="line"></span><br><span class="line">命令 (m 以獲得說明)：n</span><br><span class="line">Partition type</span><br><span class="line">   p   primary (0 primary, 0 extended, 4 free)</span><br><span class="line">   e   extended (container for logical partitions)</span><br><span class="line">Select (default p): p</span><br><span class="line">分割區編號 (1-4, default 1): </span><br><span class="line">First sector (2048-31116287, default 2048): </span><br><span class="line">Last sector, +&#x2F;-sectors or +&#x2F;-size&#123;K,M,G,T,P&#125; (2048-31116287, default 31116287): +512MiB</span><br><span class="line"></span><br><span class="line">Created a new partition 1 of type &#39;Linux&#39; and of size 512 MiB.</span><br><span class="line">Partition #1 contains a vfat signature.</span><br><span class="line"></span><br><span class="line">Do you want to remove the signature? [Y]es&#x2F;[N]o: y</span><br><span class="line"></span><br><span class="line">The signature will be removed by a write command.</span><br><span class="line"></span><br><span class="line">命令 (m 以獲得說明)：n</span><br><span class="line">Partition type</span><br><span class="line">   p   primary (1 primary, 0 extended, 3 free)</span><br><span class="line">   e   extended (container for logical partitions)</span><br><span class="line">Select (default p): p</span><br><span class="line">分割區編號 (2-4, default 2): </span><br><span class="line">First sector (1050624-31116287, default 1050624): </span><br><span class="line">Last sector, +&#x2F;-sectors or +&#x2F;-size&#123;K,M,G,T,P&#125; (1050624-31116287, default 31116287): </span><br><span class="line"></span><br><span class="line">Created a new partition 2 of type &#39;Linux&#39; and of size 14.3 GiB.</span><br><span class="line">Partition #2 contains a xfs signature.</span><br><span class="line"></span><br><span class="line">Do you want to remove the signature? [Y]es&#x2F;[N]o: y</span><br><span class="line"></span><br><span class="line">The signature will be removed by a write command.</span><br><span class="line"></span><br><span class="line">命令 (m 以獲得說明)：w</span><br><span class="line">The partition table has been altered.</span><br><span class="line">Calling ioctl() to re-read partition table.</span><br><span class="line">Syncing disks.</span><br><span class="line">eden@eden-arch  ~  sudo mkfs.vfat &#x2F;dev&#x2F;sdb1</span><br><span class="line">mkfs.fat 4.1 (2017-01-24)</span><br><span class="line"> eden@eden-arch  ~  sudo mkfs.ext4 &#x2F;dev&#x2F;sdb2</span><br><span class="line">mke2fs 1.45.6 (20-Mar-2020)</span><br><span class="line">Creating filesystem with 3758208 4k blocks and 940240 inodes</span><br><span class="line">Filesystem UUID: d6d4d8f4-bbb4-49d4-8e87-8dab26da7712</span><br><span class="line">Superblock backups stored on blocks: </span><br><span class="line">        32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208</span><br><span class="line"></span><br><span class="line">Allocating group tables: done                            </span><br><span class="line">Writing inode tables: done                            </span><br><span class="line">Creating journal (16384 blocks): done</span><br><span class="line">Writing superblocks and filesystem accounting information: done</span><br></pre></td></tr></table></figure><h2 id="创建一个新的boot-img"><a href="#创建一个新的boot-img" class="headerlink" title="创建一个新的boot.img"></a>创建一个新的boot.img</h2><p>先把SD卡插到手机里看信息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">root@R9:&#x2F; # ls -la &#x2F;dev&#x2F;block                                                  </span><br><span class="line">...</span><br><span class="line">brw------- root     root     179,  96 2021-01-13 17:19 mmcblk0rpmb</span><br><span class="line">brw------- root     root     179, 128 2021-01-15 08:00 mmcblk1</span><br><span class="line">brw------- root     root     179, 129 2021-01-15 08:00 mmcblk1p1</span><br><span class="line">brw------- root     root     179, 130 2021-01-15 08:00 mmcblk1p2</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>ext4分区是179,130，名称是mmcblk1p2</p><p>解包boot</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">eden-arch% chmod +x unmkbootimg </span><br><span class="line">eden-arch% .&#x2F;unmkbootimg boot.img </span><br><span class="line">unmkbootimg version 1.2 - Mikael Q Kuisma &lt;kuisma@ping.se&gt;</span><br><span class="line">Kernel size 7840560</span><br><span class="line">Kernel address 0x40080000</span><br><span class="line">Ramdisk size 2210866</span><br><span class="line">Ramdisk address 0x45000000</span><br><span class="line">Secondary size 0</span><br><span class="line">Secondary address 0x40f00000</span><br><span class="line">Kernel tags address 0x44000000</span><br><span class="line">Flash page size 2048</span><br><span class="line">Board name is &quot;1508577311&quot;</span><br><span class="line">Command line &quot;bootopt&#x3D;64S3,32N2,64N2&quot;</span><br><span class="line"></span><br><span class="line">*** WARNING ****</span><br><span class="line">This image is built using NON-standard mkbootimg!</span><br><span class="line">OFF_KERNEL_ADDR is 0xFC080100</span><br><span class="line">OFF_RAMDISK_ADDR is 0x01000100</span><br><span class="line">OFF_SECOND_ADDR is 0xFCF00100</span><br><span class="line">Please modify mkbootimg.c using the above values to build your image.</span><br><span class="line">****************</span><br><span class="line"></span><br><span class="line">Extracting kernel to file zImage ...</span><br><span class="line">Extracting root filesystem to file initramfs.cpio.gz ...</span><br><span class="line">All done.</span><br><span class="line">---------------</span><br><span class="line">To recompile this image, use:</span><br><span class="line">  mkbootimg --kernel zImage --ramdisk initramfs.cpio.gz --base 0x43ffff00 --cmdline &#39;bootopt&#x3D;64S3,32N2,64N2&#39; --board &#39;1508577311&#39; -o new_boot.img</span><br><span class="line">---------------</span><br></pre></td></tr></table></figure><p>额…？</p><p>非 标 准 m k b o o t i m g</p><p>好吧我得编译一份mkbootimg出来了</p><p>草我同步的CM12.1源码呢草</p><p>…</p><p>在神奇的 <a href="https://github.com/osm0sis/mkbootimg" target="_blank" rel="noopener">GitHub</a> 上我找到了从CM14.1中fork出来的代码，让我们开始编译吧：</p><p><strong>注意！注意！注意！！！因为我这里的基址有问题所以需要重新编译，如果提示是：<code>This image is built using standard mkbootimg</code>请忽略这个步骤！你可以下载prebuilt的mkbootimg！</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;p&gt;最近在404上搜索到了这篇文章: &lt;a href=&quot;https://medium.com/@quantvc/running-debian-o
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>在Android设备上原生运行Debian（翻译）</title>
    <link href="https://blog.edenjohnson.cyou/2021/01/14/running-debian-on-android-device-natively-translated/"/>
    <id>https://blog.edenjohnson.cyou/2021/01/14/running-debian-on-android-device-natively-translated/</id>
    <published>2021-01-14T16:37:58.000Z</published>
    <updated>2021-05-28T09:58:29.258Z</updated>
    
    <content type="html"><![CDATA[<p>原文链接（需要科学Networking） <a href="https://medium.com/@quantvc/running-debian-on-android-device-natively-73545c9b0757" target="_blank" rel="noopener">https://medium.com/@quantvc/running-debian-on-android-device-natively-73545c9b0757</a></p><p><strong>注意:本博客下翻译内容遵照WTFPL协议许可,原文可访问: <a href="http://www.wtfpl.net/about/" target="_blank" rel="noopener">http://www.wtfpl.net/about/</a></strong></p><p>如果你看不懂,我拿白话跟你解释一下:</p><blockquote><p><strong>你他妈的想干嘛就干嘛我不会管你的</strong></p></blockquote><hr><p>去年，在佛罗里达州时，我买了一个不错的中端且相对“开放”的LG Optimus手机。 我root了这部机器，安装了具有最新安全补丁的第三方ROM，以各种可行的方式对其进行了强化，并尽可能将其保留为FLOSS。 它非常适合我的需求，并且陪伴了我很长时间。 几周前，我得到了一个新的OnePlus One，于是我决定将LG手机变成开发设备/橡皮泥（意义未知）。</p><p>“为什么不把这款手机变成一台成熟的Linux服务器，并像Raspberry Pi那样在其上运行Web服务？（RPi2：md我是64Bit！）” 这个念头不断涌入我的脑海。 因此，我在9月第一周的大部分时间里都在研究可能性。</p><p>关于如何在Android设备上的chroot环境中运行Linux操作系统的教程很多，并且有无数的应用程序（例如Servers Ultimate，PAW Server）可让您在Android上直接运行网络服务器（例如VNC，VPN，SIP， FTP，代理）。 但是，我想要一台真正成熟的Linux服务器（例如Debian）在我的Android手机上无缝运行（chroot模式会限制部分功能比如systemd），这样我可以不受限制地从Debian访问Android操作系统，同时不对Android系统本身进行任何修改（反 向 C h a n g e R o o t）。</p><p>我当时在想，也许我可以编写一个新的init程序，在启动时安装一个新的/（指Debian的root），然后在chroot环境中将控制权转移到Android init。 这种方法相对于其他方法的优点： </p><ul><li>完整的Debian系统，包括很多轻松可获取的软件包</li><li>从Debian完全控制Android</li><li>同时使用Debian和Android</li><li>可以通过SSH/SFTP从电脑访问Android文件系统</li><li>通过SSH/SFTP直接访问SD卡，无需卸载</li><li>更加容易备份整个系统</li><li>不对Android文件系统造成影响，Android本身对修改一无所知（SafetyNet：我觉得我不行了）</li><li>Android文件系统不再回滚更改，重启后对文件系统的改变不会被回滚（@SELinux）</li><li>Debian的关键文件系统保存在SD卡上，以便在发生重大事故时仍可以轻松访问（比如哪天你闲的没事搞了个rm -rf /）</li><li>原生的X11UI支持</li><li>无性能损耗</li><li>可以针对性的更改Android系统，无需刷机</li><li>像管理其他Linux一样管理Android</li></ul><p>以下是我在这个项目上的笔记：</p><h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p>设备：LG Optimus L90 D415 w7 （TM定制（确信））</p><p>状况：已解锁BL，已root</p><p>SoC：高通骁龙400（MSM8226 S4Series）</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">~ <span class="comment"># uname -a</span></span><br><span class="line">Linux localhost 3.4.1-AeroKernel+ <span class="comment">#1 SMP PREEMPT Tue Oct 21 20:19:09 EDT 2014 armv7l GNU/Linux</span></span><br><span class="line">~ <span class="comment"># cat /proc/cpuinfo</span></span><br><span class="line">Processor : ARMv7 Processor rev 3 (v7l)</span><br><span class="line">processor : 0</span><br><span class="line">BogoMIPS : 38.40</span><br><span class="line">processor : 1</span><br><span class="line">BogoMIPS : 38.40</span><br><span class="line">processor : 2</span><br><span class="line">BogoMIPS : 38.40</span><br><span class="line">processor : 3</span><br><span class="line">BogoMIPS : 38.40</span><br><span class="line">Features : swp half thumb fastmult vfp edsp neon vfpv3 tls vfpv4 idiva idivt</span><br><span class="line">CPU implementer : 0x41</span><br><span class="line">CPU architecture: 7</span><br><span class="line">CPU variant : 0x0</span><br><span class="line">CPU part : 0xc07</span><br><span class="line">CPU revision : 3</span><br><span class="line">Hardware : Qualcomm MSM 8226 (Flattened Device Tree)</span><br><span class="line">Revision : 0006</span><br><span class="line">Serial : 0000000000000000</span><br></pre></td></tr></table></figure><h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><h2 id="给SD卡分区"><a href="#给SD卡分区" class="headerlink" title="给SD卡分区"></a>给SD卡分区</h2><p>在Linux电脑上，我将SD卡（至少8GB）分区为两个： </p><p>一个<del>胖文件系统</del>FAT分区</p><p>以及 一个用于Linux的ext3 / ext4分区。 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">＃fdisk -cu /dev/sdc</span><br><span class="line">＃mkfs -t vfat /dev/sdc1</span><br><span class="line">＃mkfs -t ext4 /dev/sdc2</span><br></pre></td></tr></table></figure><p>​    </p><h2 id="创建一个新的initramfs和boot-img"><a href="#创建一个新的initramfs和boot-img" class="headerlink" title="创建一个新的initramfs和boot.img"></a>创建一个新的initramfs和boot.img</h2><p>修改后，将Android的Boot.img中的initramfs替换。 </p><p>这个替换会使用init从SD卡的Linux分区挂载新的根文件系统，并将控制权转移到该分区。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ adb shell </span><br><span class="line">shell@w7:/ $ mount </span><br><span class="line">...</span><br><span class="line">/dev/block/vold/public:179_65 on /mnt/media_rw/F409-DD80 <span class="built_in">type</span> vfat (rw,dirsync,nosuid,nodev,noexec,relatime,uid=1023,gid=1023,fmask=0007,dmask=0007,allow_utime=0020,codepage=cp437,iocharset=iso8859-1,shortname=mixed,utf8,errors=remount-ro)</span><br><span class="line">...</span><br><span class="line">/dev/block/vold/public:179_66 on /mnt/media_rw/e0c17d6f-efcd-47eb-9f4e-bc5530f76269 <span class="built_in">type</span> ext4 (rw,dirsync,context=u:object_r:sdcard_posix:s0,nosuid,nodev,noatime,data=ordered)</span><br><span class="line">...</span><br><span class="line">shell@w7:/ $ ls -la /dev/block</span><br><span class="line"> ...</span><br><span class="line">brw------- 1 root root 179, 64 1970-02-14 03:33 mmcblk1 </span><br><span class="line">brw------- 1 root root 179, 65 1970-02-14 03:33 mmcblk1p1 </span><br><span class="line">brw------- 1 root root 179, 66 1970-02-14 03:33 mmcblk1p2</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>在LG L90上，FAT分区/mnt/media_rw/F409-DD80是设备179_65，因此下一个分区应该是为179_66，并且他的名字是mmcblk1p2。 这是我的新initramfs中/init的示例。 它必须命名为/ init，因为它被硬编码到Android内核中才能在启动时执行。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/sbin/busybox sh</span></span><br><span class="line"><span class="comment"># initramfs pre-boot init script</span></span><br><span class="line"><span class="comment"># Mount the /proc and /sys filesystems</span></span><br><span class="line">/sbin/busybox mount -t proc none /proc</span><br><span class="line">/sbin/busybox mount -t sysfs none /sys</span><br><span class="line">/sbin/busybox mount -t tmpfs none /dev</span><br><span class="line"><span class="comment"># Something (what?) needs a few cycles here</span></span><br><span class="line">/sbin/busybox sleep 1</span><br><span class="line"><span class="comment"># Populate /dev</span></span><br><span class="line">/sbin/busybox mdev -s</span><br><span class="line"><span class="comment"># Mount the root filesystem, second partition on micro SDcard</span></span><br><span class="line">/sbin/busybox mount -t ext4 -o noatime,nodiratime,errors=panic /dev/mmcblk1p2 /mnt/root</span><br><span class="line"><span class="comment"># Clean up</span></span><br><span class="line">/sbin/busybox umount /proc</span><br><span class="line">/sbin/busybox umount /sys</span><br><span class="line">/sbin/busybox umount /dev</span><br><span class="line"><span class="comment"># Transfer root to SDcard</span></span><br><span class="line"><span class="built_in">exec</span> /sbin/busybox switch_root /mnt/root /etc/init</span><br></pre></td></tr></table></figure><p>这个initramfs非常简单，仅包含/sbin/busybox和/proc，/sys，/dev和/mnt/root。为了安全起见，您可以使用原始的initramfs（从内核中提取的），只需添加/sbin/busybox和一个挂载点/mnt/root，然后将init替换为上面的脚本即可。 您可以在 (此处)[<a href="https://busybox.net/downloads/binaries/latest/]" target="_blank" rel="noopener">https://busybox.net/downloads/binaries/latest/]</a> 或Internet上的其他位置下载预编译的busybox。 </p><p>我们需要系统的基本地址（下文简称基址），即RAM的起始地址。 要从原始内核zImage中获取它，请在运行的内核中检查/proc/config.gz或使用内核二进制文件上的extract-ikconfig脚本。 如果都不存在/不适用，请尝试在Android设备上的/proc/iomem中寻找“系统RAM”以获取基址的线索。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">root@w7:/ # cat /proc/iomem </span><br><span class="line">00000000-083fffff : System RAM </span><br><span class="line">    00008000-0108c71b : Kernel code </span><br><span class="line">    0120c000-014fd9eb : Kernel data </span><br><span class="line">0c400000-0d1fffff : System RAM </span><br><span class="line">0f500000-0f9fffff : System RAM </span><br><span class="line">0ff00000-3f7fffff : System RAM</span><br></pre></td></tr></table></figure><p>在这里，基址是00000000。</p><blockquote><p>非原文内容：这是一个非00000000开始的示例：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">root@R9:/ # cat /proc/iomem </span><br><span class="line">40000000-445fffff : System RAM </span><br><span class="line"> 40080000-41036193 : Kernel code </span><br><span class="line"> 410c2000-4146dfff : Kernel data </span><br><span class="line">44640000-bcdaffff : System RAM </span><br><span class="line">bcdbe000-bcdbffff : System RAM </span><br><span class="line">c0000000-ebffffff : System RAM </span><br><span class="line">f4c00000-f5ffffff : System RAM </span><br><span class="line">f6150000-fe41ffff : System RAM </span><br><span class="line">100000000-13fdfffff : System RAM </span><br><span class="line">13ff00000-13fffffff : System RAM</span><br></pre></td></tr></table></figure></blockquote><p>现在，创建新的启动映像。 我将获得此手机的原始启动映像并进行修改。 首先，获取L90w7的CM13 ROM并解压。（注意：选择对应系统刷机包解压！）然后使用unmkbootimg工具，该工具可帮助您解包boot.img。(当然如果你有其他的方式可以自由选择）</p><p>在Linux上，运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ wget http://whiteboard.ping.se/uploads/Android/unmkbootimg.gz </span><br><span class="line">$ gunzip unmkbootimg.gz</span><br></pre></td></tr></table></figure><p>然后，将unmkbootimg移动到与CM13同样的目录下，要解包boot，请执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">./unmkbootimg boot.img</span><br><span class="line">unmkbootimg version 1.2 - Mikael Q Kuisma &lt;kuisma@ping.se&gt;</span><br><span class="line">Kernel size 8019648</span><br><span class="line">Kernel address 0x8000</span><br><span class="line">Ramdisk size 872992</span><br><span class="line">Ramdisk address 0x1000000</span><br><span class="line">Secondary size 0</span><br><span class="line">Secondary address 0xf00000</span><br><span class="line">Kernel tags address 0x100</span><br><span class="line">Flash page size 2048</span><br><span class="line">Board name is <span class="string">""</span></span><br><span class="line">Command line <span class="string">"console=ttyHSL0,115200,n8 androidboot.console=ttyHSL0 user_debug=31 msm_rtb.filter=0x37 androidboot.hardware=qcom androidboot.selinux=enforcing"</span></span><br><span class="line">This image is built using standard mkbootimg</span><br><span class="line">Extracting kernel to file zImage ...</span><br><span class="line">Extracting root filesystem to file initramfs.cpio.gz ...</span><br><span class="line">All <span class="keyword">done</span>.</span><br><span class="line">To recompile this image, use:mkbootimg --kernel zImage --ramdisk initramfs.cpio.gz --base 0x0 --cmdline <span class="string">'console=ttyHSL0,115200,n8 androidboot.console=ttyHSL0 user_debug=31 msm_rtb.filter=0x37 androidboot.hardware=qcom androidboot.selinux=enforcing'</span> -o new_boot.img</span><br></pre></td></tr></table></figure><p>新建一个新的initramfs目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir initramfs &amp;&amp; <span class="built_in">cd</span> initramfs</span><br></pre></td></tr></table></figure><p>将ramdisk解压（先解压gzip然后解压cpio），将完成的文件放入新的initramfs目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ gzip -<span class="built_in">cd</span> ../initramfs.cpio.gz | cpio -i</span><br></pre></td></tr></table></figure><p>这会将来自ramdisk的所有文件放置在当前工作目录中。 现在，您可以如上所述更改init。 </p><p>当修改完成，开始重新创建虚拟磁盘。 重新cpio，然后重新gzip这些文件。 请记住，cpio将打包在当前目录的所有文件，因此您大概率会删除该目录中可能存在的任何其他废项。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ find . | cpio --quiet -H newc -o | gzip &gt; ../initramfs.cpio.gz</span><br><span class="line">$ <span class="built_in">cd</span> ..</span><br></pre></td></tr></table></figure><p>清理initramfs/目录，只保留initramfs.cpio.gz和zImage。 虽然没有用于分割图像的官方工具，并且它非常琐碎（意义未知），但可以使用许多脚本来执行此操作。 该映像基本上只是内核zImage和initramfs.cpio.gz的串联。 使用可在各个站点进行预编译的Android OS构建工具包mkbootimg，将内核和新的ramdisk合并为完整映像。 另外，您可以按如下所示从源代码进行编译：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">$ cd &#x2F;path&#x2F;to&#x2F;android-src</span><br><span class="line">$ cd system&#x2F;core&#x2F;libmincrypt&#x2F;</span><br><span class="line">$ gcc -c *.c -I..&#x2F;include</span><br><span class="line">$ ar rcs libmincrypt.a *.o</span><br><span class="line">$ cd ..&#x2F;mkbootimg</span><br><span class="line">$ ls -la</span><br><span class="line">total 36</span><br><span class="line">drwxrwxr-x 2 abc abc 4096 Sep 7 16:51 .</span><br><span class="line">drwxrwxr-x 45 abc abc 4096 Sep 7 16:51 ..</span><br><span class="line">-rw-rw-r-- 1 abc abc 1186 Sep 7 16:51 Android.mk</span><br><span class="line">-rw-rw-r-- 1 abc abc 3266 Sep 7 16:51 bootimg.h</span><br><span class="line">-rw-rw-r-- 1 abc abc 9507 Sep 7 16:51 mkbootimg.c</span><br><span class="line">-rw-rw-r-- 1 abc abc 6379 Sep 7 16:51 unpackbootimg.c</span><br><span class="line">$ gcc mkbootimg.c -o mkbootimg -I..&#x2F;include ..&#x2F;libmincrypt&#x2F;libmincrypt.a</span><br><span class="line">$ cd ..&#x2F;cpio</span><br><span class="line">$ $ ls -la</span><br><span class="line">total 24</span><br><span class="line">drwxrwxr-x 2 abc abc 4096 Sep 7 16:51 .</span><br><span class="line">drwxrwxr-x 45 abc abc 4096 Sep 7 16:51 ..</span><br><span class="line">-rw-rw-r-- 1 abc abc 313 Sep 7 16:51 Android.mk</span><br><span class="line">-rw-rw-r-- 1 abc abc 8946 Sep 7 16:51 mkbootfs.c</span><br><span class="line">$ gcc mkbootfs.c -o mkbootfs -I..&#x2F;include</span><br></pre></td></tr></table></figure><p>现在将system / core / mkbootimg / mkbootimg和system / core / cpio / mkbootfs复制到路径中的目录（例如〜/ bin）。现在，你可以编译你的新boot了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mkbootimg --kernel zImage --ramdisk initramfs.cpio.gz --base 0x0 --cmdline <span class="string">'console=ttyHSL0,115200,n8 androidboot.console=ttyHSL0 user_debug=31 msm_rtb.filter=0x37 androidboot.hardware=qcom androidboot.selinux=enforcing'</span> -o my-boot.img</span><br></pre></td></tr></table></figure><p><strong>注意！！！此处所执行指令应与前文To recompile this image, use后相同，切勿照搬以免发生事故！！！！！</strong></p><p> 编译之后，您应该在当前工作目录中仅看到3个文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ ls -la</span><br><span class="line">total 17876</span><br><span class="line">drwxrwxr-x 2 abc abc 4096 Sep 7 17:41 .</span><br><span class="line">drwxr-xr-x 5 abc abc 4096 Sep 7 17:40 ..</span><br><span class="line">-rw-rw-r-- 1 abc abc 1125169 Sep 7 17:39 initramfs.cpio.gz</span><br><span class="line">-rw-r--r-- 1 abc abc 9148416 Sep 7 17:41 my-boot.img</span><br><span class="line">-rw-rw-r-- 1 abc abc 8019648 Sep 7 13:42 zImage</span><br></pre></td></tr></table></figure><p>内核zImage是您的原始内核。 现在，我们将基于my-boot.img，完成其余的工作。 不要现在就刷入这个Boot！（除非你觉得你很闲想救砖）</p><h2 id="在SD卡上建立Debian的"><a href="#在SD卡上建立Debian的" class="headerlink" title="在SD卡上建立Debian的/"></a>在SD卡上建立Debian的/</h2><p>在你的Linux电脑上，将SD卡挂载到/mnt/debian</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount -t ext4 /dev/sdc2 /mnt/debian</span><br></pre></td></tr></table></figure><p>然后安装debootstrap，这个看各位的发行版了，Debian直接安装，Ubuntu不清楚，ArchLinux有AUR，其他发行版本自行解决（）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">debootstrap --verbose --arch aarch64 --foreign buster &#x2F;mnt&#x2F;debian https:&#x2F;&#x2F;mirrors.bfsu.edu.cn&#x2F;debian&#x2F;</span><br></pre></td></tr></table></figure><p>当我们为与运行debootstrap的x86（或者x86_64）系统创建不同体系结构的Debian系统时，–arch armel参数用于指示debootstrap创建用于ARM体系结构的Debian基本系统。(如果是armv8请改成AArch64) –foreign指示它仅进行初始拆包，稍后将在实际硬件上进行第二阶段安装。 jessie指示它将软件包下载到运行debootstrap的当前目录中名为“ jessie”的目录中。 最后是存储库URL，可从中获取软件包。 您可以在此处使用本地存储库，但请确保它具有用于体系结构框架的软件包。 如果需要更多信息，请参见debootstrap手册页。</p><p>完成此操作后，请卸载SD卡，然后将其重新插入Android手机。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># umount /mnt/debian</span></span><br></pre></td></tr></table></figure><p>重启手机到Recovery Mode并打开adb shell：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">root@w7:/ <span class="comment"># mount /dev/block/mmcblk1p2 /root</span></span><br><span class="line">root@w7:/ <span class="comment"># export PATH=/usr/local/sbin:/usr/local/bin:/sbin:/usr/sbin:/bin:/usr/bin:/system/bin:$PATH</span></span><br><span class="line">root@w7:/ <span class="comment"># echo 'deb https://mirrors.bfsu.edu.cn/debian/ buster main contrib non-free' &gt; /root/etc/apt/sources.list</span></span><br><span class="line">root@w7:/ <span class="comment"># for f in dev dev/pts proc sys ; do mount -o bind /$f /root/$f ; done</span></span><br><span class="line">root@w7:/ <span class="comment"># export TMPDIR=/tmp</span></span><br><span class="line">root@w7:/ <span class="comment"># export HOME=/root</span></span><br><span class="line">root@w7:/ <span class="comment"># busybox chroot /root /bin/bash -l</span></span><br><span class="line">bash-4.3<span class="comment"># debootstrap/debootstrap --second-stage</span></span><br><span class="line">...</span><br><span class="line">I: Base system installed successfully.</span><br></pre></td></tr></table></figure><p>现在刷新repo数据，并安装OpenSSH-Server</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">bash-4.3# apt-get update</span><br><span class="line">bash-4.3# apt-get install openssh-server</span><br><span class="line">...</span><br><span class="line">Setting up openssh-server (1:6.7p1-5+deb8u2) </span><br><span class="line">...</span><br><span class="line">[ ok ] Starting OpenBSD Secure Shell server: sshd.</span><br><span class="line">bash-4.3# passwd root</span><br><span class="line">bash-4.3# exit</span><br><span class="line">bash-4.3# sync</span><br></pre></td></tr></table></figure><p>在这里，您实际上已经在Android设备上运行了Debian！ 但是它是chroot于Android之下，我们希望得到相反的结果。 但是，现在我们有了一个带有SSH服务器及所有组件的完整Debian系统。 我们仍然需要进行一些修补。 （如果apt-get更新不起作用，请检查您的/etc/named.conf。）</p><h2 id="建立新的Android的"><a href="#建立新的Android的" class="headerlink" title="建立新的Android的/"></a>建立新的Android的/</h2><p>将SD卡再次装回到电脑。将原始boot.img的initramfs解压到SD卡上 ext3/4分区下的Android上。这将成为Debian系统目录结构中的新Android的/。新建名为/android/log的文件夹。注意：由于/并非以挂载点而是以子目录存在，Android将无法挂在它为只读。如果你觉得这会引起问题，可以在SD卡上单独分出Android的/并作为/mnt/root/android挂在到initramfs的init中，但是，这会让/android/log只读，/etc/init可能不会在此目录写入log。您可以通过挂载ramfs解决问题，或从/etc/init中关闭日志。</p><p>由于vold的限制，Android通常仅在SD卡上接受4个分区。 如果您不想将其中一个浪费在小型根文件系统上，则可以将挂载（使用–bind选项）从/ android循环到/ mnt / android进行挂载。 然后，您可以使用重新安装将此安装点设置为只读。 请注意，您必须重新安装，因为绑定安装最初不能更改原始文件系统的标志。 在这种情况下，您必须使用/ bin / mount在init.stage2中显式地重新安装。 现在，只要让根文件可写，直到一切就绪并运行即可。 可以稍后再做-或根本不做。</p><h2 id="收尾工作"><a href="#收尾工作" class="headerlink" title="收尾工作"></a>收尾工作</h2><p>新的initramfs将控制权转给iSD卡上ext4分区的/etc/init中。</p><p>以下是一个Debian引导初始化脚本的示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;sbin&#x2F;busybox sh</span><br><span class="line">#</span><br><span class="line"># Debian environment boot init script</span><br><span class="line">#</span><br><span class="line"># Leave all the initialization process to the Android init to handle</span><br><span class="line">#</span><br><span class="line"># Launch delayed init script</span><br><span class="line">&#x2F;etc&#x2F;init.stage2 &gt; &#x2F;android&#x2F;log&#x2F;boot.log 2&gt;&amp;1 &amp;</span><br><span class="line"># Transfer control to Android init - never returns</span><br><span class="line">exec &#x2F;sbin&#x2F;busybox chroot &#x2F;android &#x2F;init</span><br></pre></td></tr></table></figure><p>确保将busybox复制到/sbin。 请注意，来自init.stage2的日志存储在Android文件树中，因此，您可以从Android访问Debian，比如，由于/etc/rc.local中的某些错误而导致Debian级SSH服务器无法启动时，您可以从Android访问它。</p><p>然后创建第二个脚本init.stage2 －在Android初始化完成后，Debian环境将执行第二个延迟脚本的派生。 然后，它将控制权转移到Android的原始init（当然仍以pid 1运行）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;sbin&#x2F;busybox sh</span><br><span class="line">#</span><br><span class="line"># Delayed Debian environment boot init script</span><br><span class="line"># Not really init (not pid 1) but a fork of it.</span><br><span class="line"># The real init is right now executing in Android chroot</span><br><span class="line">#</span><br><span class="line">&#x2F;sbin&#x2F;busybox echo &quot;&#96;&#x2F;sbin&#x2F;busybox date&#96; Debian init stage2 started&quot;</span><br><span class="line"># Wait for Android init to set up everything</span><br><span class="line"># wait for dev to be mounted by Android init</span><br><span class="line">&#x2F;sbin&#x2F;busybox echo &quot;&#96;&#x2F;sbin&#x2F;busybox date&#96; Waiting on Android to mount &#x2F;dev&quot;</span><br><span class="line">while [ ! -e &#x2F;android&#x2F;dev&#x2F;.coldboot_done ]; do</span><br><span class="line">&#x2F;sbin&#x2F;busybox sleep 1</span><br><span class="line">done</span><br><span class="line"># wait for Android init to signal all done</span><br><span class="line">&#x2F;sbin&#x2F;busybox echo &quot;&#96;&#x2F;sbin&#x2F;busybox date&#96; Waiting on Android init to finish&quot;</span><br><span class="line">while [ -e &#x2F;android&#x2F;dev&#x2F;.booting ]; do</span><br><span class="line">&#x2F;sbin&#x2F;busybox sleep 1</span><br><span class="line">done</span><br><span class="line"># Mount the &#x2F;proc, &#x2F;sys etc filesystems</span><br><span class="line">&#x2F;sbin&#x2F;busybox echo &quot;&#96;&#x2F;sbin&#x2F;busybox date&#96; Mounting &#x2F;proc &#x2F;sys and &#x2F;dev&quot;</span><br><span class="line">&#x2F;sbin&#x2F;busybox mount -t proc none &#x2F;proc</span><br><span class="line">&#x2F;sbin&#x2F;busybox mount -t sysfs none &#x2F;sys</span><br><span class="line"># Mount &#x2F;dev from the Android world</span><br><span class="line">&#x2F;sbin&#x2F;busybox mount -o bind &#x2F;android&#x2F;dev &#x2F;dev</span><br><span class="line">&#x2F;sbin&#x2F;busybox mount -o bind &#x2F;android&#x2F;dev&#x2F;pts &#x2F;dev&#x2F;pts</span><br><span class="line">&#x2F;sbin&#x2F;busybox mount -o bind &#x2F;android&#x2F;dev&#x2F;socket &#x2F;dev&#x2F;socket</span><br><span class="line"># All done, now we can start running stuff</span><br><span class="line">export PATH&#x3D;&#x2F;sbin:&#x2F;usr&#x2F;sbin:&#x2F;bin:&#x2F;usr&#x2F;bin</span><br><span class="line">&#x2F;sbin&#x2F;busybox echo &quot;&#96;&#x2F;sbin&#x2F;busybox date&#96; Running &#x2F;etc&#x2F;rc.local&quot;</span><br><span class="line"># Start selected servers</span><br><span class="line">&#x2F;etc&#x2F;init.d&#x2F;rc.local start</span><br><span class="line">&#x2F;sbin&#x2F;busybox echo &quot;&#96;&#x2F;sbin&#x2F;busybox date&#96; All done&quot;</span><br><span class="line">exit 0</span><br></pre></td></tr></table></figure><p>基本上，这只会等待Android初始化，然后设置Debian所需的所有内容，例如dev，proc和sys mount，并执行/etc/rc.local。 由于我们是从Android根目录挂载/dev循环安装的，因此必须删除/dev中由debootstrap填充的所有设备，否则该挂载将失败。 我的/etc/rc.local看起来像这样：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;sh -e</span><br><span class="line">#</span><br><span class="line"># rc.local</span><br><span class="line">#</span><br><span class="line"># Executed at the end of each multiuser runlevel.</span><br><span class="line"># Make sure the script will &quot;exit 0&quot; on success or print</span><br><span class="line"># any other value on error.</span><br><span class="line">#</span><br><span class="line"># To enable or disable this script, just change the execution# bits.</span><br><span class="line">#</span><br><span class="line"># By default this script does nothing.</span><br><span class="line">&#x2F;etc&#x2F;init.d&#x2F;hostname.sh start</span><br><span class="line">&#x2F;etc&#x2F;init.d&#x2F;ssh start</span><br><span class="line">exit 0</span><br></pre></td></tr></table></figure><p>请注意，init确保将此处的所有内容都记录到/android/log/boot.log。 这样的话在ssh服务器无法启动的情况下，您可能会在adb shell到Android的文件/log/boot.log中看到原因。</p><h2 id="刷写新的Boot文件"><a href="#刷写新的Boot文件" class="headerlink" title="刷写新的Boot文件"></a>刷写新的Boot文件</h2><p>如果一切顺利，该安装自定义的启动映像了。 LG L90手机在这里具有解锁的引导程序，支持fastboot。 使用组合键在手机上进入快速启动模式（在手机关闭时按住VolumeUp并通过USB线将其连接到桌面）。在你的Linux电脑上运行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># fastboot devices</span><br><span class="line"># fastboot flash boot my-boot.img</span><br><span class="line"># fastboot reboot</span><br></pre></td></tr></table></figure><p>全做完了！ 您现在正在运行以Matrix Way与Android集成的Debian。 以root用户身份使用您指定的密码连接到ssh。</p><hr><p>以下内容属于扩展内容，待补。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;原文链接（需要科学Networking） &lt;a href=&quot;https://medium.com/@quantvc/running-debian-on-android-device-natively-73545c9b0757&quot; target=&quot;_blank&quot; rel=&quot;no
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>研（luan）究（fan）一下hexo-blog-encrypt的源代码吧（）</title>
    <link href="https://blog.edenjohnson.cyou/2021/01/12/hexo-blog-encrypt/"/>
    <id>https://blog.edenjohnson.cyou/2021/01/12/hexo-blog-encrypt/</id>
    <published>2021-01-12T07:29:28.000Z</published>
    <updated>2021-05-28T09:58:29.258Z</updated>
    
    <content type="html"><![CDATA[<p>最好不要知道为何我要研究一个加密插件。</p><p>最近突然对 <a href="https://github.com/D0n9X1n/hexo-blog-encrypt/blob/master/index.js#L126" target="_blank" rel="noopener">hexo-blog-encrypt</a> 这款插件有一些兴趣，就花了一点时间去阅览主要的代码index.js。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> crypto = <span class="built_in">require</span>(<span class="string">'crypto'</span>);</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">'hexo-fs'</span>);</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">const</span> log = <span class="built_in">require</span>(<span class="string">'hexo-log'</span>)(&#123; <span class="string">'debug'</span>: <span class="literal">false</span>, <span class="string">'slient'</span>: <span class="literal">false</span> &#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> defaultConfig = &#123;</span><br><span class="line">  <span class="string">'abstract'</span>: <span class="string">'Here\'s something encrypted, password is required to continue reading.'</span>,</span><br><span class="line">  <span class="string">'message'</span>: <span class="string">'Hey, password is required here.'</span>,</span><br><span class="line">  <span class="string">'theme'</span>: <span class="string">'default'</span>,</span><br><span class="line">  <span class="string">'wrong_pass_message'</span>: <span class="string">'Oh, this is an invalid password. Check and try again, please.'</span>,</span><br><span class="line">  <span class="string">'wrong_hash_message'</span>: <span class="string">'OOPS, these decrypted content may changed, but you can still have a look.'</span>,</span><br><span class="line">  <span class="string">'silent'</span>: <span class="literal">false</span>,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>这里看起来设置了一些…变量？（C与Python玩家瑟瑟发抖）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> keySalt = textToArray(<span class="string">'hexo-blog-encrypt的作者们都是大帅比!'</span>);</span><br><span class="line"><span class="keyword">const</span> ivSalt = textToArray(<span class="string">'hexo-blog-encrypt是地表最强Hexo加密插件!'</span>);</span><br></pre></td></tr></table></figure><p><strong>禁止夹带私货（）</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// As we can't detect the wrong password with AES-CBC,</span></span><br><span class="line"><span class="comment">// so adding an empty tag and check it when decrption.</span></span><br><span class="line"><span class="keyword">const</span> knownPrefix = <span class="string">"&lt;hbe-prefix&gt;&lt;/hbe-prefix&gt;"</span>;</span><br></pre></td></tr></table></figure><p>//由于我们无法使用AES-CBC检测到错误的密码， //因此，请添加一个空标签，并在进行减斜处理时进行检查？</p><p>我是没看懂注释，倒是hbe-prefix我见过：</p><p><img src="https://cdn.jsdelivr.net/gh/EdenJohnson2006/PicGoBed/images/20210112080351.png" alt="" loading="lazy"></p><p>（这个图片是从哪里截取的就不说了）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最好不要知道为何我要研究一个加密插件。&lt;/p&gt;
&lt;p&gt;最近突然对 &lt;a href=&quot;https://github.com/D0n9X1n/hexo-blog-encrypt/blob/master/index.js#L126&quot; target=&quot;_blank&quot; rel=&quot;no
      
    
    </summary>
    
    
      <category term="科技" scheme="https://blog.edenjohnson.cyou/categories/%E7%A7%91%E6%8A%80/"/>
    
    
      <category term="Linux" scheme="https://blog.edenjohnson.cyou/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>我已经放弃了任何尝试解释我在做什么的权利。</title>
    <link href="https://blog.edenjohnson.cyou/2020/12/31/dont-want-say-agian/"/>
    <id>https://blog.edenjohnson.cyou/2020/12/31/dont-want-say-agian/</id>
    <published>2020-12-31T16:59:06.000Z</published>
    <updated>2021-05-28T09:58:29.258Z</updated>
    
    <content type="html"><![CDATA[<p>今天上完体育课。</p><p>那个燕岗又来了。</p><p>他问我你的敌人是谁？</p><p>我说“是某个在班里各种传播我谣言的人。”</p><p>结果他来了句：“哦你和全班为敌啊。”</p><p>…</p><p>我已经放弃了任何尝试解释我在做什么的权利。</p><p>你们认为我在干啥，我 就在干啥。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天上完体育课。&lt;/p&gt;
&lt;p&gt;那个燕岗又来了。&lt;/p&gt;
&lt;p&gt;他问我你的敌人是谁？&lt;/p&gt;
&lt;p&gt;我说“是某个在班里各种传播我谣言的人。”&lt;/p&gt;
&lt;p&gt;结果他来了句：“哦你和全班为敌啊。”&lt;/p&gt;
&lt;p&gt;…&lt;/p&gt;
&lt;p&gt;我已经放弃了任何尝试解释我在做什么的权利。&lt;/p
      
    
    </summary>
    
    
      <category term="生活" scheme="https://blog.edenjohnson.cyou/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>Eden的Arch入教史</title>
    <link href="https://blog.edenjohnson.cyou/2020/12/20/why-do-i-use-archlinux/"/>
    <id>https://blog.edenjohnson.cyou/2020/12/20/why-do-i-use-archlinux/</id>
    <published>2020-12-20T17:02:51.000Z</published>
    <updated>2021-05-28T09:58:29.262Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p> [eden] 草我都3个月没更新了…</p></blockquote><p>如这个图所示 这就是我现在用的ArchLinux配备Plasma的样子：</p><p><a href="https://imgchr.com/i/raNmyn" target="_blank" rel="noopener"><img src="https://s3.ax1x.com/2020/12/20/raNmyn.png" alt="raNmyn.png" loading="lazy"></a></p><p>（PicGo暂时爆炸了所以先上路过）</p><blockquote><p>[eden] 诶我是什么时候用上Arch来着？</p></blockquote><p>貌似是暑假吧…</p><p>Windows用腻了就上了Linux和黑苹果。</p><p>因为黑苹果的网卡实在不敢恭维就换到了Linux。</p><p>最早是Deepin 20 社区版，后面就第一次入了Arch神教</p><p>（第一次的图片已经没有了 唯一印记就是和ChiTang的空间对话）</p><p>第一次用ArchLinux是配的GNOME</p><p>后面因为各种原因又开始在各种系统见反复横跳</p><p>直到10月份才稳定下来 使用ArchLinux。</p><p>后面又尝试了Plasma，经历了一定的调整</p><p>总算有了这个样子。</p><p>当然也遇到了喜闻乐见的滚挂（更新完KDE的主题爆炸）</p><blockquote><p>[eden] 是不是该介绍一下现在的样子？</p></blockquote><p>现在的样子…</p><p>等我先翻一下Global Theme…</p><p>哦，好了，知道了。</p><p>现在是Aritim-Dark主题+DeepinV20-Dark光标+Latte Dock栏</p><p>和上面的图的差距可能只是一个光标。</p><p>当然最近也把Typora统一成了暗色调。</p><blockquote><p>[eden] 那你告诉我 <a href="https://aur.archlinux.org/packages/com.qq.tim.spark/" target="_blank" rel="noopener">com.qq.tim.spark</a> 怎么黑色化吗！</p></blockquote><p>再等等…又有点想不起来了草…</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt; [eden] 草我都3个月没更新了…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如这个图所示 这就是我现在用的ArchLinux配备Plasma的样子：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://imgchr.com/i/raNmyn&quot; t
      
    
    </summary>
    
    
      <category term="科技" scheme="https://blog.edenjohnson.cyou/categories/%E7%A7%91%E6%8A%80/"/>
    
    
      <category term="Linux" scheme="https://blog.edenjohnson.cyou/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>没更新的一个月里 我都干了些啥（）</title>
    <link href="https://blog.edenjohnson.cyou/2020/09/04/what-do-i-do-in-last-month/"/>
    <id>https://blog.edenjohnson.cyou/2020/09/04/what-do-i-do-in-last-month/</id>
    <published>2020-09-04T22:38:50.000Z</published>
    <updated>2021-05-28T09:58:29.262Z</updated>
    
    <content type="html"><![CDATA[<p>今天是2020年9月4日。</p><p>距离上次更新博客，已经过去了34天…</p><p>在这么长的时间里，我都干了些什么？</p><h1 id="1、电脑惨遭迫害（不是"><a href="#1、电脑惨遭迫害（不是" class="headerlink" title="1、电脑惨遭迫害（不是"></a><strong>1、电脑惨遭迫害（不是</strong></h1><p>这三十多天里，这台电脑经历了4个系统</p><p>macOS，Arch Linux，Deepin 20 社区和Windows10。</p><p>（当然还有一个Windows8.1）</p><p>我至今都不知道为什么是同样的fPrintD为啥ArchLinux就能用指纹识别而Deepin 20 社区不行…</p><p>Windows 8.1因为指纹识别和驱动问题所以就用了一个下午就升级Windows 10了~</p><h1 id="2、手机换了又换"><a href="#2、手机换了又换" class="headerlink" title="2、手机换了又换"></a>2、手机换了又换</h1><p>25天前，我的vivo X7宣告抢救无效</p><p>AmOLED屏幕导致的背光去世</p><p>我***</p><p>于是我又换回了OPPO R9</p><p>结果没用几天我就因为装不上Magisk Manager换到了荣耀V9 Play</p><p>还没完</p><p>这荣耀V9 Play还被我刷成了砖头一次</p><p>（当然这件事情可能明天更新（（）</p><h1 id="3、Android求你饶了我吧（大雾"><a href="#3、Android求你饶了我吧（大雾" class="headerlink" title="3、Android求你饶了我吧（大雾"></a>3、Android求你饶了我吧（大雾</h1><p>这件事情也和荣耀V9 Play有关</p><p>我尝试编译安卓7.1给它</p><p>结果找不到java.lang</p><p>最终以失败告终</p><p>Ubuntu 20.04 ：别找我，不关我的事情.tar.gz</p><h1 id="4、开办了一个MC服务器…和Lizzie一起？"><a href="#4、开办了一个MC服务器…和Lizzie一起？" class="headerlink" title="4、开办了一个MC服务器…和Lizzie一起？"></a>4、开办了一个MC服务器…和Lizzie一起？</h1><p>（此处 Lizzie 指代 Lizzie糖心 ）</p><p>（酷安ID <a href="http://www.coolapk.com/u/3373449" target="_blank" rel="noopener">http://www.coolapk.com/u/3373449</a> ）</p><p>这个情况不能透露太多…</p><hr><p>好了貌似就这么多？</p><!--还真就这么多。-->]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天是2020年9月4日。&lt;/p&gt;
&lt;p&gt;距离上次更新博客，已经过去了34天…&lt;/p&gt;
&lt;p&gt;在这么长的时间里，我都干了些什么？&lt;/p&gt;
&lt;h1 id=&quot;1、电脑惨遭迫害（不是&quot;&gt;&lt;a href=&quot;#1、电脑惨遭迫害（不是&quot; class=&quot;headerlink&quot; title
      
    
    </summary>
    
    
      <category term="生活" scheme="https://blog.edenjohnson.cyou/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="琐记" scheme="https://blog.edenjohnson.cyou/tags/%E7%90%90%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>IPv6...？</title>
    <link href="https://blog.edenjohnson.cyou/2020/08/01/ipv6/"/>
    <id>https://blog.edenjohnson.cyou/2020/08/01/ipv6/</id>
    <published>2020-08-01T10:51:40.000Z</published>
    <updated>2021-05-28T09:58:29.258Z</updated>
    
    <content type="html"><![CDATA[<p>要上网课了。</p><p>我打开我的电脑，关掉Wi-Fi，插上网线，打开网络偏好设置…</p><p>好了，我的AX88772A绿了…</p><p>嗯？IPv6地址？</p><p><img src="https://pic.edenjohnson.cyou/images/PicGoBed/images20200801105956.png" alt="" loading="lazy"></p><p>我记得前几天没有这个东西啊</p><p><img src="https://pic.edenjohnson.cyou/images/PicGoBed/images20200801111045.png" alt="" loading="lazy"></p><p>不敢相信的我还打开了我的网关</p><p><img src="https://pic.edenjohnson.cyou/images/PicGoBed/images20200801162321.png" alt="" loading="lazy"></p><p>是真IPv6没错了</p><p>然后是 <a href="https://test-ipv6.com" target="_blank" rel="noopener">https://test-ipv6.com</a> 的信息</p><p>HTTP和HTTPS得到了相同的结果</p><p><img src="https://pic.edenjohnson.cyou/images/PicGoBed/images20200802195753.png" alt="" loading="lazy"></p><p><img src="https://pic.edenjohnson.cyou/images/PicGoBed/images20200802200645.png" alt="" loading="lazy"></p><p>可以看到。都是满满的10分（）</p><p>只不过<a href="https://test-ipv6.com" target="_blank" rel="noopener">https://test-ipv6.com</a> 给出的是…？分？（满分20分）</p><p>（因为他们的服务器过于不稳定所以出来了好几个奇奇怪怪的分）</p><p>（从8分到16分都有）</p><p>（下图是16分的一张）</p><p><img src="https://pic.edenjohnson.cyou/images/PicGoBed/images20200802201728.png" alt="" loading="lazy"></p><p>（别问我DNS6+IP6为啥是红的</p><p>（我TM都不知道</p><p>（我明明DNS地址都是IPv6的了</p><p>（谁知道这东西抽了什么疯.tar.xz））））</p><hr><p>今天下BT的时候看到了好几个IPv6</p><p><img src="https://pic.edenjohnson.cyou/images/PicGoBed/images20200802204454.png" alt="" loading="lazy"></p><p>地址如下：</p><blockquote><p>240e:390:a3f:dd61:90c6:3626:96d4:2518</p><p>2409:8a00:185e:9fb0:257c:42ad:b063:aa41</p><p>2409:8a00:185e:9fb0:fcee:54e3:97d:9a64</p><p>2409:8a62:379:2ba0:8e18:d9ff:feea:88b6</p></blockquote><p>这四个查出来如下</p><p><img src="https://pic.edenjohnson.cyou/images/PicGoBed/images20200802204646.png" alt="" loading="lazy"></p><p><img src="https://pic.edenjohnson.cyou/images/PicGoBed/images20200802204621.png" alt="" loading="lazy"></p><p><img src="https://pic.edenjohnson.cyou/images/PicGoBed/images20200802204704.png" alt="" loading="lazy"></p><p><img src="https://pic.edenjohnson.cyou/images/PicGoBed/images20200802204728.png" alt="" loading="lazy"></p><hr><p>说到IPv6，注意一下页脚。</p><p>好了，跑了，去给我的<!-- 科学方式-->MC服务器开IPv6去（）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;要上网课了。&lt;/p&gt;
&lt;p&gt;我打开我的电脑，关掉Wi-Fi，插上网线，打开网络偏好设置…&lt;/p&gt;
&lt;p&gt;好了，我的AX88772A绿了…&lt;/p&gt;
&lt;p&gt;嗯？IPv6地址？&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://pic.edenjohnson.cyou/image
      
    
    </summary>
    
    
      <category term="科技" scheme="https://blog.edenjohnson.cyou/categories/%E7%A7%91%E6%8A%80/"/>
    
    
      <category term="网络" scheme="https://blog.edenjohnson.cyou/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>给被苹果遗弃的iPhone6 Plus越个狱吧</title>
    <link href="https://blog.edenjohnson.cyou/2020/07/27/jailbreak-iphone6plus-with-uncover/"/>
    <id>https://blog.edenjohnson.cyou/2020/07/27/jailbreak-iphone6plus-with-uncover/</id>
    <published>2020-07-27T16:16:44.000Z</published>
    <updated>2021-05-28T09:58:29.258Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://pic.edenjohnson.cyou/images/PicGoBed/images20200727162103.jpg" alt="" loading="lazy"></p><p>(当然这部iPhone6 Plus并不是我的 而是我大姑的)</p><p>我现在在我祖母家。</p><p>我表姐随手拿起手边我大姑的iPhone6 Plus，说:充上电还能用吗？我回答:那是肯定的。</p><p>iPhone6系的iOS版本永远停在了12.4.8 当时这一决定可谓引起了轩然大波，因为在我和很多iOS用户以前的印象里，每一代iOS更新最多只遗弃一代设备的…这回却是把iPhone5s和iPhone6系一刀砍掉…</p><p>对了，这部iPhone6 Plus是官方的售后机，型号N开头…</p><p><img src="https://pic.edenjohnson.cyou/images/PicGoBed/images20200727161835.png" alt="" loading="lazy"></p><p><img src="https://pic.edenjohnson.cyou/images/PicGoBed/images20200727161911.png" alt="" loading="lazy"></p><p>“就很离谱”</p><p>扯到哪里去了</p><p>好了 线刷12.4.8完成了，让我们越狱吧</p><p>这回我准备用unc0ver试一把越狱，毕竟我上一部iPhone还是iPhone5</p><p>线打开unc0ver官网 </p><p>点Download选项</p><p>选择Windows</p><p>(再次强调 我在我祖母家 电脑是我表姐的 我的小米笔记本Air早就装了黑苹果)</p><p><img src="https://pic.edenjohnson.cyou/images/PicGoBed/images20200727162557.png" alt="" loading="lazy"></p><p>第一部是要安装iTunes</p><p><img src="https://pic.edenjohnson.cyou/images/PicGoBed/images20200727162622.png" alt="" loading="lazy"></p><p>然后电脑重启了</p><p><img src="https://pic.edenjohnson.cyou/images/PicGoBed/images20200727162632.jpg" alt="" loading="lazy"></p><p>现在iTunes正常了 连接到了iPhone</p><p><img src="https://pic.edenjohnson.cyou/images/PicGoBed/images20200727163215.png" alt="" loading="lazy"></p><p>然后下载altstore</p><p><img src="https://pic.edenjohnson.cyou/images/PicGoBed/images20200727163253.png" alt="" loading="lazy"></p><p><img src="https://pic.edenjohnson.cyou/images/PicGoBed/images20200727163312.png" alt="" loading="lazy"></p><p>解压</p><p><img src="https://pic.edenjohnson.cyou/images/PicGoBed/images20200727163327.png" alt="" loading="lazy"></p><p>安装</p><p>然后打开</p><p><img src="https://pic.edenjohnson.cyou/images/PicGoBed/images20200727163350.png" alt="" loading="lazy"></p><p><img src="https://pic.edenjohnson.cyou/images/PicGoBed/images20200727163739.jpg" alt="" loading="lazy"></p><p>尝试安装时…</p><p><img src="https://pic.edenjohnson.cyou/images/PicGoBed/images20200727163403.png" alt="" loading="lazy"></p><p>啊这…</p><p>算了算了 装上吧</p><p><img src="https://pic.edenjohnson.cyou/images/PicGoBed/images20200727163416.png" alt="" loading="lazy"></p><p>然后又来重启</p><p><img src="https://pic.edenjohnson.cyou/images/PicGoBed/images20200727163511.png" alt="" loading="lazy"></p><p>…</p><p>现在就可以安装了吧</p><p><img src="https://pic.edenjohnson.cyou/images/PicGoBed/images20200727163527.png" alt="" loading="lazy"></p><p>额…</p><p>看起来需要试试别的办法了</p><p>要不…直接手机安装？</p><p><img src="https://pic.edenjohnson.cyou/images/PicGoBed/images20200727163548.png" alt="" loading="lazy"></p><p>第一步 先越狱</p><p>用爱思助手，结果</p><p>他直接给我装了一个unc0ver…</p><p>果不其然 失败</p><p><img src="https://pic.edenjohnson.cyou/images/PicGoBed/images20200727163607.png" alt="" loading="lazy"></p><p>让我重启一下手机</p><p><img src="https://pic.edenjohnson.cyou/images/PicGoBed/images20200727163842.jpg" alt="" loading="lazy"></p><p>然后我又试了几次</p><p>好了成功了</p><p><img src="https://pic.edenjohnson.cyou/images/PicGoBed/images20200727164658.png" alt="" loading="lazy"></p><p>接下来打开unc0ver</p><p>尝试一下</p><p>(此处省略不下10次的卡第二步和闪退和UI重启和硬件重启)</p><p>然后我Google一下</p><p>才发现 我没开飞行模式</p><p>草 死了</p><p>于是它很顺利的通过了</p><p>重启了</p><p>重启后 继续越狱</p><p>结果又是2/31硬件重启草</p><p>重启后我又试了一次</p><p>此时28/31卡了很长时间</p><p>然后 它成功了</p><p>ohhhhhhhhhhhhhhh</p><p>Cydia也能正常打开</p><p>虽然重启后需要再越狱一遍</p><p>但这已经是比较好的方法了</p><p>(有机会我试试checkra1n)</p><p>（但那估计需要很久以后了…</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://pic.edenjohnson.cyou/images/PicGoBed/images20200727162103.jpg&quot; alt=&quot;&quot; loading=&quot;lazy&quot;&gt;&lt;/p&gt;
&lt;p&gt;(当然这部iPhone6 Plus并不是我的 而是我
      
    
    </summary>
    
    
      <category term="科技" scheme="https://blog.edenjohnson.cyou/categories/%E7%A7%91%E6%8A%80/"/>
    
    
      <category term="刷机" scheme="https://blog.edenjohnson.cyou/tags/%E5%88%B7%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>变了？没变？</title>
    <link href="https://blog.edenjohnson.cyou/2020/07/26/changed/"/>
    <id>https://blog.edenjohnson.cyou/2020/07/26/changed/</id>
    <published>2020-07-26T01:41:18.000Z</published>
    <updated>2021-05-28T09:58:29.258Z</updated>
    
    <content type="html"><![CDATA[<p>发现不一样了吗？</p><p>现在时间：2020年7月26日1时42分。</p><p>博客主体恢复完毕。</p><p>我太困了，起来再完善这篇文章吧。</p><hr><p>我回来了。</p><p>现在时间：2020年7月26日11时30分。</p><p>答案是变了，变了很多。</p><p>因为这个博客被重置了一次。</p><p><img src="https://pic.edenjohnson.cyou/images/images20200726115111.png" alt="" loading="lazy"></p><p>7月16日，我尝试换OpenCore引导。</p><p>结果一换，我的黑苹果被锁了…</p><p><img src="https://pic.edenjohnson.cyou/images/images20200726130940.jpg" alt="" loading="lazy"><strong>grass(Chinese and Japanese)</strong></p><p>于是我抹盘重装了</p><p><img src="https://pic.edenjohnson.cyou/images/images20200726163951.jpg" alt="" loading="lazy"></p><p><img src="https://pic.edenjohnson.cyou/images/images20200726164154.jpg" alt="" loading="lazy"></p><p>为什么我这么大胆呢？</p><p>因为我还以为我的所有数据在移动硬盘里。</p><p><img src="https://pic.edenjohnson.cyou/images/images20200726164345.jpg" alt="" loading="lazy"></p><p>直到我装完后的18点20分…</p><p><img src="https://pic.edenjohnson.cyou/images/images20200726164650.jpg" alt="" loading="lazy"></p><p>WOC我把我博客数据给抹了草啊啊啊啊啊</p><p>这还没完，我尝试给这块移动硬盘重装Ventoy</p><p>（用的虚拟机）</p><p>结果全移动硬盘也被抹了…</p><p>（求我此时的心理阴影面积.tar.xz）</p><hr><p>所以我才鸽这么久才更…</p><p>说多全是泪，不说了…</p><!-- 我能说我当场就傻了了吗 -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;发现不一样了吗？&lt;/p&gt;
&lt;p&gt;现在时间：2020年7月26日1时42分。&lt;/p&gt;
&lt;p&gt;博客主体恢复完毕。&lt;/p&gt;
&lt;p&gt;我太困了，起来再完善这篇文章吧。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;我回来了。&lt;/p&gt;
&lt;p&gt;现在时间：2020年7月26日11时30分。&lt;/p&gt;
&lt;p&gt;答案是
      
    
    </summary>
    
    
      <category term="科技" scheme="https://blog.edenjohnson.cyou/categories/%E7%A7%91%E6%8A%80/"/>
    
    
      <category term="站点" scheme="https://blog.edenjohnson.cyou/tags/%E7%AB%99%E7%82%B9/"/>
    
  </entry>
  
  <entry>
    <title>买华为=爱国？（对”买华为≠爱国?“的思考）</title>
    <link href="https://blog.edenjohnson.cyou/2020/07/16/huawei-is-china/"/>
    <id>https://blog.edenjohnson.cyou/2020/07/16/huawei-is-china/</id>
    <published>2020-07-16T01:34:01.000Z</published>
    <updated>2021-05-28T09:58:29.258Z</updated>
    
    <content type="html"><![CDATA[<p>总算考完试了…</p><p>打开电脑的时候，我的irReader给我推了 <a href="https://xfox.fun/archives/343" target="_blank" rel="noopener">https://xfox.fun/archives/343</a> 这个文章</p><p>当我看完后，我就发现一个问题：这不写的就是我们这类人？</p><p>（我十分讨厌道德绑架行为）</p><p>所以就有了这篇文章。</p><blockquote><p>爱国是综合的多方面的，就当下形式看，你乐意买华为的产品能帮助华为活下去，变相的也是让中国的大量高新技术能发展下去，如果中国华为被迫放弃海思。且不说mtk还在湾湾那边干活，mtk也有很多东西受限，比如海思麒麟和联发科都在用arm架构。当中国的芯片再度陷入国外垄断，现在是信息时代啊，你拿什么跟人家拼？</p></blockquote><p>首先 是“形势”不是“形式”，</p><p>好了，说内容，我就想知道一个问题：华为=中国高新技术？</p><p>你咋不说华为是民企呢？</p><p>你咋不说魅族还是央企控股呢？</p><p>？？？？？？？？？？？？？？？</p><blockquote><p>所以华为不能死，别再扯华为这有毛病那儿有毛病，说的好像其他企业没点黑料一样，自以为信息面很广吗？</p></blockquote><p>？</p><p>华为消费者服务真的很傻逼好吗？</p><p>华为的通信业务，是真的可以</p><p>但是 P7（我真用过） P8 P9 P10 P20 全有黑料</p><p>试问哪家公司每款手机都有黑料呢？</p><p>你要说小米，啊也行，我没话可说</p><blockquote><p>想要华为不死，普通人能做的，买他产品，让他赚得了钱，这可能就是最大支持了。<br>如果你还想抓住“我不交爱国税”，这句话，当然可以，你有权买高通soc的手机，你可以去用苹果这是你们的自由，我誓死捍卫你们合法的选择权利。</p></blockquote><p>首先，谢谢你还有理智，</p><p>没有像别的“不买华为不爱国”的人一样进行道德绑架。</p><p>但是，华为的溢价是真的太高了。</p><blockquote><p>假如中国没有人去支持国产，都不去“交爱国税”，拭目以待，如果中国造不出来芯片，你还能活的多潇洒？</p></blockquote><p>？</p><p>国家资助被你吃了？</p><p>中国公民的税，不都是给了科研机构？</p><p>再说了，华为根本不对外卖麒麟好吗？</p><p>都是赚钱…</p><hr><p>此处待补充…</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;总算考完试了…&lt;/p&gt;
&lt;p&gt;打开电脑的时候，我的irReader给我推了 &lt;a href=&quot;https://xfox.fun/archives/343&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://xfox.fun/archives/34
      
    
    </summary>
    
    
      <category term="生活" scheme="https://blog.edenjohnson.cyou/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="思考" scheme="https://blog.edenjohnson.cyou/tags/%E6%80%9D%E8%80%83/"/>
    
  </entry>
  
  <entry>
    <title>OPPO R9的MIUI10？你没在Kidding Me？</title>
    <link href="https://blog.edenjohnson.cyou/2020/07/11/miui-10-for-oppo-r9-6.0/"/>
    <id>https://blog.edenjohnson.cyou/2020/07/11/miui-10-for-oppo-r9-6.0/</id>
    <published>2020-07-11T01:31:20.000Z</published>
    <updated>2021-05-28T09:58:29.258Z</updated>
    
    <content type="html"><![CDATA[<p>今天刷视频，刷到了这个：</p><p><a href="https://www.bilibili.com/video/BV1CJ411J7MB" target="_blank" rel="noopener">https://www.bilibili.com/video/BV1CJ411J7MB</a></p><p>然后我看了看我手边的OPPO R9tm…</p><p><img src="https://pic.edenjohnson.cyou/images/20200711225749.png" alt="img" loading="lazy"></p><p>👴的刷机青春又要回来了</p><p><img src="https://pic.edenjohnson.cyou/images/20200711225630.png" alt="img" loading="lazy"></p><p>包已经下好了，让我们开始吧。</p><hr><p><strong>注意！注意！注意！</strong></p><p>因为这部手机<strong>已经</strong>被折腾过，所以手机上已有TWRP，如果你一直正常使用，请按照上面视频进行操作！！！</p><p><strong><em>一定要注意！！！！！\</em></strong></p><hr><p>关机，进TWRP</p><p><img src="https://pic.edenjohnson.cyou/images/20200711231015.png" alt="img" loading="lazy"></p><p>国际惯例四清</p><p><img src="https://pic.edenjohnson.cyou/images/20200711231055.jpg" alt="img" loading="lazy"></p><p>然后扔包进去～</p><p><img src="https://pic.edenjohnson.cyou/images/20200711231153.png" alt="img" loading="lazy"></p><p><del>忽略我凌乱还疏于整理的桌子吧www</del></p><p>然后我们开刷吧</p><p><img src="https://pic.edenjohnson.cyou/images/20200711231257.png" alt="img" loading="lazy"></p><p>刷完之后…</p><p><img src="https://pic.edenjohnson.cyou/images/20200711232135.png" alt="img" loading="lazy"></p><p>开机（其实我感觉要翻车）</p><p><img src="https://pic.edenjohnson.cyou/images/20200711232235.png" alt="img" loading="lazy"></p><p><del>这个定制开机画面…还行</del></p><p><img src="https://pic.edenjohnson.cyou/images/20200711232509.png" alt="img" loading="lazy"></p><p>ohhhhhhhhhhhhhhhhhhhhhhh（幻视）</p><p><img src="https://pic.edenjohnson.cyou/images/20200711232537.png" alt="img" loading="lazy"></p><p>好了可以了 </p><p><del>重获新生（不是）</del></p><hr><p>这个包有几个Bug</p><p>1、指纹识别不能用，<del>然后他们弄了个2D面部</del></p><p>2、SuperSU…这年头了还不用Magisk？<del>你可以自己刷啊</del></p><hr><p>啊我爸叫我睡觉了，打住于此吧。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天刷视频，刷到了这个：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.bilibili.com/video/BV1CJ411J7MB&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.bilibili.com/video/B
      
    
    </summary>
    
    
      <category term="科技" scheme="https://blog.edenjohnson.cyou/categories/%E7%A7%91%E6%8A%80/"/>
    
    
      <category term="刷机" scheme="https://blog.edenjohnson.cyou/tags/%E5%88%B7%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>macOS上Hexo写作环境的搭建</title>
    <link href="https://blog.edenjohnson.cyou/2020/06/27/howto-complete-hexo-environment-in-macos/"/>
    <id>https://blog.edenjohnson.cyou/2020/06/27/howto-complete-hexo-environment-in-macos/</id>
    <published>2020-06-27T01:27:12.000Z</published>
    <updated>2021-05-28T09:58:29.258Z</updated>
    
    <content type="html"><![CDATA[<p>因为之前全盘装了黑苹果，所以自然对macOS下的环境有一些要求。</p><p><img src="https://pic.edenjohnson.cyou/images/20200627163435.png" alt="img" loading="lazy"></p><p>然后我的动态博客因为[数据删除]跑路而死亡了。</p><p>（我一定要问候服务商的Mother</p><p>然后我想起来我的GitHub学生账号</p><p>于是就想着用Hexo建博客。</p><p>好吧，废话不说，我们开始吧。</p><h1 id="开端：Homebrew的安装。"><a href="#开端：Homebrew的安装。" class="headerlink" title="开端：Homebrew的安装。"></a>开端：Homebrew的安装。</h1><p>如果你了解过Windows下的安装，你肯定会疑惑：en？Homebrew？不应该装Git和NodeJS？</p><p>您先安静，然后打开Homebrew的网站：<a href="https://brew.sh/index_zh-cn" target="_blank" rel="noopener">https://brew.sh/index_zh-cn</a></p><p>然后往中间看</p><p>看到</p><blockquote><p>macOS（或 Linux）缺失的软件包的管理器</p></blockquote><p>这一行字了吗？</p><p>我们就用Homebrew装Git和NodeJS。</p><p><img src="https://pic.edenjohnson.cyou/images/20200627171542.png" alt="img" loading="lazy"></p><p>主页中已经有代码了，直接复制到终端就好了。</p><blockquote><p>警告：因为一堵墙树在你面前，所以你的速度可能会掉到100b左右甚至出现fatal: the remote end hung up unexpectedly fatal: early EOF问题 所以你需要足够的耐心多试几次。</p></blockquote><blockquote><p><del>我才不会告诉你我试过10次，2天才安装完成。</del></p></blockquote><p><img src="https://pic.edenjohnson.cyou/images/20200627180538.png" alt="img" loading="lazy"></p><p>macOS自带Git，所以你只需要安装NodeJS就好了。</p><blockquote><p>当然我的黑苹果是macOS Catalina 10.15.6 开发者预览，如果有装macOS 10.13 High Sierra的朋友我也不清楚具体情况，并且我翻源代码也有看见没有Git的提示，所以请各位自行检查，谢谢。</p></blockquote><h1 id="接续：NodeJS的安装"><a href="#接续：NodeJS的安装" class="headerlink" title="接续：NodeJS的安装"></a>接续：NodeJS的安装</h1><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install node</span><br></pre></td></tr></table></figure></blockquote><p><img src="https://pic.edenjohnson.cyou/images/20200627180815.png" alt="img" loading="lazy"></p><p>安装完成后，最好切换npm的源，否则你又会体验装Homebrew时候的绝望了</p><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry https:&#x2F;&#x2F;registry.npm.taobao.org</span><br></pre></td></tr></table></figure></blockquote><p><img src="https://pic.edenjohnson.cyou/images/20200627181439.png" alt="img" loading="lazy"></p><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config get registry</span><br></pre></td></tr></table></figure></blockquote><p>如果返回如下：</p><blockquote><p><a href="https://registry.npm.taobao.org" target="_blank" rel="noopener">https://registry.npm.taobao.org</a></p></blockquote><p>那么你就可以进行下一步了。</p><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry&#x3D;https:&#x2F;&#x2F;registry.npm.taobao.org</span><br></pre></td></tr></table></figure></blockquote><p><img src="https://pic.edenjohnson.cyou/images/20200627182701.png" alt="img" loading="lazy"></p><h1 id="终了：Hexo及相关插件的安装"><a href="#终了：Hexo及相关插件的安装" class="headerlink" title="终了：Hexo及相关插件的安装"></a>终了：Hexo及相关插件的安装</h1><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install -g hexo</span><br></pre></td></tr></table></figure></blockquote><p><img src="https://pic.edenjohnson.cyou/images/20200627182904.png" alt="img" loading="lazy"></p><p>以及大多数人用Hexo都是要Git到某些地方作小站的，所以安装Git插件也是有必要的。</p><blockquote><p>（前提是Git前你需要建议一个工作目录，但是这不是本篇的主题，这边建议到 <a href="https://chitang.tk/2020/06/26/Hexo博客折腾笔记/" target="_blank" rel="noopener">https://chitang.tk/2020/06/26/Hexo%E5%8D%9A%E5%AE%A2%E6%8A%98%E8%85%BE%E7%AC%94%E8%AE%B0/</a> 了解）</p><p>（又商业互吹）</p></blockquote><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></blockquote><p><img src="https://pic.edenjohnson.cyou/images/20200627184427.png" alt="img" loading="lazy"></p><p>然后你就可以Start Blogging With Hexo（官方语）了</p><h1 id="Some-Advice：macOS下写Hexo博客的几个实用程序"><a href="#Some-Advice：macOS下写Hexo博客的几个实用程序" class="headerlink" title="Some Advice：macOS下写Hexo博客的几个实用程序"></a>Some Advice：macOS下写Hexo博客的几个实用程序</h1><h2 id="1、VSCode"><a href="#1、VSCode" class="headerlink" title="1、VSCode"></a>1、VSCode</h2><p>为什么选VSCode呢？因为VSCode可以添加文件夹，并且也有一定MarkDown支持，所以比较适合管理配置文件，简单写写文章之类的。</p><p><img src="https://pic.edenjohnson.cyou/images/20200627185128.png" alt="img" loading="lazy"></p><h2 id="2、Typora"><a href="#2、Typora" class="headerlink" title="2、Typora"></a>2、Typora</h2><p>Typora就是专业的MarkDown编辑器了，有实时预览，也可以同时添加文件夹，所以我写文章主要会用Typora。</p><blockquote><p>Typora 在OS X还是Beta版本，但是我这几天用下来，并没有出现问题，所以还是推荐了过来。</p></blockquote><p><img src="https://pic.edenjohnson.cyou/images/20200627185159.png" alt="img" loading="lazy"></p><p>就写到这么多。关于MarkDown和其他Hexo事宜可以另找Windows文章。</p><p>（因为都是一个Hexo）</p><hr><p>没了。</p><!--  当然不可能完的。这个文章到建站之后才想起来写，中间黑苹果因为蓝牙驱动待机问题多次重启，我当时还以为之前的执行记录都没了，直到我看见了这个：恢复于... 才把这期文章保了下来。 -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;因为之前全盘装了黑苹果，所以自然对macOS下的环境有一些要求。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://pic.edenjohnson.cyou/images/20200627163435.png&quot; alt=&quot;img&quot; loading=&quot;lazy&quot;&gt;&lt;/p&gt;
&lt;
      
    
    </summary>
    
    
      <category term="科技" scheme="https://blog.edenjohnson.cyou/categories/%E7%A7%91%E6%8A%80/"/>
    
    
      <category term="HEXO" scheme="https://blog.edenjohnson.cyou/tags/HEXO/"/>
    
  </entry>
  
  <entry>
    <title>迁移站点后的第一个Post</title>
    <link href="https://blog.edenjohnson.cyou/2020/06/24/the-true-first-post/"/>
    <id>https://blog.edenjohnson.cyou/2020/06/24/the-true-first-post/</id>
    <published>2020-06-24T01:21:42.000Z</published>
    <updated>2021-05-28T09:58:29.258Z</updated>
    
    <content type="html"><![CDATA[<p>由于和[数据删除]闹掰</p><p>我的aws马上就会停机</p><p><del>为了减小对于我的损失</del></p><p>我先跑出来了（？？？</p><p>原站点的文章等之后会迁出，请大家放心</p><p>（跑了跑了）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;由于和[数据删除]闹掰&lt;/p&gt;
&lt;p&gt;我的aws马上就会停机&lt;/p&gt;
&lt;p&gt;&lt;del&gt;为了减小对于我的损失&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;我先跑出来了（？？？&lt;/p&gt;
&lt;p&gt;原站点的文章等之后会迁出，请大家放心&lt;/p&gt;
&lt;p&gt;（跑了跑了）&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="生活" scheme="https://blog.edenjohnson.cyou/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="琐记" scheme="https://blog.edenjohnson.cyou/tags/%E7%90%90%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://blog.edenjohnson.cyou/2020/06/24/hello-world/"/>
    <id>https://blog.edenjohnson.cyou/2020/06/24/hello-world/</id>
    <published>2020-06-24T01:16:09.000Z</published>
    <updated>2021-05-28T09:58:29.258Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
